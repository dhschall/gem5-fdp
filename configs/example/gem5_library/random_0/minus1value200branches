
---------- Begin Simulation Statistics ----------
simSeconds                                   0.000002                       # Number of seconds simulated (Second)
simTicks                                      1673658                       # Number of ticks simulated (Tick)
finalTick                                    15125526                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 58000264                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     189128                       # Number of bytes of host memory used (Byte)
simInsts                                        10146                       # Number of instructions simulated (Count)
simOps                                          11522                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   350041                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     397437                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1296                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1296                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1296                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1296                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandMisses::processor.cores.core.data            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.overallMisses::processor.cores.core.data            1                       # number of overall misses (Count)
board.cache_hierarchy.dcache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.dcache.demandMissLatency::processor.cores.core.data       101898                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.demandMissLatency::total       101898                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::processor.cores.core.data       101898                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::total       101898                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1297                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1297                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1297                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1297                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandMissRate::processor.cores.core.data     0.000771                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMissRate::total     0.000771                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::processor.cores.core.data     0.000771                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::total     0.000771                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMissLatency::processor.cores.core.data       101898                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMissLatency::total       101898                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::processor.cores.core.data       101898                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::total       101898                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.demandMshrMisses::processor.cores.core.data            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::processor.cores.core.data            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::total            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMissLatency::processor.cores.core.data       101565                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissLatency::total       101565                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::processor.cores.core.data       101565                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::total       101565                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissRate::processor.cores.core.data     0.000771                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMshrMissRate::total     0.000771                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::processor.cores.core.data     0.000771                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::total     0.000771                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::processor.cores.core.data       101565                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::total       101565                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::processor.cores.core.data       101565                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::total       101565                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         1118                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         1118                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.misses::processor.cores.core.data            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.missLatency::processor.cores.core.data       101898                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.missLatency::total       101898                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         1119                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         1119                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.missRate::processor.cores.core.data     0.000894                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.missRate::total     0.000894                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::processor.cores.core.data       101898                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::total       101898                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.mshrMisses::processor.cores.core.data            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::processor.cores.core.data       101565                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::total       101565                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.000894                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::total     0.000894                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data       101565                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::total       101565                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse   270.102667                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data   200.102667                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.390826                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.527544                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::0           26                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           44                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           83                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          118                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        10393                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        10393                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         1749                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         1749                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         1749                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         1749                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          138                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          138                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          138                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          138                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst      2984346                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total      2984346                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst      2984346                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total      2984346                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         1887                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         1887                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         1887                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         1887                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.073132                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.073132                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.073132                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.073132                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 21625.695652                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 21625.695652                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 21625.695652                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 21625.695652                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks           69                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total           69                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          137                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          137                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          137                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          137                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher           66                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total           67                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst        69930                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total        69930                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst        69930                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      4589716                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      4659646                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000530                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000530                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000530                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.035506                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst        69930                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total        69930                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst        69930                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 69541.151515                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 69546.955224                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements           69                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher           66                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total           66                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      4589716                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      4589716                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 69541.151515                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 69541.151515                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         1749                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         1749                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          138                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          138                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst      2984346                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total      2984346                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         1887                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         1887                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.073132                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.073132                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 21625.695652                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 21625.695652                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          137                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          137                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst        69930                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total        69930                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000530                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000530                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst        69930                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total        69930                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued           67                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           25                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            8                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.119403                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.888889                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2443                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2376                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2443                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded           67                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2443                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse   511.570235                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs          701                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs           69                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    10.159420                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    77.522282                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   434.047953                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.151411                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.847750                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total     0.999161                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          372                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1           66                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           60                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           14                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        15167                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        15167                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp           72                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean           69                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq           68                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port          207                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total          207                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port            2                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::total            2                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total          209                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         8960                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total         8960                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port           64                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::total           64                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total         9024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples           68                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean     0.014706                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev     0.121268                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0           67     98.53%     98.53% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            1      1.47%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total           68                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy        73910                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy        61113                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy          690                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests          137                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests           69                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            1                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples        68.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples        63.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000004376110                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            5                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            4                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState            164                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState            71                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                     68                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                    68                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                   68                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                  68                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 3                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  2.76                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 25.79                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6               68                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6              68                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                 18                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                 15                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                 24                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  8                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 6                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            4                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    15.750000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    15.623647                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     2.362908                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::14            2     50.00%     50.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16            1     25.00%     75.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1     25.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            4                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            5                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            5    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            5                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                192                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys               4352                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys            4352                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         2600292293.88560867                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         2600292293.88560867                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                  1561104                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 11478.71                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst           64                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data           64                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher         4032                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks         4800                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 38239592.557141304016                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 38239592.557141304016                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 2409094331.099902153015                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 2867969441.785597801208                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher           66                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks           68                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst        46250                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data        77878                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher      2870082                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks     38874166                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     46250.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     77878.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     43486.09                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    571678.91                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst           64                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data           64                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher         4352                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total         4480                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst           64                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher         4352                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total         4416                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            1                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data            1                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher           68                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total           70                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     38239593                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data     38239593                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   2600292294                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   2676771479                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     38239593                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   2600292294                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   2638531886                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     38239593                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data     38239593                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   2600292294                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   2676771479                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts              65                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts             75                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0           57                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           10                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           11                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            3                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            3                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat            1775460                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat           325000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat       2994210                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           27314.77                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      46064.77                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits             58                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits            62                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        89.23                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        82.67                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples           21                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   469.333333                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   322.124711                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   368.393992                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            3     14.29%     14.29% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255            4     19.05%     33.33% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            4     19.05%     52.38% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            2      9.52%     61.90% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            1      4.76%     66.67% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            1      4.76%     71.43% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1      4.76%     76.19% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151            5     23.81%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total           21                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead             4160                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          4800                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2485.573516                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        2867.969442                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              41.82                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          19.42                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         22.41                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          85.71                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       564060                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       284625                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      2077740                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy       892620                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      3218220                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy            0                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      7037265                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  4204.721036                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT      7057446                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       314160                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       136620                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       978180                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       694260                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      3093960                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy            0                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      5217180                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower  3117.231836                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT      6784875                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             5026                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.238402                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.308794                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            4390                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           14                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           3713                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued            1                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         2740                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         1808                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           13                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3664                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.013373                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.557203                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         2181     59.53%     59.53% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          506     13.81%     73.34% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          337      9.20%     82.53% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          280      7.64%     90.17% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          187      5.10%     95.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          122      3.33%     98.61% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           30      0.82%     99.43% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7           13      0.35%     99.78% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            8      0.22%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3664                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            2     14.29%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     14.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            6     42.86%     57.14% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            6     42.86%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.13%      0.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2023     54.48%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.05%     54.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.05%     54.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     54.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     54.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     54.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     54.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     54.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     54.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.08%     54.81% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     54.81% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.08%     54.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     54.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.08%     54.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.16%     55.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     55.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.16%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     55.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1272     34.26%     89.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          388     10.45%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         3713                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.738758                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                  14                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.003771                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        10978                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         7155                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         3034                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          127                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         3660                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           62                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          422                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled               7                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles            1362                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1298                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          595                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads            7                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores           26                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2115                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          291                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         1258                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2456                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1187                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          117                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          291                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           60                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          231                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           80      7.43%      7.43% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           47      4.37%     11.80% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.84%     12.64% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond          860     79.93%     92.57% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           56      5.20%     97.77% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     97.77% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      2.23%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1076                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           74      7.07%      7.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           41      3.92%     10.98% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.86%     11.84% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond          846     80.80%     92.65% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           55      5.25%     97.90% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     97.90% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      2.10%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1047                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2456                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.118893                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.638864                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           24      0.98%      0.98% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           16      0.65%      1.63% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.61%      2.24% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15           11      0.45%      2.69% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            7      0.29%      2.97% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           17      0.69%      3.66% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            4      0.16%      3.83% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.20%      4.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2357     95.97%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2456                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           28     25.23%     25.23% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           21     18.92%     44.14% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.90%     45.05% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           43     38.74%     83.78% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           13     11.71%     95.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     95.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      4.50%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          111                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           83     10.38%     10.38% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           45      5.62%     16.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.62%     16.62% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          592     74.00%     90.62% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           55      6.88%     97.50% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     97.50% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      2.50%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          800                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           23      7.90%      7.90% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           28      9.62%     17.53% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.72%     19.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          198     68.04%     87.29% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.00%     98.28% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.28% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.72%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          291                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.09%      6.09% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.71%     10.80% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.39%     12.19% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          297     82.27%     94.46% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           13      3.60%     98.06% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.06% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.94%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          361                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.43%      8.43% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.62%     14.06% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.01%     16.06% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          191     76.71%     92.77% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           13      5.22%     97.99% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.99% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.01%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          249                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget           18     16.22%     16.22% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           65     58.56%     74.77% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           28     25.23%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          111                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          288     98.97%     98.97% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            1      0.34%     99.31% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.69%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          291                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           28     46.67%     46.67% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     46.67% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     46.67% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     53.33%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           60                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           43                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           25                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          291                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          291                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          111                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          111                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          286                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          290                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            1                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          111                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           28     25.23%     25.23% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           21     18.92%     44.14% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.90%     45.05% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           43     38.74%     83.78% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           13     11.71%     95.50% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     95.50% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      4.50%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          111                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          193     75.10%     92.22% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           13      5.06%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           21      7.34%      7.34% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           28      9.79%     17.13% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.75%     18.88% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.18%     87.06% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.19%     98.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.75%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          286                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          222                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           20                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           81                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           82                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           59                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           71                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            3                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            3                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            1                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            3                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         2749                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          230                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         3221                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.521888                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.243081                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         2468     76.62%     76.62% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          309      9.59%     86.22% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          267      8.29%     94.50% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           56      1.74%     96.24% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           40      1.24%     97.49% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           30      0.93%     98.42% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           19      0.59%     99.01% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           10      0.31%     99.32% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           22      0.68%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         3221                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1091     64.90%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          382     22.72%     89.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.71%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1681                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           22                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1552                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1681                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1542                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1671                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.238402                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.308794                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          562                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1413                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          382                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1091     64.90%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          382     22.72%     89.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.71%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1681                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          361                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          327                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          297                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           64                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         1342                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          533                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1309                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          249                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          231                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           74                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           63                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         5616                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          186                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3291                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          484                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         1154                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          325                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.654795                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads          960                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1503                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         3243                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1855                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1479                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          477                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           24                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2281                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          582                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         1887                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          117                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         3664                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.743177                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.914593                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         1658     45.25%     45.25% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          354      9.66%     54.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          296      8.08%     62.99% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          288      7.86%     70.85% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4          940     25.66%     96.51% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           40      1.09%     97.60% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           32      0.87%     98.47% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           23      0.63%     99.10% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           33      0.90%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3664                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         5991                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.192002                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1076                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.214087                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         1092                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2456                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           579                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           291                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2456                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.554560                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.247124                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          830     33.79%     33.79% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1285     52.32%     86.12% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          341     13.88%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2456                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          231                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          213                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         4430                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           92                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1298                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          595                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           14                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          103                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            3                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          286                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          289                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3121                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3089                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1749                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         2681                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.614604                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.652369                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads           32                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads          916                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses           29                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          103                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          415                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          382                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.981675                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    15.604770                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          381     99.74%     99.74% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows            1      0.26%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          307                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          382                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     15125526                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          231                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         1500                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          212                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles          317                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1399                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         5242                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         6094                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups         7635                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         5257                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2090                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         4008                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            9                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            6                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           69                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             7629                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes            9307                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1542                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1671                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000001                       # Number of seconds simulated (Second)
simTicks                                      1107558                       # Number of ticks simulated (Tick)
finalTick                                    16246404                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 38315938                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     191176                       # Number of bytes of host memory used (Byte)
simInsts                                        11705                       # Number of instructions simulated (Count)
simOps                                          13210                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   403648                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     455462                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1376                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1376                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1376                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1376                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1376                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1376                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1376                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1376                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         1198                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         1198                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         1198                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         1198                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          271                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          201                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.392578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.529297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::0           15                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           55                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           74                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          127                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        11024                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        11024                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2375                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2375                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2375                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2375                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         2375                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         2375                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         2375                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         2375                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2375                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2375                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         2375                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         2375                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2643                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2643                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2643                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded            0                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2643                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst           74                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher          438                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.144531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.855469                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          339                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1           99                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           53                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           21                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        19000                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        19000                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 21.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples           12                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   357.333333                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   276.076259                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   241.723107                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::64-127            2     16.67%     16.67% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::192-255            1      8.33%     25.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-319            4     33.33%     58.33% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-447            1      8.33%     66.67% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::448-511            1      8.33%     75.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::576-639            1      8.33%     83.33% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::704-767            1      8.33%     91.67% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::832-895            1      8.33%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total           12                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy        15180                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       309510                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       164640                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1103970                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   996.760441                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE       400154                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT       460724                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy        30360                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       309510                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy       164640                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1119150                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower  1010.466269                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE       400154                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT       460724                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             3326                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.134788                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.468431                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            5528                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           11                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           4130                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued            1                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3868                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         2882                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved            8                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3326                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.241732                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.707449                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         1916     57.61%     57.61% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          185      5.56%     63.17% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          459     13.80%     76.97% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          309      9.29%     86.26% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          283      8.51%     94.77% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          100      3.01%     97.78% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           58      1.74%     99.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            8      0.24%     99.76% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            8      0.24%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3326                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            2     16.67%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     16.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            4     33.33%     50.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            6     50.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.12%      0.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2226     53.90%     54.02% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.05%     54.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.05%     54.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     54.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     54.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     54.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     54.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     54.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     54.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.07%     54.19% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     54.19% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.07%     54.26% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     54.26% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.07%     54.33% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.15%     54.48% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     54.48% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.15%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     54.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1475     35.71%     90.34% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          399      9.66%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         4130                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.241732                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                  12                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002906                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        11474                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         9450                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         3409                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          126                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         4076                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           61                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          480                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1673                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          724                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          287                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores           46                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2179                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          287                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          860                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2643                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1492                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          158                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          287                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           58                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          229                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           74      5.44%      5.44% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           45      3.31%      8.75% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.66%      9.41% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1154     84.85%     94.26% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           54      3.97%     98.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      1.76%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1360                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           67      5.05%      5.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           35      2.64%      7.68% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.68%      8.36% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1142     85.99%     94.35% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           53      3.99%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      1.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1328                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2643                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.035944                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.828300                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           24      0.91%      0.91% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           28      1.06%      1.97% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.57%      2.53% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            7      0.26%      2.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            7      0.26%      3.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           27      1.02%      4.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            5      0.19%      4.28% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.19%      4.46% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2525     95.54%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2643                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           34     25.76%     25.76% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           35     26.52%     52.27% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.76%     53.03% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           43     32.58%     85.61% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           14     10.61%     96.21% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.21% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      3.79%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          132                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           82      7.44%      7.44% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           53      4.81%     12.25% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.45%     12.70% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          886     80.40%     93.10% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           56      5.08%     98.19% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.19% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      1.81%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1102                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           22      7.67%      7.67% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           26      9.06%     16.72% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.74%     18.47% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          197     68.64%     87.11% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.15%     98.26% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.26% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.74%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          287                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.08%      6.08% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.70%     10.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.38%     12.15% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          299     82.60%     94.75% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           12      3.31%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.93%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          362                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.47%      8.47% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.65%     14.11% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.02%     16.13% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          191     77.02%     93.15% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           12      4.84%     97.98% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.98% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.02%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          248                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            3      2.27%      2.27% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           95     71.97%     74.24% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           34     25.76%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          132                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          284     98.95%     98.95% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            1      0.35%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.70%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          287                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           26     44.83%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     55.17%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           58                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           43                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           40                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          287                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          287                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          132                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          132                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          283                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          286                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            1                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          132                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           34     25.76%     25.76% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           35     26.52%     52.27% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.76%     53.03% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           43     32.58%     85.61% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           14     10.61%     96.21% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.21% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      3.79%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          132                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          194     75.49%     92.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           12      4.67%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           20      7.07%      7.07% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           26      9.19%     16.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.77%     18.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.90%     86.93% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.31%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          283                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          220                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            4                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           16                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes          100                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           99                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           78                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           76                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            4                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            2                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3877                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          228                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         2755                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.612341                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.330605                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         2003     72.70%     72.70% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          303     11.00%     83.70% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          277     10.05%     93.76% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           47      1.71%     95.46% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           44      1.60%     97.06% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           31      1.13%     98.19% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           13      0.47%     98.66% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           16      0.58%     99.24% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           21      0.76%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         2755                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1095     64.91%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          384     22.76%     89.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.67%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1687                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           21                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1558                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1687                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1548                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1677                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.134788                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.468431                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          564                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1419                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1095     64.91%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          384     22.76%     89.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.67%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1687                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          362                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          328                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          299                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           63                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles          734                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          385                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1755                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          223                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          229                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           72                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           60                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7647                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          192                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3651                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          623                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         1207                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          358                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.097715                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1401                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1737                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         3496                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1958                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1565                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          616                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           29                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2766                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          574                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         2375                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples         3326                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.556224                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.713545                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0          568     17.08%     17.08% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          508     15.27%     32.35% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          431     12.96%     45.31% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          439     13.20%     58.51% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1256     37.76%     96.27% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           39      1.17%     97.44% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           31      0.93%     98.38% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           22      0.66%     99.04% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           32      0.96%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3326                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         8121                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.441672                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1360                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.408900                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          273                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2643                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           882                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           287                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2643                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.742338                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.276125                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          814     30.80%     30.80% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1365     51.65%     82.44% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          464     17.56%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2643                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          229                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          343                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         5565                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           81                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1673                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          724                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           11                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          134                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            3                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          386                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          389                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3473                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3464                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1985                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         3157                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.041491                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.628761                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            6                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1289                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            2                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          134                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          544                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.276042                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.575250                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          384    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            8                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      1120878                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          229                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles          997                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          343                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           37                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1715                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         6872                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         8330                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10057                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         6827                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2101                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         6231                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            8                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            4                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           56                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             8298                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           11704                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1548                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1677                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000001                       # Number of seconds simulated (Second)
simTicks                                      1107558                       # Number of ticks simulated (Tick)
finalTick                                    17364285                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 38599715                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     193224                       # Number of bytes of host memory used (Byte)
simInsts                                        13264                       # Number of instructions simulated (Count)
simOps                                          14898                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   461073                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     517779                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1235                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1235                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1235                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1235                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1235                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1235                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1235                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1235                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         1057                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         1057                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         1057                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         1057                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            1                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          inf                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          271                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          201                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.392578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.529297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::0           15                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           55                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           56                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          145                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses         9896                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses         9896                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2377                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2377                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2377                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2377                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         2377                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         2377                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         2377                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         2377                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks            1                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total            1                       # number of writebacks (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher        55944                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total        55944                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.000421                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher        55944                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total        55944                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements            1                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher            1                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total            1                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher        55944                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total        55944                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher        55944                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total        55944                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2377                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2377                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         2377                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         2377                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued            1                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy            0                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2640                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2639                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2640                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded            1                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2640                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs           11                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs            1                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs           11                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst           74                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher          438                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.144531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.855469                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          312                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1          126                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           49                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           25                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        19017                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        19017                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp            1                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean            1                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq            1                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port            3                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total            3                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total            3                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port          128                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total          128                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total          128                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            1                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            1    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            1                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy          999                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy          780                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            2                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            1                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000032500                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000032500                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              3                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      1                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     1                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    1                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   1                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 21.14                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                1                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               1                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                 64                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys              64                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         57784784.18285994                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         57784784.18285994                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                  2194470                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap               1097235.00                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher           64                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 57784784.182859942317                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks            1                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher        32500                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     32500.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks         0.00                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher           64                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total           64                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher           64                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total           64                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher            1                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total            1                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher     57784784                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total     57784784                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher     57784784                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total     57784784                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher     57784784                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total     57784784                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts               1                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat              13750                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat             5000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat         32500                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           13750.00                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      32500.00                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate         0.00                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead               64                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW          57.784784                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.45                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.45                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate           0.00                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       425280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy       425280                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   383.979891                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      1117881                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy         7140                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy         7140                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy        98040                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy       342720                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy       455040                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   410.849816                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE       902763                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT       215118                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             3326                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.134788                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.468431                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            5559                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           11                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           3971                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued            1                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3899                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         3149                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved            8                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3326                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.193927                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.623504                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         1917     57.64%     57.64% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          191      5.74%     63.38% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          409     12.30%     75.68% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          493     14.82%     90.50% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          169      5.08%     95.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          101      3.04%     98.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           29      0.87%     99.49% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            8      0.24%     99.73% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            9      0.27%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3326                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            1     10.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     10.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            3     30.00%     40.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            6     60.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.13%      0.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2142     53.94%     54.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.05%     54.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.05%     54.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     54.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     54.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     54.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     54.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     54.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     54.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.08%     54.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     54.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.08%     54.32% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     54.32% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.08%     54.39% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.15%     54.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     54.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.15%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     54.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1377     34.68%     89.37% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          422     10.63%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         3971                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.193927                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                  10                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002518                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        11153                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         9505                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         3218                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          127                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         3914                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           62                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          598                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1677                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          728                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          461                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          129                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2175                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          286                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          865                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2640                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1492                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          148                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          286                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           58                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          228                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           71      5.22%      5.22% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           45      3.31%      8.54% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.66%      9.20% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1156     85.06%     94.26% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           54      3.97%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      1.77%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1359                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           64      4.82%      4.82% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           35      2.64%      7.46% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.68%      8.14% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1144     86.21%     94.35% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           53      3.99%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      1.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1327                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2640                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.027273                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.845082                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           24      0.91%      0.91% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           28      1.06%      1.97% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.57%      2.54% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            8      0.30%      2.84% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            7      0.27%      3.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           27      1.02%      4.13% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            5      0.19%      4.32% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.19%      4.51% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2521     95.49%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2640                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           35     26.32%     26.32% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           35     26.32%     52.63% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.75%     53.38% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           43     32.33%     85.71% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           14     10.53%     96.24% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.24% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      3.76%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          133                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           80      7.26%      7.26% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           53      4.81%     12.07% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.45%     12.52% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          888     80.58%     93.10% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           56      5.08%     98.19% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.19% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      1.81%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1102                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           22      7.69%      7.69% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           26      9.09%     16.78% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.75%     18.53% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          196     68.53%     87.06% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.19%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.75%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          286                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.08%      6.08% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.70%     10.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.38%     12.15% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          299     82.60%     94.75% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           12      3.31%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.93%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          362                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.50%      8.50% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.67%     14.17% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.02%     16.19% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          190     76.92%     93.12% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           12      4.86%     97.98% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.98% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.02%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          247                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget           15     11.28%     11.28% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           83     62.41%     73.68% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           35     26.32%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          133                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          283     98.95%     98.95% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            1      0.35%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.70%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          286                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           26     44.83%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     55.17%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           58                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           43                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           28                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          286                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          286                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          133                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          133                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          283                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          285                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            1                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          133                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           35     26.32%     26.32% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           35     26.32%     52.63% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.75%     53.38% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           43     32.33%     85.71% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           14     10.53%     96.24% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.24% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      3.76%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          133                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          194     75.49%     92.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           12      4.67%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           20      7.07%      7.07% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           26      9.19%     16.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.77%     18.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.90%     86.93% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.31%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          283                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          220                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            4                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           16                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes          101                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops          100                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           79                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           77                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            5                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            1                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            1                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3908                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          227                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         2750                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.613455                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.321686                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         1997     72.62%     72.62% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          297     10.80%     83.42% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          280     10.18%     93.60% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           57      2.07%     95.67% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           39      1.42%     97.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           30      1.09%     98.18% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           19      0.69%     98.87% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            9      0.33%     99.20% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           22      0.80%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         2750                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1095     64.91%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          384     22.76%     89.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.67%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1687                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           22                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1558                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1687                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1548                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1677                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.134788                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.468431                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          564                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1419                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1095     64.91%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          384     22.76%     89.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.67%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1687                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          362                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          328                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          299                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           63                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles          736                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          391                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1747                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          224                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          228                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           73                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           60                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7644                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          190                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3374                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          579                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         1065                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          360                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.014432                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1266                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1620                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         3267                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1852                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1425                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          572                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           30                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2768                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          572                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         2377                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples         3326                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.559230                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.714672                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0          566     17.02%     17.02% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          507     15.24%     32.26% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          433     13.02%     45.28% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          440     13.23%     58.51% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1255     37.73%     96.24% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           39      1.17%     97.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           31      0.93%     98.35% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           22      0.66%     99.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           33      0.99%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3326                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         8125                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.442874                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1359                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.408599                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          272                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2640                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           880                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           286                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2640                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.742424                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.276863                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          813     30.80%     30.80% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1362     51.59%     82.39% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          465     17.61%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2640                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          228                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          349                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         5596                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           79                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1677                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          728                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           11                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          127                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            3                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          341                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          344                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3285                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3273                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1911                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         2997                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.984065                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.637638                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            5                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1293                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            2                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          127                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          548                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.270833                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.573190                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          384    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            8                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      1117881                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          228                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles          996                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          349                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           37                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1711                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         6877                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         8345                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10065                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         6829                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2101                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         6246                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            8                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            4                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           56                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             8323                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           11771                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1548                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1677                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000001                       # Number of seconds simulated (Second)
simTicks                                      1105560                       # Number of ticks simulated (Tick)
finalTick                                    18480168                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 38739216                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     194248                       # Number of bytes of host memory used (Byte)
simInsts                                        14823                       # Number of instructions simulated (Count)
simOps                                          16586                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   518097                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     579610                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1252                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1252                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1252                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1252                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1252                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1252                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1252                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1252                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         1074                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         1074                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         1074                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         1074                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          271                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          201                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.392578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.529297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::0           11                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           59                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           52                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          149                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        10032                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        10032                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2631                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2631                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2631                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded            0                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2631                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst           74                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher          438                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.144531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.855469                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          283                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1          155                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           43                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           31                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        18976                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        18976                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 22.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       424800                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy       424800                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   384.239661                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       504450                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy            0                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy       504450                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   456.284598                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             3320                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.130937                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.469277                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            5555                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           11                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           3954                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued            1                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3895                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         3186                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved            8                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.190964                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.631356                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         1913     57.62%     57.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          185      5.57%     63.19% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          477     14.37%     77.56% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          401     12.08%     89.64% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          182      5.48%     95.12% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          113      3.40%     98.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           31      0.93%     99.46% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7           11      0.33%     99.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            7      0.21%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            1     11.11%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     11.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            4     44.44%     55.56% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            4     44.44%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.13%      0.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2115     53.49%     53.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.05%     53.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.05%     53.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     53.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     53.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     53.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     53.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     53.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     53.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.08%     53.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     53.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.08%     53.87% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     53.87% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.08%     53.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.15%     54.10% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     54.10% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.15%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     54.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1408     35.61%     89.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          401     10.14%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         3954                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.190964                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   9                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002276                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        11114                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         9497                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         3198                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          125                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         3898                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           60                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          542                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1675                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          727                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          464                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          240                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2165                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          285                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          870                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2631                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1484                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          141                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          285                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           58                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          227                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           69      5.09%      5.09% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           45      3.32%      8.41% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.66%      9.08% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1154     85.17%     94.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           54      3.99%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      1.77%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1355                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           63      4.75%      4.75% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           35      2.64%      7.40% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.68%      8.08% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1143     86.26%     94.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           53      4.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      1.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1325                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.072596                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.704869                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           21      0.80%      0.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           27      1.03%      1.82% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.57%      2.39% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            8      0.30%      2.70% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            6      0.23%      2.93% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           28      1.06%      3.99% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            5      0.19%      4.18% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.19%      4.37% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2516     95.63%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           33     25.58%     25.58% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           34     26.36%     51.94% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.78%     52.71% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           42     32.56%     85.27% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           14     10.85%     96.12% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.12% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      3.88%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          129                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           77      7.03%      7.03% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           52      4.74%     11.77% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.46%     12.23% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          886     80.84%     93.07% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           56      5.11%     98.18% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.18% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      1.82%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1096                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           22      7.72%      7.72% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           26      9.12%     16.84% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.75%     18.60% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          195     68.42%     87.02% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.23%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.75%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          285                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.08%      6.08% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.70%     10.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.38%     12.15% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          299     82.60%     94.75% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           12      3.31%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.93%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          362                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.54%      8.54% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.69%     14.23% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.03%     16.26% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          189     76.83%     93.09% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           12      4.88%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.03%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          246                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget           16     12.40%     12.40% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           80     62.02%     74.42% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           33     25.58%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          129                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          283     99.30%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.70%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          285                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           26     44.83%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     55.17%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           58                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           42                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           26                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          285                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          285                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          129                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          129                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          283                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          285                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          129                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           33     25.58%     25.58% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           34     26.36%     51.94% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.78%     52.71% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           42     32.56%     85.27% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           14     10.85%     96.12% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.12% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      3.88%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          129                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          194     75.49%     92.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           12      4.67%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           20      7.07%      7.07% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           26      9.19%     16.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.77%     18.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.90%     86.93% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.31%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          283                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          220                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            7                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           13                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           98                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           97                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           76                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           75                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            6                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3904                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          226                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.614572                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.332512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         1991     72.53%     72.53% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          305     11.11%     83.64% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          278     10.13%     93.77% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           47      1.71%     95.48% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           44      1.60%     97.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           31      1.13%     98.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           12      0.44%     98.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           14      0.51%     99.16% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           23      0.84%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1095     64.91%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          384     22.76%     89.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.67%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1687                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           23                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1558                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1687                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1548                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1677                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.130937                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.469277                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          564                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1419                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1095     64.91%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          384     22.76%     89.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.67%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1687                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          362                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          328                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          299                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           63                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles          735                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          392                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1742                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          224                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          227                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           72                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           60                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7632                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          190                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3413                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          583                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         1081                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          357                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.028012                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1281                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1662                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         3298                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1817                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1438                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          576                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           28                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2763                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          570                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         2372                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.559337                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.715736                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0          566     17.05%     17.05% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          506     15.24%     32.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          431     12.98%     45.27% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          438     13.19%     58.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1254     37.77%     96.23% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           39      1.17%     97.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           31      0.93%     98.34% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           22      0.66%     99.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           33      0.99%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         8110                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.442771                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1355                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.408133                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          272                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2631                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           877                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           285                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.745724                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.278090                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          808     30.71%     30.71% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1357     51.58%     82.29% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          466     17.71%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          227                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          349                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         5592                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           77                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1675                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          727                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           11                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          127                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          345                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          347                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3265                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3253                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1869                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         2989                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.979819                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.625293                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            4                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1291                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          127                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          547                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.278646                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.624113                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          384    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            9                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          227                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles          994                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          349                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           38                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1707                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         6867                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         8340                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10053                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         6817                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2101                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         6241                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            8                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            4                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           56                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             8313                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           11762                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1548                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1677                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000001                       # Number of seconds simulated (Second)
simTicks                                      1105560                       # Number of ticks simulated (Tick)
finalTick                                    19596051                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 39303235                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     195272                       # Number of bytes of host memory used (Byte)
simInsts                                        16382                       # Number of instructions simulated (Count)
simOps                                          18274                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   580372                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     647273                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1077                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1077                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1077                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1077                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1077                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1077                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1077                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1077                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data          899                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total          899                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data          899                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total          899                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          271                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          201                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.392578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.529297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::0           11                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           59                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           41                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          160                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses         8632                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses         8632                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2631                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2631                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2631                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded            0                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2631                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst           74                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher          438                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.144531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.855469                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          233                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1          205                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           30                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           44                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        18976                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        18976                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 22.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       424320                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy       424320                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   383.805492                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       503880                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy            0                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy       503880                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   455.769022                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             3320                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.130937                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.469277                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            5555                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           11                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           3671                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3895                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         3363                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved            8                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.105723                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.531225                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         1913     57.62%     57.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          186      5.60%     63.22% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          639     19.25%     82.47% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          338     10.18%     92.65% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4           97      2.92%     95.57% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          100      3.01%     98.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           31      0.93%     99.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            9      0.27%     99.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            7      0.21%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            1     12.50%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            4     50.00%     62.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            3     37.50%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.14%      0.14% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2016     54.92%     55.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.05%     55.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.05%     55.16% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     55.16% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     55.16% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     55.16% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     55.16% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     55.16% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     55.16% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.08%     55.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     55.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.08%     55.33% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     55.33% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.08%     55.41% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.16%     55.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     55.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.16%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     55.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1245     33.91%     89.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          380     10.35%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         3671                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.105723                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   8                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002179                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        10550                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         9394                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         2999                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          121                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         3616                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           58                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          513                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1675                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          727                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          665                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          257                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2165                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          285                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          870                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2631                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1483                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          153                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          285                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           58                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          227                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           69      5.09%      5.09% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           45      3.32%      8.41% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.66%      9.08% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1154     85.17%     94.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           54      3.99%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      1.77%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1355                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           63      4.75%      4.75% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           35      2.64%      7.40% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.68%      8.08% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1143     86.26%     94.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           53      4.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      1.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1325                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.080198                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.690176                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           21      0.80%      0.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           27      1.03%      1.82% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.57%      2.39% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            7      0.27%      2.66% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            6      0.23%      2.89% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           28      1.06%      3.95% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            5      0.19%      4.14% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.19%      4.33% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2517     95.67%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           32     25.00%     25.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           34     26.56%     51.56% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.78%     52.34% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           42     32.81%     85.16% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           14     10.94%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      3.91%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          128                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           76      6.94%      6.94% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           52      4.75%     11.69% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.46%     12.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          886     80.91%     93.06% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           56      5.11%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      1.83%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1095                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           22      7.72%      7.72% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           26      9.12%     16.84% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.75%     18.60% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          195     68.42%     87.02% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.23%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.75%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          285                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.08%      6.08% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.70%     10.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.38%     12.15% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          299     82.60%     94.75% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           12      3.31%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.93%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          362                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.54%      8.54% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.69%     14.23% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.03%     16.26% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          189     76.83%     93.09% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           12      4.88%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.03%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          246                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            3      2.34%      2.34% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           93     72.66%     75.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           32     25.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          128                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          283     99.30%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.70%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          285                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           26     44.83%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     55.17%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           58                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           42                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           39                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          285                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          285                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          128                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          283                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          285                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           32     25.00%     25.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           34     26.56%     51.56% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.78%     52.34% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           42     32.81%     85.16% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           14     10.94%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      3.91%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          128                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          194     75.49%     92.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           12      4.67%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           20      7.07%      7.07% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           26      9.19%     16.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.77%     18.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.90%     86.93% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.31%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          283                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          220                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            7                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           13                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           97                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           96                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           75                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           74                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            6                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3904                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          226                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.614572                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.332512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         1991     72.53%     72.53% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          305     11.11%     83.64% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          278     10.13%     93.77% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           47      1.71%     95.48% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           44      1.60%     97.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           31      1.13%     98.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           12      0.44%     98.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           14      0.51%     99.16% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           23      0.84%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1095     64.91%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          384     22.76%     89.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.67%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1687                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           23                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1558                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1687                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1548                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1677                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.130937                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.469277                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          564                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1419                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1095     64.91%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          384     22.76%     89.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.67%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1687                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          362                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          328                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          299                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           63                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles          735                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          392                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1742                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          224                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          227                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           72                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           60                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7632                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          190                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3159                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          575                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts          906                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          357                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.951506                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1257                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1575                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         3052                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1655                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1263                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          568                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           28                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2763                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          570                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         2372                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.559337                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.715736                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0          566     17.05%     17.05% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          506     15.24%     32.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          431     12.98%     45.27% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          438     13.19%     58.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1254     37.77%     96.23% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           39      1.17%     97.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           31      0.93%     98.34% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           22      0.66%     99.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           33      0.99%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         8110                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.442771                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1355                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.408133                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          272                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2631                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           877                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           285                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.745724                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.278090                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          808     30.71%     30.71% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1357     51.58%     82.29% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          466     17.71%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          227                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          349                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         5592                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           77                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1675                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          727                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           11                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents           24                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          337                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          339                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3066                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3054                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1748                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         2910                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.919880                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.600687                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            4                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1291                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation           24                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          547                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.278646                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.624113                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          384    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            9                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          227                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles          994                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          349                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           38                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1707                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         6867                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         8340                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10053                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         6817                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2101                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         6241                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            8                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            4                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           56                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             8313                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           11762                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1548                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1677                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000001                       # Number of seconds simulated (Second)
simTicks                                      1105560                       # Number of ticks simulated (Tick)
finalTick                                    20711934                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 38968059                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     197320                       # Number of bytes of host memory used (Byte)
simInsts                                        17941                       # Number of instructions simulated (Count)
simOps                                          19962                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   630550                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     701437                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          271                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          201                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.392578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.529297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::0           11                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           59                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           24                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          177                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses         8312                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses         8312                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2631                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2631                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2631                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded            0                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2631                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst           74                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher          438                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.144531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.855469                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          184                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           24                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           50                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        18976                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        18976                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 22.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       424320                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy       424320                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   383.805492                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       503880                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy            0                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy       503880                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   455.769022                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             3320                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.130937                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.469277                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            5555                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           11                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           3607                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3895                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         3387                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved            8                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.086446                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.505458                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         1913     57.62%     57.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          186      5.60%     63.22% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          671     20.21%     83.43% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          330      9.94%     93.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4           81      2.44%     95.81% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           92      2.77%     98.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           31      0.93%     99.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            9      0.27%     99.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            7      0.21%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            1     12.50%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            4     50.00%     62.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            3     37.50%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.14%      0.14% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2000     55.45%     55.59% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.06%     55.64% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.06%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.08%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.08%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.08%     55.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.17%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.17%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1205     33.41%     89.69% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          372     10.31%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         3607                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.086446                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   8                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002218                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        10422                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         9370                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         2959                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          121                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         3552                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           58                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          505                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1675                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          727                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          713                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          257                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2165                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          285                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          870                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2631                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1483                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          153                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          285                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           58                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          227                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           69      5.09%      5.09% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           45      3.32%      8.41% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.66%      9.08% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1154     85.17%     94.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           54      3.99%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      1.77%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1355                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           63      4.75%      4.75% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           35      2.64%      7.40% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.68%      8.08% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1143     86.26%     94.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           53      4.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      1.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1325                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.080198                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.690176                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           21      0.80%      0.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           27      1.03%      1.82% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.57%      2.39% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            7      0.27%      2.66% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            6      0.23%      2.89% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           28      1.06%      3.95% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            5      0.19%      4.14% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.19%      4.33% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2517     95.67%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           32     25.00%     25.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           34     26.56%     51.56% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.78%     52.34% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           42     32.81%     85.16% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           14     10.94%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      3.91%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          128                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           76      6.94%      6.94% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           52      4.75%     11.69% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.46%     12.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          886     80.91%     93.06% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           56      5.11%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      1.83%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1095                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           22      7.72%      7.72% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           26      9.12%     16.84% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.75%     18.60% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          195     68.42%     87.02% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.23%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.75%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          285                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.08%      6.08% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.70%     10.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.38%     12.15% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          299     82.60%     94.75% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           12      3.31%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.93%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          362                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.54%      8.54% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.69%     14.23% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.03%     16.26% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          189     76.83%     93.09% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           12      4.88%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.03%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          246                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            3      2.34%      2.34% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           93     72.66%     75.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           32     25.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          128                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          283     99.30%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.70%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          285                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           26     44.83%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     55.17%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           58                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           42                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           39                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          285                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          285                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          128                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          283                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          285                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           32     25.00%     25.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           34     26.56%     51.56% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.78%     52.34% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           42     32.81%     85.16% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           14     10.94%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      3.91%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          128                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          194     75.49%     92.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           12      4.67%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           20      7.07%      7.07% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           26      9.19%     16.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.77%     18.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.90%     86.93% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.31%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          283                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          220                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            7                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           13                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           97                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           96                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           75                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           74                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            6                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3904                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          226                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.614572                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.332512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         1991     72.53%     72.53% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          305     11.11%     83.64% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          278     10.13%     93.77% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           47      1.71%     95.48% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           44      1.60%     97.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           31      1.13%     98.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           12      0.44%     98.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           14      0.51%     99.16% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           23      0.84%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1095     64.91%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          384     22.76%     89.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.67%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1687                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           23                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1558                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1687                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1548                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1677                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.130937                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.469277                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          564                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1419                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1095     64.91%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          384     22.76%     89.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.67%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1687                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          362                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          328                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          299                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           63                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles          735                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          392                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1742                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          224                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          227                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           72                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           60                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7632                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          190                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3103                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          575                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts          866                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          357                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.934639                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1257                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1575                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         2996                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1615                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1223                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          568                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           28                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2763                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          570                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         2372                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.559337                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.715736                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0          566     17.05%     17.05% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          506     15.24%     32.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          431     12.98%     45.27% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          438     13.19%     58.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1254     37.77%     96.23% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           39      1.17%     97.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           31      0.93%     98.34% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           22      0.66%     99.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           33      0.99%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         8110                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.442771                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1355                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.408133                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          272                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2631                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           877                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           285                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.745724                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.278090                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          808     30.71%     30.71% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1357     51.58%     82.29% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          466     17.71%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          227                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          349                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         5592                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           77                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1675                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          727                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           11                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          337                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          339                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3026                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3014                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1724                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         2902                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.907831                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.594073                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            4                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1291                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          547                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.278646                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.624113                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          384    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            9                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          227                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles          994                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          349                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           38                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1707                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         6867                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         8340                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10053                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         6817                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2101                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         6241                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            8                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            4                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           56                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             8313                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           11762                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1548                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1677                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000001                       # Number of seconds simulated (Second)
simTicks                                      1105560                       # Number of ticks simulated (Tick)
finalTick                                    21827817                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 39206823                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     198344                       # Number of bytes of host memory used (Byte)
simInsts                                        19500                       # Number of instructions simulated (Count)
simOps                                          21650                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   689783                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     765688                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            1                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          inf                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          271                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          201                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.392578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.529297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::0            4                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           66                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           18                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          183                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses         8312                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses         8312                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2631                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2631                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2631                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded            0                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2631                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst           74                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher          438                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.144531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.855469                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          151                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1          287                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           18                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           56                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        18976                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        18976                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 22.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       424800                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy       424800                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   384.239661                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       504450                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy            0                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy       504450                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   456.284598                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             3320                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.130937                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.469277                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            5555                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           11                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           3607                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3895                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         3387                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved            8                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.086446                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.505458                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         1913     57.62%     57.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          186      5.60%     63.22% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          671     20.21%     83.43% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          330      9.94%     93.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4           81      2.44%     95.81% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           92      2.77%     98.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           31      0.93%     99.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            9      0.27%     99.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            7      0.21%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            1     12.50%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            4     50.00%     62.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            3     37.50%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.14%      0.14% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2000     55.45%     55.59% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.06%     55.64% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.06%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.08%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.08%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.08%     55.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.17%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.17%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1205     33.41%     89.69% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          372     10.31%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         3607                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.086446                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   8                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002218                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        10422                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         9370                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         2959                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          121                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         3552                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           58                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          505                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1675                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          727                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          713                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          257                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2165                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          285                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          870                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2631                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1483                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          153                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          285                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           58                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          227                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           69      5.09%      5.09% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           45      3.32%      8.41% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.66%      9.08% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1154     85.17%     94.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           54      3.99%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      1.77%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1355                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           63      4.75%      4.75% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           35      2.64%      7.40% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.68%      8.08% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1143     86.26%     94.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           53      4.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      1.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1325                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.080198                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.690176                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           21      0.80%      0.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           27      1.03%      1.82% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.57%      2.39% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            7      0.27%      2.66% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            6      0.23%      2.89% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           28      1.06%      3.95% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            5      0.19%      4.14% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.19%      4.33% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2517     95.67%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           32     25.00%     25.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           34     26.56%     51.56% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.78%     52.34% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           42     32.81%     85.16% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           14     10.94%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      3.91%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          128                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           76      6.94%      6.94% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           52      4.75%     11.69% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.46%     12.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          886     80.91%     93.06% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           56      5.11%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      1.83%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1095                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           22      7.72%      7.72% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           26      9.12%     16.84% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.75%     18.60% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          195     68.42%     87.02% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.23%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.75%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          285                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.08%      6.08% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.70%     10.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.38%     12.15% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          299     82.60%     94.75% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           12      3.31%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.93%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          362                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.54%      8.54% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.69%     14.23% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.03%     16.26% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          189     76.83%     93.09% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           12      4.88%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.03%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          246                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            3      2.34%      2.34% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           93     72.66%     75.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           32     25.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          128                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          283     99.30%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.70%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          285                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           26     44.83%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     55.17%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           58                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           42                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           39                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          285                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          285                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          128                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          283                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          285                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           32     25.00%     25.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           34     26.56%     51.56% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.78%     52.34% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           42     32.81%     85.16% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           14     10.94%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      3.91%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          128                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          194     75.49%     92.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           12      4.67%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           20      7.07%      7.07% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           26      9.19%     16.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.77%     18.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.90%     86.93% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.31%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          283                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          220                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            7                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           13                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           97                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           96                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           75                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           74                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            6                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3904                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          226                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.614572                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.332512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         1991     72.53%     72.53% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          305     11.11%     83.64% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          278     10.13%     93.77% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           47      1.71%     95.48% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           44      1.60%     97.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           31      1.13%     98.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           12      0.44%     98.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           14      0.51%     99.16% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           23      0.84%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1095     64.91%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          384     22.76%     89.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.67%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1687                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           23                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1558                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1687                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1548                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1677                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.130937                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.469277                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          564                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1419                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1095     64.91%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          384     22.76%     89.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.67%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1687                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          362                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          328                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          299                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           63                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles          735                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          392                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1742                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          224                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          227                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           72                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           60                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7632                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          190                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3103                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          575                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts          866                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          357                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.934639                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1257                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1575                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         2996                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1615                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1223                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          568                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           28                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2763                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          570                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         2372                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.559337                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.715736                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0          566     17.05%     17.05% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          506     15.24%     32.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          431     12.98%     45.27% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          438     13.19%     58.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1254     37.77%     96.23% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           39      1.17%     97.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           31      0.93%     98.34% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           22      0.66%     99.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           33      0.99%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         8110                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.442771                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1355                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.408133                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          272                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2631                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           877                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           285                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.745724                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.278090                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          808     30.71%     30.71% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1357     51.58%     82.29% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          466     17.71%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          227                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          349                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         5592                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           77                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1675                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          727                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           11                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          337                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          339                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3026                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3014                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1724                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         2902                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.907831                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.594073                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            4                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1291                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          547                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.278646                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.624113                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          384    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            9                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          227                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles          994                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          349                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           38                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1707                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         6867                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         8340                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10053                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         6817                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2101                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         6241                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            8                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            4                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           56                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             8313                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           11762                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1548                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1677                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000001                       # Number of seconds simulated (Second)
simTicks                                      1105560                       # Number of ticks simulated (Tick)
finalTick                                    22943700                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 38919022                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     199368                       # Number of bytes of host memory used (Byte)
simInsts                                        21059                       # Number of instructions simulated (Count)
simOps                                          23338                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   739290                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     819127                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          271                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          201                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.392578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.529297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           70                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0            3                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          198                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses         8312                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses         8312                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2631                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2631                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2631                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded            0                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2631                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst           74                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher          438                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.144531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.855469                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          100                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1          338                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            6                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           68                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        18976                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        18976                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 22.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       424320                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy       424320                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   383.805492                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       503880                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy            0                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy       503880                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   455.769022                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             3320                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.130937                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.469277                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            5555                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           11                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           3607                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3895                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         3387                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved            8                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.086446                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.505458                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         1913     57.62%     57.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          186      5.60%     63.22% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          671     20.21%     83.43% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          330      9.94%     93.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4           81      2.44%     95.81% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           92      2.77%     98.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           31      0.93%     99.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            9      0.27%     99.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            7      0.21%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            1     12.50%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            4     50.00%     62.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            3     37.50%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.14%      0.14% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2000     55.45%     55.59% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.06%     55.64% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.06%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.08%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.08%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.08%     55.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.17%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.17%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1205     33.41%     89.69% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          372     10.31%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         3607                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.086446                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   8                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002218                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        10422                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         9370                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         2959                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          121                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         3552                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           58                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          505                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1675                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          727                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          713                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          257                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2165                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          285                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          870                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2631                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1483                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          153                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          285                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           58                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          227                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           69      5.09%      5.09% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           45      3.32%      8.41% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.66%      9.08% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1154     85.17%     94.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           54      3.99%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      1.77%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1355                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           63      4.75%      4.75% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           35      2.64%      7.40% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.68%      8.08% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1143     86.26%     94.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           53      4.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      1.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1325                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.080198                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.690176                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           21      0.80%      0.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           27      1.03%      1.82% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.57%      2.39% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            7      0.27%      2.66% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            6      0.23%      2.89% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           28      1.06%      3.95% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            5      0.19%      4.14% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.19%      4.33% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2517     95.67%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           32     25.00%     25.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           34     26.56%     51.56% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.78%     52.34% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           42     32.81%     85.16% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           14     10.94%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      3.91%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          128                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           76      6.94%      6.94% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           52      4.75%     11.69% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.46%     12.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          886     80.91%     93.06% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           56      5.11%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      1.83%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1095                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           22      7.72%      7.72% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           26      9.12%     16.84% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.75%     18.60% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          195     68.42%     87.02% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.23%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.75%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          285                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.08%      6.08% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.70%     10.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.38%     12.15% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          299     82.60%     94.75% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           12      3.31%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.93%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          362                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.54%      8.54% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.69%     14.23% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.03%     16.26% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          189     76.83%     93.09% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           12      4.88%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.03%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          246                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            3      2.34%      2.34% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           93     72.66%     75.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           32     25.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          128                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          283     99.30%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.70%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          285                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           26     44.83%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     55.17%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           58                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           42                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           39                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          285                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          285                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          128                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          283                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          285                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           32     25.00%     25.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           34     26.56%     51.56% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.78%     52.34% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           42     32.81%     85.16% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           14     10.94%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      3.91%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          128                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          194     75.49%     92.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           12      4.67%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           20      7.07%      7.07% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           26      9.19%     16.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.77%     18.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.90%     86.93% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.31%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          283                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          220                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            7                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           13                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           97                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           96                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           75                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           74                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            6                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3904                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          226                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.614572                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.332512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         1991     72.53%     72.53% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          305     11.11%     83.64% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          278     10.13%     93.77% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           47      1.71%     95.48% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           44      1.60%     97.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           31      1.13%     98.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           12      0.44%     98.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           14      0.51%     99.16% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           23      0.84%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1095     64.91%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          384     22.76%     89.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.67%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1687                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           23                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1558                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1687                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1548                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1677                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.130937                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.469277                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          564                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1419                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1095     64.91%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          384     22.76%     89.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.67%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1687                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          362                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          328                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          299                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           63                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles          735                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          392                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1742                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          224                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          227                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           72                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           60                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7632                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          190                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3103                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          575                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts          866                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          357                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.934639                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1257                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1575                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         2996                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1615                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1223                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          568                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           28                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2763                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          570                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         2372                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.559337                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.715736                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0          566     17.05%     17.05% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          506     15.24%     32.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          431     12.98%     45.27% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          438     13.19%     58.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1254     37.77%     96.23% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           39      1.17%     97.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           31      0.93%     98.34% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           22      0.66%     99.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           33      0.99%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         8110                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.442771                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1355                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.408133                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          272                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2631                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           877                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           285                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.745724                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.278090                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          808     30.71%     30.71% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1357     51.58%     82.29% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          466     17.71%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          227                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          349                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         5592                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           77                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1675                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          727                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           11                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          337                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          339                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3026                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3014                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1724                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         2902                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.907831                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.594073                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            4                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1291                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          547                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.278646                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.624113                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          384    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            9                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          227                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles          994                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          349                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           38                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1707                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         6867                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         8340                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10053                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         6817                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2101                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         6241                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            8                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            4                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           56                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             8313                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           11762                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1548                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1677                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000001                       # Number of seconds simulated (Second)
simTicks                                      1105560                       # Number of ticks simulated (Tick)
finalTick                                    24059583                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 39205027                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     201416                       # Number of bytes of host memory used (Byte)
simInsts                                        22618                       # Number of instructions simulated (Count)
simOps                                          25026                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   800042                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     885049                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          271                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          201                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.392578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.529297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           70                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          200                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses         8312                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses         8312                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2631                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2631                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2631                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded            0                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2631                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst           74                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher          438                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.144531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.855469                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0           35                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1          403                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           73                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        18976                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        18976                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 22.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples            1                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean           64                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean    64.000000                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev          nan                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::64-71            1    100.00%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total            1                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       329760                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1056690                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   955.796158                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE       855883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy         3795                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       296400                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy       174720                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1089555                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   985.523174                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE       427083                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT       428800                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             3320                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.130937                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.469277                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            5555                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           11                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           3607                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3895                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         3387                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved            8                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.086446                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.505458                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         1913     57.62%     57.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          186      5.60%     63.22% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          671     20.21%     83.43% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          330      9.94%     93.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4           81      2.44%     95.81% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           92      2.77%     98.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           31      0.93%     99.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            9      0.27%     99.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            7      0.21%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            1     12.50%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            4     50.00%     62.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            3     37.50%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.14%      0.14% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2000     55.45%     55.59% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.06%     55.64% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.06%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.08%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.08%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.08%     55.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.17%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.17%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1205     33.41%     89.69% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          372     10.31%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         3607                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.086446                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   8                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002218                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        10422                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         9370                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         2959                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          121                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         3552                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           58                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          505                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1675                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          727                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          713                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          257                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2165                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          285                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          870                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2631                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1483                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          153                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          285                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           58                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          227                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           69      5.09%      5.09% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           45      3.32%      8.41% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.66%      9.08% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1154     85.17%     94.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           54      3.99%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      1.77%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1355                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           63      4.75%      4.75% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           35      2.64%      7.40% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.68%      8.08% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1143     86.26%     94.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           53      4.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      1.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1325                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.080198                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.690176                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           21      0.80%      0.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           27      1.03%      1.82% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.57%      2.39% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            7      0.27%      2.66% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            6      0.23%      2.89% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           28      1.06%      3.95% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            5      0.19%      4.14% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.19%      4.33% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2517     95.67%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           32     25.00%     25.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           34     26.56%     51.56% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.78%     52.34% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           42     32.81%     85.16% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           14     10.94%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      3.91%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          128                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           76      6.94%      6.94% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           52      4.75%     11.69% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.46%     12.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          886     80.91%     93.06% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           56      5.11%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      1.83%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1095                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           22      7.72%      7.72% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           26      9.12%     16.84% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.75%     18.60% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          195     68.42%     87.02% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.23%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.75%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          285                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.08%      6.08% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.70%     10.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.38%     12.15% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          299     82.60%     94.75% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           12      3.31%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.93%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          362                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.54%      8.54% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.69%     14.23% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.03%     16.26% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          189     76.83%     93.09% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           12      4.88%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.03%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          246                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            3      2.34%      2.34% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           93     72.66%     75.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           32     25.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          128                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          283     99.30%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.70%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          285                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           26     44.83%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     55.17%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           58                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           42                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           39                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          285                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          285                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          128                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          283                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          285                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           32     25.00%     25.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           34     26.56%     51.56% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.78%     52.34% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           42     32.81%     85.16% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           14     10.94%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      3.91%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          128                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          194     75.49%     92.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           12      4.67%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           20      7.07%      7.07% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           26      9.19%     16.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.77%     18.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.90%     86.93% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.31%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          283                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          220                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            7                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           13                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           97                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           96                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           75                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           74                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            6                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3904                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          226                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.614572                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.332512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         1991     72.53%     72.53% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          305     11.11%     83.64% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          278     10.13%     93.77% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           47      1.71%     95.48% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           44      1.60%     97.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           31      1.13%     98.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           12      0.44%     98.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           14      0.51%     99.16% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           23      0.84%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1095     64.91%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          384     22.76%     89.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.67%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1687                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           23                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1558                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1687                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1548                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1677                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.130937                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.469277                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          564                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1419                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1095     64.91%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          384     22.76%     89.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.67%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1687                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          362                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          328                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          299                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           63                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles          735                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          392                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1742                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          224                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          227                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           72                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           60                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7632                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          190                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3103                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          575                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts          866                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          357                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.934639                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1257                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1575                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         2996                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1615                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1223                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          568                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           28                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2763                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          570                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         2372                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.559337                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.715736                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0          566     17.05%     17.05% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          506     15.24%     32.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          431     12.98%     45.27% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          438     13.19%     58.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1254     37.77%     96.23% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           39      1.17%     97.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           31      0.93%     98.34% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           22      0.66%     99.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           33      0.99%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         8110                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.442771                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1355                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.408133                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          272                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2631                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           877                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           285                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.745724                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.278090                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          808     30.71%     30.71% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1357     51.58%     82.29% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          466     17.71%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          227                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          349                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         5592                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           77                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1675                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          727                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           11                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          337                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          339                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3026                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3014                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1724                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         2902                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.907831                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.594073                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            4                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1291                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          547                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.278646                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.624113                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          384    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            9                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          227                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles          994                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          349                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           38                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1707                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         6867                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         8340                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10053                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         6817                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2101                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         6241                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            8                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            4                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           56                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             8313                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           11762                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1548                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1677                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000001                       # Number of seconds simulated (Second)
simTicks                                      1105560                       # Number of ticks simulated (Tick)
finalTick                                    25175466                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.03                       # Real time elapsed on the host (Second)
hostTickRate                                 38891232                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     202440                       # Number of bytes of host memory used (Byte)
simInsts                                        24177                       # Number of instructions simulated (Count)
simOps                                          26714                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   848362                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     937198                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1037                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1037                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1037                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1037                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total          859                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total          859                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            2                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            2                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          178                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          178                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          271                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          201                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.392578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.529297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          201                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           70                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          201                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.392578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses         8312                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses         8312                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2372                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2372                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         2372                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         2372                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2372                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         2372                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2631                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2631                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2631                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded            0                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2631                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst           74                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher          438                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.144531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.855469                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           74                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1          437                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           74                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.855469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.144531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        18976                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        18976                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 22.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       424800                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy       424800                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   384.239661                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy       424800                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy       424800                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   384.239661                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      1115883                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             3320                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.130937                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.469277                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            5555                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           11                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           3607                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3895                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         3387                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved            8                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.086446                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.505458                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         1913     57.62%     57.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          186      5.60%     63.22% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          671     20.21%     83.43% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          330      9.94%     93.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4           81      2.44%     95.81% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           92      2.77%     98.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           31      0.93%     99.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            9      0.27%     99.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            7      0.21%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         3320                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            1     12.50%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     12.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            4     50.00%     62.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            3     37.50%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            5      0.14%      0.14% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2000     55.45%     55.59% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.06%     55.64% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.06%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     55.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.08%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     55.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.08%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     55.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.08%     55.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            6      0.17%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     56.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.17%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     56.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1205     33.41%     89.69% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          372     10.31%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         3607                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.086446                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   8                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002218                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        10422                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         9370                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         2959                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          121                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           55                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         3552                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           58                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          505                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         1675                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          727                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          713                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          257                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2165                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          285                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          870                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2631                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          1483                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          153                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          285                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           58                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          227                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           69      5.09%      5.09% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           45      3.32%      8.41% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            9      0.66%      9.08% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1154     85.17%     94.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           54      3.99%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.23% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           24      1.77%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         1355                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           63      4.75%      4.75% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           35      2.64%      7.40% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            9      0.68%      8.08% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1143     86.26%     94.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           53      4.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           22      1.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1325                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.080198                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     4.690176                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           21      0.80%      0.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           27      1.03%      1.82% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           15      0.57%      2.39% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            7      0.27%      2.66% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            6      0.23%      2.89% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           28      1.06%      3.95% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            5      0.19%      4.14% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            5      0.19%      4.33% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2517     95.67%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           32     25.00%     25.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           34     26.56%     51.56% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            1      0.78%     52.34% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond           42     32.81%     85.16% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           14     10.94%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.09% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      3.91%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          128                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           76      6.94%      6.94% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect           52      4.75%     11.69% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.46%     12.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          886     80.91%     93.06% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           56      5.11%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           20      1.83%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1095                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           22      7.72%      7.72% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           26      9.12%     16.84% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            5      1.75%     18.60% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          195     68.42%     87.02% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           32     11.23%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.25% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.75%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          285                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           22      6.08%      6.08% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           17      4.70%     10.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            5      1.38%     12.15% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          299     82.60%     94.75% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           12      3.31%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.93%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          362                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           21      8.54%      8.54% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           14      5.69%     14.23% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            5      2.03%     16.26% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          189     76.83%     93.09% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           12      4.88%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.97% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.03%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          246                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            3      2.34%      2.34% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           93     72.66%     75.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           32     25.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          128                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          283     99.30%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%     99.30% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.70%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          285                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           26     44.83%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     44.83% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           32     55.17%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           58                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted           42                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken           39                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          285                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          285                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          257                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          128                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          283                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            6                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            6                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          285                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          128                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           32     25.00%     25.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           34     26.56%     51.56% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            1      0.78%     52.34% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond           42     32.81%     85.16% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           14     10.94%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.09% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      3.91%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          128                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           22      8.56%      8.56% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           17      6.61%     15.18% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            5      1.95%     17.12% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          194     75.49%     92.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           12      4.67%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          257                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           20      7.07%      7.07% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           26      9.19%     16.25% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            5      1.77%     18.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          195     68.90%     86.93% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           32     11.31%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          283                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          244                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          244                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          220                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            7                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           13                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           97                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           96                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           75                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           74                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           21                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            6                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            6                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           10                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           16                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            6                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3904                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            5                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          226                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.614572                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.332512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         1991     72.53%     72.53% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          305     11.11%     83.64% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          278     10.13%     93.77% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           47      1.71%     95.48% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           44      1.60%     97.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           31      1.13%     98.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           12      0.44%     98.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           14      0.51%     99.16% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           23      0.84%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         2745                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            2                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            5      0.30%      0.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1095     64.91%     65.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.12%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     65.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.18%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     65.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.18%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.18%     65.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.36%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.36%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          384     22.76%     89.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          180     10.67%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         1687                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           23                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         1558                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         1687                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         1548                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         1677                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.130937                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.469277                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          564                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         1419                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          178                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            5      0.30%      0.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1095     64.91%     65.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.12%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     65.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.18%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     65.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.18%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     65.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.18%     65.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.36%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.36%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          384     22.76%     89.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          180     10.67%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         1687                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          362                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          328                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           34                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          299                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           63                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles          735                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          392                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         1742                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          224                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          227                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved           72                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           60                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7632                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          190                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         3103                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           26                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          575                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts          866                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          357                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.934639                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1257                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1575                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         2996                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         1615                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1223                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          568                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites            4                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           88                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           28                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          2763                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          570                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         2372                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.559337                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.715736                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0          566     17.05%     17.05% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          506     15.24%     32.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          431     12.98%     45.27% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          438     13.19%     58.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1254     37.77%     96.23% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           39      1.17%     97.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           31      0.93%     98.34% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           22      0.66%     99.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           33      0.99%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         3320                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts         8110                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.442771                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         1355                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.408133                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          272                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2631                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           877                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           285                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.745724                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.278090                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          808     30.71%     30.71% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1357     51.58%     82.29% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          466     17.71%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2631                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          227                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          349                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         5592                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           77                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         1675                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          727                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           11                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          337                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          339                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         3026                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         3014                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         1724                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         2902                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.907831                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.594073                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            4                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1291                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          547                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.278646                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.624113                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          384    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            9                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      1115883                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          227                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles          994                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          349                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           38                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         1707                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles            5                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         6867                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands         8340                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10053                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         6817                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           94                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2101                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         6241                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            8                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            4                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts           56                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads             8313                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           11762                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         1548                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         1677                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      2836494                       # Number of ticks simulated (Tick)
finalTick                                    26906400                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 38474658                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     203464                       # Number of bytes of host memory used (Byte)
simInsts                                        24945                       # Number of instructions simulated (Count)
simOps                                          27659                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   338009                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     374755                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         1429                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         1429                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         1429                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         1429                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandMisses::processor.cores.core.data           19                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.demandMisses::total           19                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.overallMisses::processor.cores.core.data           19                       # number of overall misses (Count)
board.cache_hierarchy.dcache.overallMisses::total           19                       # number of overall misses (Count)
board.cache_hierarchy.dcache.demandMissLatency::processor.cores.core.data      1545120                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.demandMissLatency::total      1545120                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::processor.cores.core.data      1545120                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::total      1545120                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         1448                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         1448                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         1448                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         1448                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandMissRate::processor.cores.core.data     0.013122                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMissRate::total     0.013122                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::processor.cores.core.data     0.013122                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::total     0.013122                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMissLatency::processor.cores.core.data 81322.105263                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMissLatency::total 81322.105263                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::processor.cores.core.data 81322.105263                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::total 81322.105263                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.demandMshrHits::processor.cores.core.data            7                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrHits::total            7                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::processor.cores.core.data            7                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::total            7                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrMisses::processor.cores.core.data           12                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMisses::total           12                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::processor.cores.core.data           12                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::total           12                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMissLatency::processor.cores.core.data      1113552                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissLatency::total      1113552                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::processor.cores.core.data      1113552                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::total      1113552                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissRate::processor.cores.core.data     0.008287                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMshrMissRate::total     0.008287                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::processor.cores.core.data     0.008287                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::total     0.008287                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::processor.cores.core.data        92796                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::total        92796                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::processor.cores.core.data        92796                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::total        92796                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         1084                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         1084                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.misses::processor.cores.core.data           19                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.misses::total           19                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.missLatency::processor.cores.core.data      1545120                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.missLatency::total      1545120                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         1103                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         1103                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.missRate::processor.cores.core.data     0.017226                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.missRate::total     0.017226                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::processor.cores.core.data 81322.105263                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::total 81322.105263                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.mshrHits::processor.cores.core.data            7                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrHits::total            7                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::processor.cores.core.data           12                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::total           12                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::processor.cores.core.data      1113552                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::total      1113552                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.010879                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::total     0.010879                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data        92796                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::total        92796                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data           12                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total           12                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data           12                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total           12                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data          345                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total          345                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data          345                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total          345                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses           12                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse   274.420994                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs        14839                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs          283                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs    52.434629                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher           70                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data   204.420994                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.136719                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.399260                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.535979                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022           70                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          213                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           70                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           12                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          201                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.136719                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.416016                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        11692                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        11692                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         3245                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         3245                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         3245                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         3245                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst           52                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total           52                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst           52                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total           52                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst      2120544                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total      2120544                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst      2120544                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total      2120544                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         3297                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         3297                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         3297                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         3297                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.015772                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.015772                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.015772                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.015772                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 40779.692308                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 40779.692308                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 40779.692308                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 40779.692308                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          106                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          106                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst           35                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total           35                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst           35                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total           35                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst           17                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total           17                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst           17                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher           93                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          110                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst      1398600                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total      1398600                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst      1398600                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      6672588                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      8071188                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.005156                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.005156                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.005156                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.033364                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst 82270.588235                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total 82270.588235                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst 82270.588235                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 71748.258065                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 73374.436364                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          106                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher           93                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total           93                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      6672588                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      6672588                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 71748.258065                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 71748.258065                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         3245                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         3245                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst           52                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total           52                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst      2120544                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total      2120544                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         3297                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         3297                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.015772                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.015772                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 40779.692308                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 40779.692308                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst           35                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total           35                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst           17                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total           17                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst      1398600                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total      1398600                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.005156                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.005156                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst 82270.588235                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total 82270.588235                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses           17                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          110                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           35                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful           32                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.290909                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.653061                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR           17                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate           17                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         3771                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         3661                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         3771                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          110                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         3771                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        28865                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          618                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    46.707120                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    74.597559                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   437.402441                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.145698                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.854302                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          436                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           76                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0           90                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1          346                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           17                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::1           59                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.851562                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.148438                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        26482                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        26482                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          118                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          106                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          122                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port          322                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total          322                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port           24                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::total           24                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total          346                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port        13568                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total        13568                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port          768                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::total          768                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total        14336                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          122                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean     0.032787                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev     0.178813                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          118     96.72%     96.72% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            4      3.28%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          122                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       120850                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy        86712                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy         9285                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests          228                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          109                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            1                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       105.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples        17.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples        12.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples        89.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000025514916                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            6                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            6                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState            268                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState            90                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    122                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   105                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  122                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 105                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 4                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.68                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 25.32                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              122                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             105                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                 16                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                 22                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                 19                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                 13                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                 13                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                 11                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  5                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  5                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  4                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 6                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 7                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 7                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                21                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                10                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 7                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 7                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 7                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 7                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 6                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            6                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean           17                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.790617                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     2.828427                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13            1     16.67%     16.67% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::14            1     16.67%     33.33% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            2     33.33%     66.67% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1     16.67%     83.33% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::20            1     16.67%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            6                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            6                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            6    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            6                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                256                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys               7808                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys            6720                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         2752693994.76959944                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         2369121880.74432707                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                  9697293                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 42719.35                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst         1088                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data          768                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher         5696                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks         6144                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 383572114.025272011757                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 270756786.370780229568                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 2008112832.249953508377                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 2166054290.966241836548                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst           17                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data           12                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher           93                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          105                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       993253                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data       827637                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher      4697951                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    256210206                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     58426.65                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     68969.75                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     50515.60                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks   2440097.20                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst         1088                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data          768                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher         5696                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total         7552                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst         1088                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher         5696                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total         6784                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst           17                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data           12                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher           89                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          118                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst    383572114                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data    270756786                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   2008112832                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   2662441733                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst    383572114                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   2008112832                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   2391684946                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst    383572114                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data    270756786                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   2008112832                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   2662441733                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             118                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts             96                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            9                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8           11                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9           31                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11           10                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            8                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0           11                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1           11                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           11                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            3                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            8                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat            4306341                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat           590000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat       6518841                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           36494.42                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      55244.42                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            101                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits            74                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        85.59                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        77.08                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples           28                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   349.714286                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   253.531506                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   278.959821                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            4     14.29%     14.29% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255            8     28.57%     42.86% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            6     21.43%     64.29% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            3     10.71%     75.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            1      3.57%     78.57% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            3     10.71%     89.29% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1      3.57%     92.86% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151            2      7.14%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total           28                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead             7552                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          6144                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2662.441733                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        2166.054291                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              37.72                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          20.80                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         16.92                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          81.78                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       142800                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy        56925                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy       314160                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy       255780                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       784320                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       429120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1983105                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   699.139501                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      1127205                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT      1719612                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       135660                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy        49335                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       514080                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       245340                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       730170                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy       474720                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      2149305                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   757.732962                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      1246419                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT      1600398                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             8518                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.660507                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.273186                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            7237                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           66                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           5087                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         4688                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         3884                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           41                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples         5811                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.875409                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.420273                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3778     65.01%     65.01% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          412      7.09%     72.10% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          831     14.30%     86.41% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          437      7.52%     93.93% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          152      2.62%     96.54% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          139      2.39%     98.93% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           42      0.72%     99.66% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7           13      0.22%     99.88% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            7      0.12%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         5811                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            2     13.33%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     13.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            8     53.33%     66.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            5     33.33%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass           15      0.29%      0.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         2958     58.15%     58.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            2      0.04%     58.48% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            2      0.04%     58.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     58.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     58.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     58.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     58.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     58.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     58.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.06%     58.58% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     58.58% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.06%     58.64% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     58.64% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.06%     58.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            7      0.14%     58.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     58.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.12%     58.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     58.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            1      0.02%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     58.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         1487     29.23%     88.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          600     11.79%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         5087                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.597206                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                  15                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.002949                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        15870                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        11888                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         4276                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          131                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites          103                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           58                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         5024                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           63                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          597                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled              18                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles            2707                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2000                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          990                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          765                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          299                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         3213                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          447                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         2151                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         3811                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2344                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          357                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          446                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode          138                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          308                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return          174      8.48%      8.48% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect          167      8.14%     16.63% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect           32      1.56%     18.19% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         1529     74.55%     92.74% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond          122      5.95%     98.68% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     98.68% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           27      1.32%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2051                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return          158      8.13%      8.13% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect          154      7.92%     16.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect           32      1.65%     17.70% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         1454     74.79%     92.49% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond          121      6.22%     98.71% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     98.71% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           25      1.29%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         1944                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         3811                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    30.612438                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     5.542642                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           30      0.79%      0.79% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           51      1.34%      2.13% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           43      1.13%      3.25% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15           39      1.02%      4.28% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19           20      0.52%      4.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           47      1.23%      6.04% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27           19      0.50%      6.53% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31           13      0.34%      6.87% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         3549     93.13%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         3811                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           56     19.11%     19.11% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           64     21.84%     40.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            7      2.39%     43.34% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond          142     48.46%     91.81% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           19      6.48%     98.29% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     98.29% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            5      1.71%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          293                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return          167      9.84%      9.84% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          178     10.49%     20.33% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect           27      1.59%     21.92% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond         1181     69.59%     91.51% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond          121      7.13%     98.64% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.64% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           23      1.36%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1697                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           54     12.11%     12.11% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           89     19.96%     32.06% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect           14      3.14%     35.20% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond          235     52.69%     87.89% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           49     10.99%     98.88% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.88% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.12%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          446                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           51      9.44%      9.44% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           40      7.41%     16.85% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect           12      2.22%     19.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond          411     76.11%     95.19% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           19      3.52%     98.70% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.70% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      1.30%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total          540                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           50     14.41%     14.41% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           37     10.66%     25.07% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           12      3.46%     28.53% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond          224     64.55%     93.08% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           19      5.48%     98.56% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     98.56% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      1.44%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          347                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget           25      8.53%      8.53% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB          212     72.35%     80.89% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           56     19.11%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          293                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          439     98.43%     98.43% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            2      0.45%     98.88% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            5      1.12%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          446                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           89     64.49%     64.49% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     64.49% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     64.49% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           49     35.51%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total          138                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted          142                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken          117                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          446                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          446                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          293                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          362                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          293                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          438                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups           12                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses           12                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          444                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            2                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          293                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           56     19.11%     19.11% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           64     21.84%     40.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            7      2.39%     43.34% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond          142     48.46%     91.81% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           19      6.48%     98.29% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     98.29% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            5      1.71%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          293                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           51     14.09%     14.09% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           40     11.05%     25.14% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect           12      3.31%     28.45% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          233     64.36%     92.82% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           19      5.25%     98.07% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     98.07% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      1.93%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          362                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           49     11.19%     11.19% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           89     20.32%     31.51% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect           14      3.20%     34.70% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond          232     52.97%     87.67% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           49     11.19%     98.86% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.86% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.14%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          438                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          340                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          340                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          280                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1           28                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           23                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            5                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            4                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes          230                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops          227                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes          178                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used          156                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           50                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups           12                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses           12                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           19                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           31                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect           12                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            3                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            1                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            6                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            9                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            2                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         4711                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls           27                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          307                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples         5072                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.519125                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.267601                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3935     77.58%     77.58% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1          464      9.15%     86.73% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          365      7.20%     93.93% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           98      1.93%     95.86% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           78      1.54%     97.40% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           51      1.01%     98.40% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6           26      0.51%     98.92% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           18      0.35%     99.27% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           37      0.73%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         5072                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           12                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           52                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           15      0.57%      0.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         1681     63.84%     64.41% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            2      0.08%     64.49% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     64.49% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     64.49% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     64.49% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     64.49% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     64.49% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     64.49% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     64.49% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.11%     64.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     64.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.11%     64.72% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     64.72% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.11%     64.83% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.23%     65.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     65.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.23%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     65.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead          557     21.15%     86.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          357     13.56%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         2633                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           37                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         2327                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         2633                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         2316                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         2622                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.660507                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.273186                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs          914                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         2301                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts          557                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts          345                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           15      0.57%      0.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         1681     63.84%     64.41% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            2      0.08%     64.49% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     64.49% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     64.49% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     64.49% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     64.49% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     64.49% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     64.49% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     64.49% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.11%     64.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     64.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.11%     64.72% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     64.72% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.11%     64.83% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.23%     65.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     65.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.23%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     65.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead          557     21.15%     86.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          357     13.56%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         2633                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl          540                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl          470                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           70                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl          411                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl          129                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           52                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           51                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         1564                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         1277                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         2376                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          285                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          309                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved          199                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred          143                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         9884                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          431                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         4491                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           34                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches          854                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         1128                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          568                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.527236                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         1464                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         1800                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4345                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2496                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         1696                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          791                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites           24                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           97                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           89                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          4375                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          894                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         3297                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes           22                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         5811                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.040957                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.934747                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         2056     35.38%     35.38% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          660     11.36%     46.74% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          648     11.15%     57.89% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          575      9.90%     67.79% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         1588     27.33%     95.11% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           77      1.33%     96.44% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           78      1.34%     97.78% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           58      1.00%     98.78% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           71      1.22%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         5811                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        10942                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.284574                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2051                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.240784                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles          989                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           3811                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1183                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           447                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         3811                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.579113                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.271407                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         1286     33.74%     33.74% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1927     50.56%     84.31% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          598     15.69%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         3811                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          309                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          812                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            2                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         7337                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts          122                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2000                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          990                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           66                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            1                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            7                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          421                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          428                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         4392                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         4334                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         2281                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         3839                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.508805                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.594165                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            5                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1443                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          633                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            5                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples          557                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     4.667864                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    28.086568                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9          552     99.10%     99.10% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139            1      0.18%     99.28% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179            1      0.18%     99.46% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219            1      0.18%     99.64% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows            2      0.36%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          486                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total          557                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      2846817                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          309                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         1948                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          819                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles          437                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         2277                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles           21                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         8831                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.IQFullEvents            7                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.renamedOperands        10156                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        12599                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         8740                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups          103                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps         2937                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         7222                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing           42                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing           25                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts          259                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            12366                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           15425                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         2316                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         2622                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            2                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
