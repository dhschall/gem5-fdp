
---------- Begin Simulation Statistics ----------
simSeconds                                   0.000197                       # Number of seconds simulated (Second)
simTicks                                    197362440                       # Number of ticks simulated (Tick)
finalTick                                   214297488                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.75                       # Real time elapsed on the host (Second)
hostTickRate                                263137392                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     207636                       # Number of bytes of host memory used (Byte)
simInsts                                       179408                       # Number of instructions simulated (Count)
simOps                                         181675                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   239157                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     242177                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data        72950                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total        72950                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data        72950                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total        72950                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandMisses::processor.cores.core.data            4                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.demandMisses::total            4                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.overallMisses::processor.cores.core.data            4                       # number of overall misses (Count)
board.cache_hierarchy.dcache.overallMisses::total            4                       # number of overall misses (Count)
board.cache_hierarchy.dcache.demandMissLatency::processor.cores.core.data       226107                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.demandMissLatency::total       226107                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::processor.cores.core.data       226107                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::total       226107                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data        72954                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total        72954                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data        72954                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total        72954                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandMissRate::processor.cores.core.data     0.000055                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMissRate::total     0.000055                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::processor.cores.core.data     0.000055                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::total     0.000055                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMissLatency::processor.cores.core.data 56526.750000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMissLatency::total 56526.750000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::processor.cores.core.data 56526.750000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::total 56526.750000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.demandMshrHits::processor.cores.core.data            2                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrHits::total            2                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::processor.cores.core.data            2                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::total            2                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrMisses::processor.cores.core.data            2                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMisses::total            2                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::processor.cores.core.data            2                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::total            2                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMissLatency::processor.cores.core.data       112554                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissLatency::total       112554                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::processor.cores.core.data       112554                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::total       112554                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissRate::processor.cores.core.data     0.000027                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMshrMissRate::total     0.000027                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::processor.cores.core.data     0.000027                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::total     0.000027                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::processor.cores.core.data        56277                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::total        56277                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::processor.cores.core.data        56277                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::total        56277                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.LoadLockedReq.hits::processor.cores.core.data           10                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.dcache.LoadLockedReq.hits::total           10                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.dcache.LoadLockedReq.accesses::processor.cores.core.data           10                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.LoadLockedReq.accesses::total           10                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data        51051                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total        51051                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data        51051                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total        51051                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data           20                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total           20                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data           20                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total           20                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data        21899                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total        21899                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.misses::processor.cores.core.data            4                       # number of WriteReq misses (Count)
board.cache_hierarchy.dcache.WriteReq.misses::total            4                       # number of WriteReq misses (Count)
board.cache_hierarchy.dcache.WriteReq.missLatency::processor.cores.core.data       226107                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.dcache.WriteReq.missLatency::total       226107                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data        21903                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total        21903                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.missRate::processor.cores.core.data     0.000183                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.dcache.WriteReq.missRate::total     0.000183                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.dcache.WriteReq.avgMissLatency::processor.cores.core.data 56526.750000                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.WriteReq.avgMissLatency::total 56526.750000                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.WriteReq.mshrHits::processor.cores.core.data            2                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.dcache.WriteReq.mshrHits::total            2                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.dcache.WriteReq.mshrMisses::processor.cores.core.data            2                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.dcache.WriteReq.mshrMisses::total            2                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.dcache.WriteReq.mshrMissLatency::processor.cores.core.data       112554                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.WriteReq.mshrMissLatency::total       112554                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.WriteReq.mshrMissRate::processor.cores.core.data     0.000091                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.dcache.WriteReq.mshrMissRate::total     0.000091                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.dcache.WriteReq.avgMshrMissLatency::processor.cores.core.data        56277                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.WriteReq.avgMshrMissLatency::total        56277                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            2                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse   369.809784                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          152                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data   217.809784                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.296875                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.425410                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.722285                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          152                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          219                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2          152                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          218                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.296875                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.427734                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses       583874                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses       583874                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        37293                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        37293                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        37293                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        37293                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst        10672                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total        10672                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst        10672                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total        10672                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst    215605512                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total    215605512                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst    215605512                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total    215605512                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        47965                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        47965                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        47965                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        47965                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.222496                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.222496                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.222496                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.222496                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 20202.915292                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 20202.915292                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 20202.915292                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 20202.915292                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks        10265                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total        10265                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst        10442                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total        10442                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst        10442                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total        10442                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst          230                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total          230                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst          230                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher        10049                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total        10279                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst     21090222                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total     21090222                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst     21090222                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher    783820063                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total    804910285                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.004795                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.004795                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.004795                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.214302                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst 91696.617391                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total 91696.617391                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst 91696.617391                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 77999.807245                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 78306.283199                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements        10265                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher        10049                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total        10049                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher    783820063                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total    783820063                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 77999.807245                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 77999.807245                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        37293                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        37293                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst        10672                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total        10672                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst    215605512                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total    215605512                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        47965                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        47965                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.222496                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.222496                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 20202.915292                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 20202.915292                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst        10442                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total        10442                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst          230                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total          230                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst     21090222                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total     21090222                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.004795                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.004795                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst 91696.617391                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total 91696.617391                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses          230                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued        10277                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused          644                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          290                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.028218                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.557692                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR          228                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate          228                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        39622                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        29336                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        39622                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded        10286                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        39622                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse   511.995311                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        56024                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs        10265                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     5.457769                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    11.858482                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   500.136829                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.023161                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.976830                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total     0.999991                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          493                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           19                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          459                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1           34                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           19                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.962891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.037109                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       393987                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       393987                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp        10267                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean        10265                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq            2                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp            2                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq        10279                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port        30811                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total        30811                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port            4                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::total            4                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total        30815                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port      1314048                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total      1314048                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port          128                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::total          128                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      1314176                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        10281                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean     0.005836                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev     0.076174                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        10221     99.42%     99.42% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1           60      0.58%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        10281                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     10473198                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      8668606                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy         1560                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests        20546                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests        10265                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests           60                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples     10205.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples       230.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples         2.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples     10048.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000004216022                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds          638                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds          637                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState          25243                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState          9590                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  10281                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                 10205                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                10281                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts               10205                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 1                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.81                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 27.02                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            10281                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6           10205                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0               2093                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1               2434                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2               2670                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3               2607                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                143                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                107                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                 60                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                 40                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                 19                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                 38                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                28                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                17                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                16                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 8                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                21                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20               582                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21               604                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               982                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23               722                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24               733                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25               770                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26              1132                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27               916                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28               789                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29               811                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30               671                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31               671                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32               672                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                35                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                14                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                14                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                16                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                14                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples          637                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.100471                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    15.970505                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     1.950476                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::4-5            2      0.31%      0.31% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::6-7            2      0.31%      0.63% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::8-9            1      0.16%      0.78% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::10-11            8      1.26%      2.04% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::12-13           11      1.73%      3.77% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::14-15           27      4.24%      8.01% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16-17          544     85.40%     93.41% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18-19           18      2.83%     96.23% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::20-21           17      2.67%     98.90% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::22-23            2      0.31%     99.22% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::26-27            2      0.31%     99.53% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::28-29            1      0.16%     99.69% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::30-31            1      0.16%     99.84% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::34-35            1      0.16%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total          637                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples          638                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16          638    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total          638                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                 64                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys             657984                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys          653120                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3333886630.10043859                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3309241616.59128237                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                197362773                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9634.03                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst        14528                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data          128                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher       642816                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks       652928                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 73610764.033926621079                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 648552.987083053915                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3257033101.131096839905                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3308268787.110657691956                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst          230                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data            2                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher        10049                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks        10205                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst     15758391                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data        65000                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher    547339775                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks   5305121232                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     68514.74                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     32500.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     54467.09                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    519855.09                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst        14464                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data          128                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher       642624                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total       657216                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst        14464                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher       642624                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total       657088                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst          226                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data            2                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher        10041                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        10269                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     73286488                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data       648553                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3256060272                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3329995312                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     73286488                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3256060272                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3329346759                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     73286488                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data       648553                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3256060272                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3329995312                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           10273                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts          10202                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1170                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1300                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1280                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3         1280                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4         1380                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5         1280                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         1280                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7          370                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           58                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11          390                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12          233                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14           90                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15          160                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0         1141                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1         1315                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2         1359                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3         1267                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4         1283                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5         1180                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6         1166                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7          388                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8           19                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9           45                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           74                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11          394                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12          238                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13           31                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           93                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15          209                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          370544416                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat         51365000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat     563163166                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           36069.74                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      54819.74                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits           9474                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits          9344                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        92.22                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.59                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         1657                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   790.710923                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   640.950002                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   352.271633                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127           74      4.47%      4.47% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          152      9.17%     13.64% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          107      6.46%     20.10% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           95      5.73%     25.83% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639           57      3.44%     29.27% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767           32      1.93%     31.20% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           27      1.63%     32.83% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023           19      1.15%     33.98% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         1094     66.02%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         1657                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead           657472                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten        652928                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3331.292418                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3308.268787                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              51.87                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.03                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         25.85                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          91.91                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy     10145940                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      5369925                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     66730440                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy     47726460                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 15366000.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy     89926050                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       477600                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    235742415                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1194.464433                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE       115476                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF      6500000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    191834997                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy      1899240                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       990495                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy      7082880                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy      5893380                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 15366000.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy     62415000                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy     23633280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy    117280275                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   594.238068                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE     60843766                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF      6500000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT    131076707                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles           592680                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.937027                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.253999                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded          161171                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           55                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued         158511                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         9726                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         8136                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           14                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples       196443                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.806906                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.068012                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0       108977     55.48%     55.48% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1        37714     19.20%     74.67% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2        31907     16.24%     90.92% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3        15133      7.70%     98.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4         2146      1.09%     99.71% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          436      0.22%     99.93% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           90      0.05%     99.98% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7           40      0.02%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            7                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total       196443                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            1      1.92%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      1.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead           51     98.08%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass           40      0.03%      0.03% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        69173     43.64%     43.66% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult           60      0.04%     43.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc           20      0.01%     43.71% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.71% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd           20      0.01%     43.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu           20      0.01%     43.74% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp           40      0.03%     43.77% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.77% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc           40      0.03%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        66489     41.95%     85.74% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite        22609     14.26%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total       158511                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.267448                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                  52                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000328                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads       512516                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites       171274                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses       155063                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads         1001                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites          620                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses          460                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses       158042                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses          481                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         2144                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled            2949                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles          396237                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads        66707                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores        23249                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads        12135                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          826                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        23741                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         3544                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles       169158                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        40569                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         26324                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          714                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2644                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict          900                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         1478                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         1166                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return          339      1.32%      1.32% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect          196      0.76%      2.09% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect           62      0.24%      2.33% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        24724     96.45%     98.78% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond          212      0.83%     99.61% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     99.61% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond          100      0.39%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        25633                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return          301      1.18%      1.18% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect          169      0.66%      1.84% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect           62      0.24%      2.09% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        24668     96.74%     98.83% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond          209      0.82%     99.65% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     99.65% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           90      0.35%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        25499                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        40569                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.664374                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     2.967940                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3          199      0.49%      0.49% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           93      0.23%      0.72% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           77      0.19%      0.91% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15           48      0.12%      1.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19           33      0.08%      1.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           71      0.18%      1.28% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27           37      0.09%      1.38% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31           40      0.10%      1.47% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        39971     98.53%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        40569                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return          194     28.08%     28.08% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect          120     17.37%     45.44% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     45.44% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond          266     38.49%     83.94% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           81     11.72%     95.66% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     95.66% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond           30      4.34%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          691                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return          344      8.01%      8.01% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          168      3.91%     11.92% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect           32      0.74%     12.66% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond         3453     80.38%     93.04% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond          219      5.10%     98.14% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.14% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           80      1.86%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         4296                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return          151      5.71%      5.71% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          135      5.11%     10.82% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect           30      1.13%     11.95% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2212     83.66%     95.61% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           86      3.25%     98.87% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.87% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond           30      1.13%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2644                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return          151      0.69%      0.69% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect          121      0.55%      1.24% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect           30      0.14%      1.38% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond        21481     98.11%     99.49% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           71      0.32%     99.82% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     99.82% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond           40      0.18%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total        21894                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return          151      9.40%      9.40% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect          111      6.91%     16.31% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           30      1.87%     18.18% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         1213     75.53%     93.71% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           71      4.42%     98.13% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     98.13% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond           30      1.87%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         1606                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget          101     14.62%     14.62% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB          396     57.31%     71.92% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS          194     28.08%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          691                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2631     99.51%     99.51% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            3      0.11%     99.62% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect           10      0.38%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2644                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect          135      9.13%      9.13% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      9.13% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         1257     85.05%     94.18% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           86      5.82%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         1478                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted          266                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken          165                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2644                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2644                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          691                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          733                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC          260                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          691                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         1699                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups           30                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses           30                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         1711                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted          933                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          691                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return          194     28.08%     28.08% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect          120     17.37%     45.44% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     45.44% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond          266     38.49%     83.94% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           81     11.72%     95.66% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     95.66% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond           30      4.34%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          691                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return          151     20.60%     20.60% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect          121     16.51%     37.11% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect           30      4.09%     41.20% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          320     43.66%     84.86% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           71      9.69%     94.54% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     94.54% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond           40      5.46%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          733                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return          141      8.30%      8.30% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect          135      7.95%     16.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect           30      1.77%     18.01% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         1277     75.16%     93.17% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           86      5.06%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond           30      1.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         1699                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          642                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          642                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          461                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1           90                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           87                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            4                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes          469                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops          469                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes          318                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used          486                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong          151                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups           30                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses           30                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           60                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           90                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect           47                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            5                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            2                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            4                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2           10                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3           16                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4           10                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            7                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            5                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            4                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           10                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2           16                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3           10                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4           12                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         9808                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls           41                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         1166                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples       193881                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.781717                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.299682                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0       114077     58.84%     58.84% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1        50170     25.88%     84.72% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         9149      4.72%     89.43% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3         8379      4.32%     93.76% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4         4100      2.11%     95.87% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5         6975      3.60%     99.47% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          679      0.35%     99.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7          210      0.11%     99.93% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8          142      0.07%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total       193881                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           20                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls          151                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           40      0.03%      0.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu        66608     43.95%     43.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult           60      0.04%     44.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     44.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     44.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     44.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     44.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     44.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     44.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     44.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc           20      0.01%     44.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     44.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd           20      0.01%     44.04% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     44.04% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu           20      0.01%     44.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp           40      0.03%     44.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     44.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc           40      0.03%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     44.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead        62791     41.43%     85.54% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite        21921     14.46%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total       151560                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples          142                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts       150540                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps       151560                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP       150480                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP       151500                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.937027                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.253999                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs        84712                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts       130298                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts        62791                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts        21901                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts          460                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           40      0.03%      0.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu        66608     43.95%     43.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult           60      0.04%     44.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     44.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     44.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     44.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     44.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     44.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     44.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     44.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc           20      0.01%     44.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     44.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd           20      0.01%     44.04% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     44.04% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu           20      0.01%     44.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp           40      0.03%     44.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc           40      0.03%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     44.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead        62791     41.43%     85.54% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite        21921     14.46%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total       151560                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl        21894                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl        21673                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl          221                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl        21481                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl          413                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall          151                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn          151                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles       136168                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          685                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        56646                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          878                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2066                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved          287                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred          221                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         1270                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts       169889                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         3834                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts       156367                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop          142                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches        22133                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts        65695                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts        22185                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.263830                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        63861                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        64275                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads       178451                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites        90012                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs        87880                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         1835                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites           40                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads          680                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches          124                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         59133                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         7088                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        47965                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         1856                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples       196443                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.908345                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.529424                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0       137310     69.90%     69.90% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         9152      4.66%     74.56% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2        10917      5.56%     80.11% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3        10153      5.17%     85.28% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        28339     14.43%     99.71% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5          191      0.10%     99.81% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6          149      0.08%     99.88% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           68      0.03%     99.92% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8          164      0.08%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total       196443                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts       176567                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.297913                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        25633                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.043249                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles       133766                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          40569                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals         18598                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          3544                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        40569                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     5.531218                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.537952                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3        10976     27.06%     27.06% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12765     31.46%     58.52% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8        16828     41.48%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        40569                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2066                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          496                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts       161368                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts         2722                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        66707                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts        23249                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           55                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          953                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect           13                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         1206                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         1219                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit       155539                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount       155523                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst       102093                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst       143872                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.262406                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.709610                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads        14604                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         3916                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses          154                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          953                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         1328                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads           20                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples        62791                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.147617                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.365600                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9        62791    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            8                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total        62791                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON    214297488                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2066                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles       138425                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          496                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles          138                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        55277                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles           41                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts       167532                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands       189481                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups       262694                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups       190718                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups          680                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps       171529                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        17952                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing           60                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing           30                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts          270                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads           355107                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          325298                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts       150480                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps       151500                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000200                       # Number of seconds simulated (Second)
simTicks                                    199939527                       # Number of ticks simulated (Tick)
finalTick                                   216874575                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.80                       # Real time elapsed on the host (Second)
hostTickRate                                249184144                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     208660                       # Number of bytes of host memory used (Byte)
simInsts                                       180171                       # Number of instructions simulated (Count)
simOps                                         182615                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   224524                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     227568                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data        73334                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total        73334                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data        73334                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total        73334                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandMisses::processor.cores.core.data           19                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.demandMisses::total           19                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.overallMisses::processor.cores.core.data           19                       # number of overall misses (Count)
board.cache_hierarchy.dcache.overallMisses::total           19                       # number of overall misses (Count)
board.cache_hierarchy.dcache.demandMissLatency::processor.cores.core.data      1445553                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.demandMissLatency::total      1445553                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::processor.cores.core.data      1445553                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::total      1445553                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data        73353                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total        73353                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data        73353                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total        73353                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandMissRate::processor.cores.core.data     0.000259                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMissRate::total     0.000259                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::processor.cores.core.data     0.000259                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::total     0.000259                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMissLatency::processor.cores.core.data 76081.736842                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMissLatency::total 76081.736842                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::processor.cores.core.data 76081.736842                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::total 76081.736842                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.writebacks::writebacks            1                       # number of writebacks (Count)
board.cache_hierarchy.dcache.writebacks::total            1                       # number of writebacks (Count)
board.cache_hierarchy.dcache.demandMshrHits::processor.cores.core.data            5                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrHits::total            5                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::processor.cores.core.data            5                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::total            5                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrMisses::processor.cores.core.data           14                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMisses::total           14                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::processor.cores.core.data           14                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::total           14                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMissLatency::processor.cores.core.data      1177488                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissLatency::total      1177488                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::processor.cores.core.data      1177488                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::total      1177488                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissRate::processor.cores.core.data     0.000191                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMshrMissRate::total     0.000191                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::processor.cores.core.data     0.000191                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::total     0.000191                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::processor.cores.core.data 84106.285714                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::total 84106.285714                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::processor.cores.core.data 84106.285714                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::total 84106.285714                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.replacements            1                       # number of replacements (Count)
board.cache_hierarchy.dcache.LoadLockedReq.hits::processor.cores.core.data           19                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.dcache.LoadLockedReq.hits::total           19                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.dcache.LoadLockedReq.misses::processor.cores.core.data            1                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.dcache.LoadLockedReq.misses::total            1                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.dcache.LoadLockedReq.missLatency::processor.cores.core.data        47619                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.dcache.LoadLockedReq.missLatency::total        47619                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.dcache.LoadLockedReq.accesses::processor.cores.core.data           20                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.LoadLockedReq.accesses::total           20                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.LoadLockedReq.missRate::processor.cores.core.data     0.050000                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.dcache.LoadLockedReq.missRate::total     0.050000                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.dcache.LoadLockedReq.avgMissLatency::processor.cores.core.data        47619                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.LoadLockedReq.avgMissLatency::total        47619                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.LoadLockedReq.mshrHits::processor.cores.core.data            1                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.dcache.LoadLockedReq.mshrHits::total            1                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data        51269                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total        51269                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.misses::processor.cores.core.data           15                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.misses::total           15                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.missLatency::processor.cores.core.data      1219446                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.missLatency::total      1219446                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data        51284                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total        51284                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.missRate::processor.cores.core.data     0.000292                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.missRate::total     0.000292                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::processor.cores.core.data 81296.400000                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::total 81296.400000                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.mshrHits::processor.cores.core.data            3                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrHits::total            3                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::processor.cores.core.data           12                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::total           12                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::processor.cores.core.data      1064934                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::total      1064934                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.000234                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::total     0.000234                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data 88744.500000                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::total 88744.500000                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data           30                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total           30                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data           30                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total           30                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data        22065                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total        22065                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.misses::processor.cores.core.data            4                       # number of WriteReq misses (Count)
board.cache_hierarchy.dcache.WriteReq.misses::total            4                       # number of WriteReq misses (Count)
board.cache_hierarchy.dcache.WriteReq.missLatency::processor.cores.core.data       226107                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.dcache.WriteReq.missLatency::total       226107                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data        22069                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total        22069                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.missRate::processor.cores.core.data     0.000181                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.dcache.WriteReq.missRate::total     0.000181                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.dcache.WriteReq.avgMissLatency::processor.cores.core.data 56526.750000                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.WriteReq.avgMissLatency::total 56526.750000                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.WriteReq.mshrHits::processor.cores.core.data            2                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.dcache.WriteReq.mshrHits::total            2                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.dcache.WriteReq.mshrMisses::processor.cores.core.data            2                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.dcache.WriteReq.mshrMisses::total            2                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.dcache.WriteReq.mshrMissLatency::processor.cores.core.data       112554                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.WriteReq.mshrMissLatency::total       112554                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.WriteReq.mshrMissRate::processor.cores.core.data     0.000091                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.dcache.WriteReq.mshrMissRate::total     0.000091                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.dcache.WriteReq.avgMshrMissLatency::processor.cores.core.data        56277                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.WriteReq.avgMshrMissLatency::total        56277                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses           14                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse   369.878267                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs        79705                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs          383                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs   208.107050                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          152                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data   217.878267                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.296875                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.425543                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.722418                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          152                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          230                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2          152                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           12                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          217                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.296875                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.449219                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses       587238                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses       587238                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        38202                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        38202                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        38202                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        38202                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst        10741                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total        10741                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst        10741                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total        10741                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst    219314799                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total    219314799                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst    219314799                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total    219314799                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        48943                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        48943                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        48943                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        48943                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.219459                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.219459                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.219459                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.219459                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 20418.471185                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 20418.471185                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 20418.471185                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 20418.471185                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            6                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            1                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs            6                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks        10430                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total        10430                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst        10487                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total        10487                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst        10487                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total        10487                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst          254                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total          254                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst          254                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher        10182                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total        10436                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst     23680962                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total     23680962                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst     23680962                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher    796748669                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total    820429631                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.005190                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.005190                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.005190                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.213228                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst 93232.133858                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total 93232.133858                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst 93232.133858                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 78250.704086                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 78615.334515                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements        10430                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher        10182                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total        10182                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher    796748669                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total    796748669                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 78250.704086                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 78250.704086                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        38202                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        38202                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst        10741                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total        10741                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst    219314799                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total    219314799                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        48943                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        48943                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.219459                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.219459                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 20418.471185                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 20418.471185                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst        10487                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total        10487                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst          254                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total          254                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst     23680962                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total     23680962                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.005190                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.005190                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst 93232.133858                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total 93232.133858                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses          254                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued        10436                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused          644                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          331                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.031717                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.565812                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR          254                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate          254                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        40825                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        30389                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        40825                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded        10436                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        40825                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse   511.995372                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        59323                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs        10942                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     5.421587                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    12.138968                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   499.856403                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.023709                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.976282                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total     0.999991                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          465                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           47                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          441                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1           24                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           47                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.908203                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.091797                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       401976                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       401976                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp        10444                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty            1                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean        10430                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq            2                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp            2                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq        10448                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port        31298                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total        31298                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port           29                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::total           29                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total        31327                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port      1335168                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total      1335168                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port          960                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::total          960                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      1336128                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        10450                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean     0.006029                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev     0.077414                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        10387     99.40%     99.40% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1           63      0.60%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        10450                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     10657624                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      8805359                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy        11359                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests        20881                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests        10434                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests           60                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples     10371.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples       254.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples        14.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples     10181.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000004216022                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds          648                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds          647                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState          25546                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState          9747                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  10450                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                 10371                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                10450                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts               10371                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 1                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.84                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 27.06                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            10450                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6           10371                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0               2110                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1               2455                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2               2693                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3               2632                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                160                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                121                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                 70                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                 46                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                 25                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                 53                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                34                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                24                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                17                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 9                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 6                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                22                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20               583                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21               608                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               988                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23               731                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24               747                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25               783                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26              1144                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27               926                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28               806                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29               825                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30               683                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31               680                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32               680                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                36                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                15                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                22                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                17                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                15                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 6                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples          647                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.128284                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    15.963589                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     2.248616                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::4-5            3      0.46%      0.46% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::6-7            3      0.46%      0.93% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::8-9            1      0.15%      1.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::10-11            8      1.24%      2.32% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::12-13           12      1.85%      4.17% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::14-15           28      4.33%      8.50% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16-17          545     84.23%     92.74% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18-19           19      2.94%     95.67% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::20-21           18      2.78%     98.45% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::22-23            4      0.62%     99.07% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::26-27            2      0.31%     99.38% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::28-29            1      0.15%     99.54% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::30-31            1      0.15%     99.69% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::34-35            1      0.15%     99.85% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::38-39            1      0.15%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total          647                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples          648                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    16.010802                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.008963                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     0.274986                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16          647     99.85%     99.85% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::23            1      0.15%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total          648                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                 64                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys             668800                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys          663744                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3345011414.37630796                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3319723768.27719498                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                199936863                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9602.65                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst        16256                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data          896                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher       651520                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks       663616                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 81304583.660438492894                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 4481355.004906058311                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3258585282.138833999634                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3319083574.705065727234                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst          254                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data           14                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher        10182                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks        10371                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst     17617143                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data       843505                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher    556976420                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks   5384421028                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     69358.83                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     60250.36                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     54702.06                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    519180.51                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst        16256                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data          896                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher       651264                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total       668416                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst        16256                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher       651264                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total       667520                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks           64                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total           64                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst          254                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data           14                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher        10176                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        10444                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks            1                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total            1                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     81304584                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data      4481355                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3257304895                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3343090834                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     81304584                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3257304895                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3338609479                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks       320097                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total       320097                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks       320097                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     81304584                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data      4481355                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3257304895                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3343410930                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           10448                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts          10369                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1210                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1302                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1300                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3         1282                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4         1383                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5         1282                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         1296                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7          383                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            9                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           62                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11          390                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12          233                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14          109                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15          191                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0         1141                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1         1315                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2         1359                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3         1296                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4         1362                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5         1228                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6         1176                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7          388                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8           19                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9           46                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           74                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11          394                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12          238                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13           31                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           93                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15          209                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          379537068                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat         52240000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat     575437068                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           36326.29                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      55076.29                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits           9627                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits          9500                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        92.14                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.62                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         1687                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   789.017190                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   638.723880                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   352.780999                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127           76      4.51%      4.51% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          157      9.31%     13.81% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          109      6.46%     20.27% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           95      5.63%     25.90% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639           58      3.44%     29.34% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767           33      1.96%     31.30% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           32      1.90%     33.20% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023           21      1.24%     34.44% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         1106     65.56%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         1687                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead           668672                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten        663616                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3344.371221                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3319.083575                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              52.06                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.13                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         25.93                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          91.88                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy     10324440                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      5464800                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     67451580                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy     48592980                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 15366000.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy     91101390                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       477600                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    238778790                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1194.255051                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE       115476                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF      6500000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    194412084                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy      1949220                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy      1009470                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy      7632660                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy      5898600                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 15366000.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy     63590340                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy     23633280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy    119079570                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   595.577932                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE     60843766                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF      6500000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT    133653794                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles           600419                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.968296                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.251997                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded          162840                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded          121                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued         159938                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        10522                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         8712                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           58                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples       199133                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.803172                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.069700                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0       111031     55.76%     55.76% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1        37964     19.06%     74.82% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2        32062     16.10%     90.92% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3        15252      7.66%     98.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4         2216      1.11%     99.69% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          462      0.23%     99.93% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6          103      0.05%     99.98% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7           42      0.02%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            1      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total       199133                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            2      3.51%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      3.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead           54     94.74%     98.25% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            1      1.75%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass           50      0.03%      0.03% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        70095     43.83%     43.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult           60      0.04%     43.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc           20      0.01%     43.91% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.91% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd           20      0.01%     43.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu           20      0.01%     43.93% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp           41      0.03%     43.96% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.96% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc           40      0.03%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            1      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        66770     41.75%     85.73% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite        22821     14.27%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total       159938                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.266377                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                  57                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000356                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads       518055                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites       173787                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses       156328                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads         1011                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites          638                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses          463                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses       159459                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses          486                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         2222                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled            2972                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles          401286                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads        67041                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores        23514                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads        12170                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          909                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        24881                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         3728                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles       170524                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        41834                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         27221                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          929                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2827                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict          901                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         1571                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         1256                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return          469      1.78%      1.78% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect          297      1.13%      2.91% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect           86      0.33%      3.24% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        25110     95.37%     98.60% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond          266      1.01%     99.61% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     99.61% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond          102      0.39%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        26330                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return          415      1.59%      1.59% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect          267      1.02%      2.61% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect           86      0.33%      2.94% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        24999     95.70%     98.64% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond          263      1.01%     99.65% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     99.65% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           92      0.35%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        26122                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        41834                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.593345                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     3.208445                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3          207      0.49%      0.49% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7          128      0.31%      0.80% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11          102      0.24%      1.04% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15           90      0.22%      1.26% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19           48      0.11%      1.37% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           97      0.23%      1.61% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27           54      0.13%      1.74% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31           48      0.11%      1.85% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        41060     98.15%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        41834                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return          227     25.48%     25.48% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect          152     17.06%     42.54% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            4      0.45%     42.99% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond          392     44.00%     86.98% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           86      9.65%     96.63% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     96.63% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond           30      3.37%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          891                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return          463      9.38%      9.38% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          275      5.57%     14.95% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect           53      1.07%     16.02% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond         3795     76.85%     92.87% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond          270      5.47%     98.34% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.34% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           82      1.66%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         4938                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return          181      6.40%      6.40% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          193      6.83%     13.23% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect           38      1.34%     14.57% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2285     80.83%     95.40% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond          100      3.54%     98.94% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.94% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond           30      1.06%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2827                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return          180      0.82%      0.82% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect          144      0.65%      1.47% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect           37      0.17%      1.64% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond        21592     97.83%     99.47% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           78      0.35%     99.82% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     99.82% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond           40      0.18%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total        22071                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return          180     10.48%     10.48% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect          134      7.80%     18.28% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           37      2.15%     20.43% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         1259     73.28%     93.71% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           78      4.54%     98.25% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     98.25% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond           30      1.75%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         1718                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget          144     16.16%     16.16% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB          520     58.36%     74.52% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS          227     25.48%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          891                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2809     99.36%     99.36% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            4      0.14%     99.50% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect           14      0.50%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2827                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect          193     12.29%     12.29% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     12.29% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         1278     81.35%     93.63% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond          100      6.37%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         1571                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted          392                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken          248                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2827                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2827                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          891                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          838                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC          262                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          891                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         1862                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups           34                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses           34                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         1882                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted          945                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          891                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return          227     25.48%     25.48% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect          152     17.06%     42.54% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            4      0.45%     42.99% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond          392     44.00%     86.98% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           86      9.65%     96.63% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     96.63% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond           30      3.37%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          891                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return          180     21.48%     21.48% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect          144     17.18%     38.66% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect           37      4.42%     43.08% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond          359     42.84%     85.92% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           78      9.31%     95.23% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     95.23% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond           40      4.77%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          838                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return          167      8.97%      8.97% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect          193     10.37%     19.33% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect           38      2.04%     21.37% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         1334     71.64%     93.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond          100      5.37%     98.39% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.39% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond           30      1.61%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         1862                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          738                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          738                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          527                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1          105                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           96                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            6                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            4                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes          602                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops          600                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes          421                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used          574                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong          180                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups           34                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses           34                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           68                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords          102                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect           50                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            1                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            6                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            4                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            2                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            6                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2           11                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3           17                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4           10                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            7                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            5                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           11                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2           16                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3           10                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4           12                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        10618                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls           63                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         1256                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples       196416                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.776418                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.298246                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0       116215     59.17%     59.17% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1        50349     25.63%     84.80% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         9234      4.70%     89.50% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3         8428      4.29%     93.79% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4         4134      2.10%     95.90% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5         6993      3.56%     99.46% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          694      0.35%     99.81% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7          217      0.11%     99.92% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8          152      0.08%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total       196416                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           30                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls          181                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           50      0.03%      0.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu        67192     44.06%     44.09% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult           60      0.04%     44.13% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     44.13% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     44.13% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     44.13% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     44.13% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     44.13% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     44.13% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     44.13% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc           20      0.01%     44.15% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     44.15% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd           20      0.01%     44.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     44.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu           20      0.01%     44.17% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp           40      0.03%     44.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     44.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc           40      0.03%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     44.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead        62962     41.29%     85.51% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite        22097     14.49%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total       152501                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples          152                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts       151304                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps       152501                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP       151243                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP       152440                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.968296                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.251997                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs        85059                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts       131176                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts        62962                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts        22067                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts          460                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           50      0.03%      0.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu        67192     44.06%     44.09% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult           60      0.04%     44.13% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     44.13% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     44.13% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     44.13% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     44.13% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     44.13% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     44.13% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     44.13% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc           20      0.01%     44.15% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     44.15% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd           20      0.01%     44.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     44.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu           20      0.01%     44.17% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp           40      0.03%     44.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     44.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc           40      0.03%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     44.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead        62962     41.29%     85.51% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite        22097     14.49%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total       152501                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl        22071                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl        21814                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl          257                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl        21592                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl          479                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall          181                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn          180                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles       137173                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         1561                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        57316                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          926                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2157                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved          396                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred          295                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         1291                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts       172118                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         4117                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts       157716                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop          150                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches        22391                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts        65960                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts        22384                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.262677                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        64050                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        64482                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads       179759                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites        90882                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs        88344                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2045                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites           60                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads          689                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches          182                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         60759                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         7456                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        48943                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         1892                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples       199133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.913209                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.536042                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0       138987     69.80%     69.80% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         9288      4.66%     74.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2        11144      5.60%     80.06% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3        10282      5.16%     85.22% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        28705     14.41%     99.63% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5          235      0.12%     99.75% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6          202      0.10%     99.85% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           99      0.05%     99.90% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8          191      0.10%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total       199133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts       179493                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.298946                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        26330                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.043853                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles       134646                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          41834                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals         18906                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          3728                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        41834                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     5.486685                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.540495                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3        11528     27.56%     27.56% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        13353     31.92%     59.48% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8        16953     40.52%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        41834                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2157                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          727                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            5                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts       163111                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts         2770                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        67041                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts        23514                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts          121                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            4                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          953                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect           18                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         1296                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         1314                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit       156859                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount       156791                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst       102617                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst       144750                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.261136                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.708926                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads        14604                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         4079                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses          154                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          953                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         1417                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads           23                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples        62962                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.169976                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     2.465399                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9        62955     99.99%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19            1      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149            1      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159            1      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          430                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total        62962                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON    216874575                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2157                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles       139572                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          731                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles          769                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        55853                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles           51                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts       169433                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.IQFullEvents            1                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.renamedOperands       191289                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups       265170                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups       192577                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups          689                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps       172359                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        18931                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing          107                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing           59                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts          499                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads           359370                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          328947                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts       151243                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps       152440                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            2                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
