
---------- Begin Simulation Statistics ----------
simSeconds                                   0.000011                       # Number of seconds simulated (Second)
simTicks                                     10513809                       # Number of ticks simulated (Tick)
finalTick                                    23789520                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.16                       # Real time elapsed on the host (Second)
hostTickRate                                 66680115                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     205448                       # Number of bytes of host memory used (Byte)
simInsts                                        33801                       # Number of instructions simulated (Count)
simOps                                          34823                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   214188                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     220656                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7233                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7233                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7233                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7233                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7233                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7233                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7233                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7233                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         7233                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         7233                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         7233                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         7233                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        57864                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        57864                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        10050                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        10050                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        10050                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        10050                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst         2027                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total         2027                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst         2027                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total         2027                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     24789519                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     24789519                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     24789519                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     24789519                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        12077                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        12077                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        12077                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        12077                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.167840                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.167840                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.167840                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.167840                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 12229.659102                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 12229.659102                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 12229.659102                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 12229.659102                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          753                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          753                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst         2027                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total         2027                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst         2027                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total         2027                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          775                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          775                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     39816884                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     39816884                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.064172                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 51376.624516                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 51376.624516                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          753                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          775                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          775                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     39816884                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     39816884                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 51376.624516                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 51376.624516                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        10050                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        10050                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst         2027                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total         2027                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     24789519                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     24789519                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        12077                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        12077                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.167840                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.167840                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 12229.659102                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 12229.659102                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst         2027                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total         2027                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          775                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused          171                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful           64                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.082581                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        18869                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        18093                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        18869                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          776                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        18869                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse   510.498781                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        17104                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          753                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    22.714475                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    32.043610                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   478.455171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.062585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.934483                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total     0.997068                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        97390                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        97390                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          774                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          753                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          775                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2302                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2302                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        97728                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        97728                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          775                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          775    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          775                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1087346                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       773226                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1528                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          748                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            5                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher           10                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total           10                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher           10                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total           10                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandMisses::cache_hierarchy.icache.prefetcher          765                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::total          765                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.overallMisses::cache_hierarchy.icache.prefetcher          765                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::total          765                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.demandMissLatency::cache_hierarchy.icache.prefetcher     39498896                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::total     39498896                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::cache_hierarchy.icache.prefetcher     39498896                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::total     39498896                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          775                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          775                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          775                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          775                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandMissRate::cache_hierarchy.icache.prefetcher     0.987097                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::total     0.987097                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::cache_hierarchy.icache.prefetcher     0.987097                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::total     0.987097                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMissLatency::cache_hierarchy.icache.prefetcher 51632.543791                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::total 51632.543791                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::cache_hierarchy.icache.prefetcher 51632.543791                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::total 51632.543791                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.demandMshrMisses::cache_hierarchy.icache.prefetcher          765                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::total          765                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.icache.prefetcher          765                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::total          765                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMissLatency::cache_hierarchy.icache.prefetcher     39243818                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::total     39243818                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     39243818                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::total     39243818                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissRate::cache_hierarchy.icache.prefetcher     0.987097                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::total     0.987097                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.icache.prefetcher     0.987097                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::total     0.987097                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 51299.108497                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::total 51299.108497                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 51299.108497                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::total 51299.108497                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher           10                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total           10                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::cache_hierarchy.icache.prefetcher          765                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::total          765                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::cache_hierarchy.icache.prefetcher     39498896                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::total     39498896                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          775                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          775                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::cache_hierarchy.icache.prefetcher     0.987097                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::total     0.987097                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::cache_hierarchy.icache.prefetcher 51632.543791                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::total 51632.543791                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::cache_hierarchy.icache.prefetcher          765                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::total          765                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     39243818                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::total     39243818                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::cache_hierarchy.icache.prefetcher     0.987097                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::total     0.987097                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 51299.108497                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::total 51299.108497                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          748                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          748                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          748                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          748                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses          765                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse  1266.434553                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher   839.434553                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.051235                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.077297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0          728                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1          664                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        25134                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        25134                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          766                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          766                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port         1532                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::total         1532                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         1532                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port        49024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::total        49024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total        49024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          766                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          766    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          766                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       255310                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       656616                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests          766                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       766.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000581678                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1535                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    766                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  766                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  2.82                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              766                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                185                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                229                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                273                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                 78                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49024                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         4662820106.39531326                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 10641681                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 13892.53                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49024                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 4662820106.395313262939                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          766                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     18263776                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     23843.05                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49024                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        49024                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49024                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        49024                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          766                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          766                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   4662820106                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   4662820106                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   4662820106                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   4662820106                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   4662820106                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   4662820106                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             766                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0           96                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           30                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat            3901276                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3830000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      18263776                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            5093.05                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      23843.05                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            717                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.60                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples           62                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   885.677419                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   795.479312                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   278.172536                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            1      1.61%      1.61% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255            3      4.84%      6.45% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            1      1.61%      8.06% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            3      4.84%     12.90% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            3      4.84%     17.74% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            2      3.23%     20.97% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            2      3.23%     24.19% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           47     75.81%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total           62                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            49024                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        4662.820106                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              36.43                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          36.43                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          93.60                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       435540                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       227700                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5947620                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      6861660                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       235680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     14937480                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1420.748655                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE        68960                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     15072030                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       128520                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy        68310                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy      1106700                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      3650280                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      2966400                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      9149490                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   870.235516                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      7683270                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT      7526250                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            31573                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               5.134656                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.194755                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           28229                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          19879                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        22076                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        18073                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        27998                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.710015                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.082658                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        17104     61.09%     61.09% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         5286     18.88%     79.97% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3198     11.42%     91.39% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         1629      5.82%     97.21% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          606      2.16%     99.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          164      0.59%     99.96% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           11      0.04%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        27998                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         8942     44.98%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         9058     45.57%     90.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         1879      9.45%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        19879                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.629620                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        67754                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        51238                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        15703                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        19879                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         2836                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled              99                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles            3575                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         9936                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         3769                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         1791                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores           97                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        16444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2156                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         9398                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        18990                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          6382                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            8                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2156                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode          243                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         1913                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           22      0.35%      0.35% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.09%      0.44% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.44% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         6346     99.56%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         6374                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           22      0.35%      0.35% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.09%      0.44% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.44% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         6346     99.56%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         6374                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        18990                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.991785                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.456128                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.01%      0.01% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            1      0.01%      0.02% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            1      0.01%      0.02% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.02% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            2      0.01%      0.04% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        18982     99.96%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        18990                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            4     50.00%     50.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            1     12.50%     62.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            0      0.00%     62.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            3     37.50%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            8                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           14      0.32%      0.32% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.12%      0.44% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.44% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond         4298     99.51%     99.95% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            2      0.05%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         4319                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.23%      0.23% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.23% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2151     99.77%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2156                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.10% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.10% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.90%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2050                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     50.00%     50.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            4     50.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            8                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2156    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2156                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5      2.06%      2.06% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      2.06% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond          238     97.94%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total          243                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            0                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2156                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2156                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            8                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC          135                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            8                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2156                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2156                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            8                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            4     50.00%     50.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            1     12.50%     62.50% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.50% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            0      0.00%     62.50% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            3     37.50%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            8                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.23%      0.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.23% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2151     99.77%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2156                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2050                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2050                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2036                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            5                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            7                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::5            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           10                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            8                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            8                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            5                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          123                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect           14                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong         1911                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1           68                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2           30                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3           16                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          105                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           18                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        22083                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         1914                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        24496                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.251021                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.586974                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        20263     82.72%     82.72% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2318      9.46%     92.18% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         1914      7.81%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            3                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        24496                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     5.134656                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.194755                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        15027                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         1588                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         7299                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2171                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         1913                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            5                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            5                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection          245                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        33552                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          463                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        17041                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2525                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7612                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         1599                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.539733                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         7557                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         9492                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        16112                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         8667                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9211                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2525                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles         11873                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4312                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        12077                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         1616                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        27998                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.284556                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.673708                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        16125     57.59%     57.59% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1928      6.89%     64.48% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         1890      6.75%     71.23% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1963      7.01%     78.24% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         6092     21.76%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        27998                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        35965                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.139106                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         6374                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.201881                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        13969                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          18990                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          3061                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2156                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        18990                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.568457                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.240908                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6381     33.60%     33.60% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        10063     52.99%     86.59% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         2546     13.41%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        18990                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         1913                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         1588                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        28236                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts          381                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         9936                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         3769                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          926                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         2339                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         2339                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        15952                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        15703                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        10702                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        16384                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.497355                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.653198                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads          379                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         7888                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses          379                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          926                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         3769                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     23789520                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         1913                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        15623                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         1588                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         8874                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        32191                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        39492                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        48192                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        30672                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        29240                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            52728                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           59970                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      3373956                       # Number of ticks simulated (Tick)
finalTick                                    27175464                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 48306542                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     209544                       # Number of bytes of host memory used (Byte)
simInsts                                        39962                       # Number of instructions simulated (Count)
simOps                                          40984                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   571445                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     586012                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2101                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2101                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2101                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2101                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2101                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2101                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2101                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2101                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2101                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2101                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2101                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2101                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        16808                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        16808                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6559                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6559                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6559                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6559                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          506                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          506                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          506                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          506                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst       731268                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total       731268                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst       731268                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total       731268                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         7065                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         7065                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         7065                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         7065                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.071621                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.071621                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.071621                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.071621                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  1445.193676                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  1445.193676                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  1445.193676                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  1445.193676                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          768                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          768                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          505                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          505                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          505                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          505                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          768                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst         4329                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total         4329                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst         4329                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3407323                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3411652                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000142                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000142                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000142                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.108846                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst         4329                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total         4329                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst         4329                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4436.618490                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4436.478544                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          768                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          768                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          768                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3407323                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3407323                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4436.618490                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4436.618490                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6559                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6559                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          506                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          506                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst       731268                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total       731268                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         7065                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         7065                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.071621                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.071621                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  1445.193676                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  1445.193676                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          505                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          505                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst         4329                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total         4329                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000142                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000142                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst         4329                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total         4329                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          769                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            6                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          513                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.667100                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.998054                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         7924                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         7155                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         7924                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         7924                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         9369                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          768                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    12.199219                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     0.660975                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   511.339025                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.001291                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.998709                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          511                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024            1                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          511                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.998047                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.001953                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        57288                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        57288                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          768                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          768                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          769                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2305                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2305                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98304                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98304                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          769                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          769    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          769                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1081741                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       767232                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1537                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          768                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          768                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          769                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          768                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          769                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst            1                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          768                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          769                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst            1                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          768                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          769                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst            1                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          768                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          769                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst            1                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          768                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          769                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          768                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          768                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          768                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          768                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1646                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1219                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074402                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100464                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0          489                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1          903                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24592                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24592                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      1538430                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy            0                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1538430                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   455.972158                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT      3385944                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1295520                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1295520                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   383.976555                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3385944                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            10132                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.647748                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.606889                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            6407                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           6329                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined          265                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined          199                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        10132                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.624655                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.502836                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3886     38.35%     38.35% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6170     60.90%     99.25% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2           72      0.71%     99.96% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3            1      0.01%     99.97% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            3      0.03%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            4                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        10132                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4162     65.76%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     65.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2132     33.69%     99.45% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite           35      0.55%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         6329                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.624655                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        22789                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         6678                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6276                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         6329                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts           50                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2135                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores           39                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads           23                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores            1                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         8017                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2098                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles           17                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         8021                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2980                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            8                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2098                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2063                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit           35                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            2      0.07%      0.07% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            2      0.07%      0.13% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.13% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2970     99.87%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2974                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            2      0.07%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2970     99.93%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2972                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         8021                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.980052                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.752453                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.02%      0.02% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            3      0.04%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.01%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         8015     99.93%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         8021                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     50.00%     83.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            1     16.67%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.11%      0.11% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.11% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          925     99.89%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          926                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1      0.05%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2097     99.95%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2098                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2098    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2098                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1      0.05%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2062     99.95%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2063                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2098                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2098                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2013                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2098                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2098                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     50.00%     83.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            1     16.67%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1      0.05%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2097     99.95%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2098                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            1                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          908                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1109                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong           31                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          421                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          249                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          228                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          900                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            8                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts          265                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts           35                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        10082                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.609899                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.497462                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3974     39.42%     39.42% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6071     60.22%     99.63% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2           35      0.35%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.01%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        10082                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.647748                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.606889                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5104                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles           15                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         4951                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles           27                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles           35                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2065                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         6450                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7187                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6278                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2048                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2101                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts           33                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.619621                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6144                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6174                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4260                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2138                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2134                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2048                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            2                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          5017                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4196                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         7065                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          430                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        10132                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.559317                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.780174                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5115     50.48%     50.48% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1041     10.27%     60.76% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2           53      0.52%     61.28% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1040     10.26%     71.55% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2883     28.45%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        10132                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15799                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.559317                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2974                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.293525                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3017                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           8021                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           903                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2098                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         8021                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.525745                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.271103                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6251     77.93%     77.93% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1766     22.02%     99.95% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8            4      0.05%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         8021                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles           35                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles           15                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         6408                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           12                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2135                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts           39                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            5                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect           35                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts           35                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6276                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6276                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4190                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8306                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.619424                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.504455                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads           89                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            5                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores           39                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      3385944                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles           35                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         6916                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles           15                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3166                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts         6438                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        10602                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10683                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         4371                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps          368                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            16496                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           12873                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      3301029                       # Number of ticks simulated (Tick)
finalTick                                    30489480                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 48584286                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     213640                       # Number of bytes of host memory used (Byte)
simInsts                                        46123                       # Number of instructions simulated (Count)
simOps                                          47145                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   678012                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     692977                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        16368                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        16368                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          771                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          771                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst         4662                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3420317                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3424979                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.111417                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4447.746424                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4448.024675                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          771                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3420317                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3420317                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4447.746424                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4447.746424                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          770                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            2                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          513                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.666234                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.998054                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         7764                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         6994                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         7764                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          770                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         7764                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         7255                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          771                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     9.409857                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.248764                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.751236                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002439                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997561                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          511                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024            1                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          511                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.998047                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.001953                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        56059                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        56059                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          771                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          771                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2312                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2312                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98688                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98688                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1083079                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       770229                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1541                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          771                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          769                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst            1                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst            1                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          769                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst            1                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst            1                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          771                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          771                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          771                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          771                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1646                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1219                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074402                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100464                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0          233                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1159                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24656                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24656                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      1505370                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy            0                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1505370                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   456.030529                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1267680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1267680                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   384.025708                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             9913                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.612132                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.620297                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            6142                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           6145                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples         9913                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.619893                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.486060                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3770     38.03%     38.03% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6142     61.96%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            3                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         9913                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4099     66.70%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2046     33.30%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         6145                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.619893                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        22202                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         6143                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6145                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         6145                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2046                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         7850                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2047                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles           16                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         7853                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2909                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            9                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2047                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2047                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            2      0.07%      0.07% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            2      0.07%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2898     99.83%     99.97% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            1      0.03%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2903                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            2      0.07%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2898     99.93%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2900                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         7853                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.979626                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.760454                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.03%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            3      0.04%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.01%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         7847     99.92%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         7853                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     50.00%     83.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            1     16.67%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.12%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          852     99.88%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          853                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1      0.05%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2046     99.95%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2047                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2047    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2047                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1      0.05%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2046     99.95%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2047                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2047                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2047                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2048                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2047                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2047                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     50.00%     83.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            1     16.67%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1      0.05%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2046     99.95%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2047                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            1                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          917                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1131                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          432                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          245                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          230                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          910                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.numCommittedDist::samples         9913                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.620297                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.488032                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3770     38.03%     38.03% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6141     61.95%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2            0      0.00%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.01%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         9913                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.612132                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.620297                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5049                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4864                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2046                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         6144                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7164                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6144                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2048                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2046                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.619792                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6144                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6141                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4093                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2051                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2046                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2048                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            3                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          4865                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4094                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         6911                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          427                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         9913                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.548976                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.782189                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5048     50.92%     50.92% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1027     10.36%     61.28% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2            0      0.00%     61.28% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1024     10.33%     71.61% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2814     28.39%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         9913                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15355                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.548976                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2903                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.292848                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3001                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           7853                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           856                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2047                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         7853                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.524768                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.269295                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6142     78.21%     78.21% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1708     21.75%     99.96% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8            3      0.04%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         7853                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         6143                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2046                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts            0                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            0                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            0                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6145                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6145                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4094                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8188                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.619893                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.500000                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles         6840                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3073                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts         6144                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        10234                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10235                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         4094                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            16062                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           12293                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      3301695                       # Number of ticks simulated (Tick)
finalTick                                    33803496                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 48976453                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     216712                       # Number of bytes of host memory used (Byte)
simInsts                                        52284                       # Number of instructions simulated (Count)
simOps                                          53306                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   774678                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     789752                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        16368                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        16368                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst         4662                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3431637                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.111417                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4456.671429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          772                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          770                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            2                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          513                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.666234                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.998054                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         7766                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         6996                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         7766                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          770                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         7766                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         7153                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          772                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     9.265544                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.248916                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.751084                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002439                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997561                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          511                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024            1                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          511                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.998047                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.001953                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        56060                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        56060                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1084078                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       771228                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1542                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          772                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          769                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst            1                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst            1                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          769                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst            1                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst            1                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1646                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1219                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074402                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100464                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1392                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24672                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24672                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples            1                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean          512                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   512.000000                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev          nan                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-575            1    100.00%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total            1                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy         3795                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       405270                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       926400                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1950105                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   590.637536                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      2384746                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT       669270                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1173120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1900050                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   575.477141                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3054016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             9915                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.612457                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.620171                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            6142                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           6145                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.619768                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.486091                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3772     38.04%     38.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6142     61.95%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            3                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4099     66.70%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2046     33.30%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         6145                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.619768                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        22204                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         6143                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6145                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         6145                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2046                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         7852                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2047                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles           16                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         7855                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2909                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            9                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2047                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2047                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            2      0.07%      0.07% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            2      0.07%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2898     99.83%     99.97% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            1      0.03%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2903                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            2      0.07%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2898     99.93%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2900                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.979631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.760358                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.03%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            3      0.04%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.01%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         7849     99.92%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     50.00%     83.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            1     16.67%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.12%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          852     99.88%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          853                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1      0.05%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2046     99.95%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2047                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2047    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2047                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1      0.05%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2046     99.95%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2047                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2047                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2047                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2048                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2047                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2047                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     50.00%     83.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            1     16.67%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1      0.05%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2046     99.95%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2047                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            1                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          917                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1131                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          432                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          245                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          230                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          910                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.numCommittedDist::samples         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.620171                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.488063                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3772     38.04%     38.04% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6141     61.94%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2            0      0.00%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.01%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.612457                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.620171                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5051                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4864                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2046                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         6144                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7164                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6144                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2048                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2046                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.619667                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6144                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6141                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4093                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2051                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2046                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2048                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            3                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          4865                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4094                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         6911                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          427                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.548664                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.782145                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5050     50.93%     50.93% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1027     10.36%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2            0      0.00%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1024     10.33%     71.62% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2814     28.38%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15355                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.548664                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2903                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.292789                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3003                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           7855                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           856                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2047                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.525525                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.270046                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6142     78.19%     78.19% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1710     21.77%     99.96% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8            3      0.04%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         6143                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2046                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts            0                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            0                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            0                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6145                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6145                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4094                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8188                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.619768                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.500000                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles         6842                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3073                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts         6144                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        10234                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10235                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         4094                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            16064                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           12293                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      3301695                       # Number of ticks simulated (Tick)
finalTick                                    37117512                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 48484489                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     220808                       # Number of bytes of host memory used (Byte)
simInsts                                        58445                       # Number of instructions simulated (Count)
simOps                                          59467                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   857205                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     872124                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        16368                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        16368                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst         4662                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3431637                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.111417                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4456.671429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          772                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          770                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            2                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          513                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.666234                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.998054                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         7766                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         6996                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         7766                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          770                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         7766                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         7153                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          772                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     9.265544                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.248916                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.751084                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002439                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997561                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          511                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024            1                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          511                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.998047                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.001953                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        56060                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        56060                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1084078                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       771228                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1542                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          772                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          769                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst            1                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst            1                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          769                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst            1                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst            1                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1646                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1219                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074402                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100464                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1392                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24672                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24672                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      1268160                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1268160                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   384.093625                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1268160                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1268160                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   384.093625                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             9915                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.612457                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.620171                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            6142                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           6145                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.619768                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.486091                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3772     38.04%     38.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6142     61.95%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            3                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4099     66.70%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2046     33.30%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         6145                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.619768                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        22204                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         6143                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6145                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         6145                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2046                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         7852                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2047                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles           16                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         7855                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2909                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            9                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2047                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2047                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            2      0.07%      0.07% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            2      0.07%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2898     99.83%     99.97% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            1      0.03%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2903                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            2      0.07%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2898     99.93%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2900                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.979631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.760358                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.03%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            3      0.04%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.01%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         7849     99.92%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     50.00%     83.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            1     16.67%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.12%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          852     99.88%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          853                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1      0.05%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2046     99.95%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2047                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2047    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2047                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1      0.05%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2046     99.95%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2047                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2047                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2047                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2048                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2047                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2047                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     50.00%     83.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            1     16.67%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1      0.05%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2046     99.95%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2047                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            1                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          917                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1131                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          432                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          245                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          230                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          910                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.numCommittedDist::samples         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.620171                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.488063                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3772     38.04%     38.04% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6141     61.94%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2            0      0.00%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.01%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.612457                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.620171                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5051                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4864                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2046                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         6144                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7164                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6144                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2048                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2046                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.619667                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6144                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6141                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4093                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2051                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2046                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2048                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            3                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          4865                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4094                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         6911                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          427                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.548664                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.782145                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5050     50.93%     50.93% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1027     10.36%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2            0      0.00%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1024     10.33%     71.62% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2814     28.38%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15355                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.548664                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2903                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.292789                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3003                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           7855                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           856                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2047                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.525525                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.270046                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6142     78.19%     78.19% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1710     21.77%     99.96% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8            3      0.04%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         6143                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2046                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts            0                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            0                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            0                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6145                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6145                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4094                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8188                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.619768                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.500000                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles         6842                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3073                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts         6144                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        10234                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10235                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         4094                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            16064                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           12293                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      3301695                       # Number of ticks simulated (Tick)
finalTick                                    40431528                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 48999829                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     224904                       # Number of bytes of host memory used (Byte)
simInsts                                        64606                       # Number of instructions simulated (Count)
simOps                                          65628                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   957660                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     972730                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        16368                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        16368                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst         4662                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3431637                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.111417                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4456.671429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          772                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          770                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            2                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          513                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.666234                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.998054                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         7766                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         6996                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         7766                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          770                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         7766                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         7153                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          772                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     9.265544                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.248916                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.751084                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002439                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997561                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          511                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024            1                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          511                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.998047                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.001953                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        56060                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        56060                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1084078                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       771228                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1542                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          772                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          769                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst            1                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst            1                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          769                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst            1                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst            1                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1646                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1219                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074402                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100464                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1392                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24672                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24672                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      1173600                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1900530                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   575.622521                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      3054016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1173600                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1900530                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   575.622521                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3054016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             9915                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.612457                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.620171                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            6142                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           6145                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.619768                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.486091                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3772     38.04%     38.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6142     61.95%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            3                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4099     66.70%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2046     33.30%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         6145                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.619768                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        22204                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         6143                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6145                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         6145                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2046                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         7852                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2047                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles           16                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         7855                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2909                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            9                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2047                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2047                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            2      0.07%      0.07% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            2      0.07%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2898     99.83%     99.97% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            1      0.03%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2903                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            2      0.07%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2898     99.93%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2900                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.979631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.760358                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.03%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            3      0.04%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.01%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         7849     99.92%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     50.00%     83.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            1     16.67%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.12%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          852     99.88%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          853                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1      0.05%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2046     99.95%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2047                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2047    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2047                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1      0.05%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2046     99.95%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2047                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2047                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2047                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2048                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2047                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2047                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     50.00%     83.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            1     16.67%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1      0.05%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2046     99.95%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2047                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            1                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          917                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1131                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          432                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          245                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          230                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          910                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.numCommittedDist::samples         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.620171                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.488063                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3772     38.04%     38.04% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6141     61.94%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2            0      0.00%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.01%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.612457                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.620171                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5051                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4864                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2046                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         6144                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7164                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6144                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2048                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2046                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.619667                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6144                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6141                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4093                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2051                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2046                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2048                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            3                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          4865                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4094                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         6911                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          427                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.548664                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.782145                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5050     50.93%     50.93% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1027     10.36%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2            0      0.00%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1024     10.33%     71.62% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2814     28.38%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15355                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.548664                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2903                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.292789                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3003                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           7855                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           856                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2047                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.525525                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.270046                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6142     78.19%     78.19% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1710     21.77%     99.96% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8            3      0.04%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         6143                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2046                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts            0                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            0                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            0                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6145                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6145                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4094                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8188                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.619768                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.500000                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles         6842                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3073                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts         6144                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        10234                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10235                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         4094                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            16064                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           12293                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      3301695                       # Number of ticks simulated (Tick)
finalTick                                    43745544                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 48430671                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     227976                       # Number of bytes of host memory used (Byte)
simInsts                                        70767                       # Number of instructions simulated (Count)
simOps                                          71789                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1036325                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1051204                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        16368                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        16368                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst         4662                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3431637                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.111417                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4456.671429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          772                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          770                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            2                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          513                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.666234                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.998054                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         7766                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         6996                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         7766                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          770                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         7766                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         7153                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          772                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     9.265544                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.248916                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.751084                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002439                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997561                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          511                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024            1                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          511                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.998047                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.001953                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        56060                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        56060                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1084078                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       771228                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1542                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          772                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          769                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst            1                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst            1                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          769                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst            1                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst            1                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1646                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1219                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074402                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100464                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1392                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24672                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24672                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      1267680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1267680                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   383.948245                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1267680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1267680                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   383.948245                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             9915                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.612457                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.620171                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            6142                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           6145                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.619768                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.486091                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3772     38.04%     38.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6142     61.95%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            3                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4099     66.70%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2046     33.30%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         6145                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.619768                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        22204                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         6143                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6145                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         6145                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2046                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         7852                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2047                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles           16                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         7855                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2909                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            9                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2047                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2047                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            2      0.07%      0.07% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            2      0.07%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2898     99.83%     99.97% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            1      0.03%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2903                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            2      0.07%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2898     99.93%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2900                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.979631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.760358                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.03%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            3      0.04%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.01%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         7849     99.92%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     50.00%     83.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            1     16.67%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.12%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          852     99.88%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          853                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1      0.05%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2046     99.95%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2047                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2047    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2047                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1      0.05%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2046     99.95%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2047                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2047                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2047                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2048                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2047                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2047                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     50.00%     83.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            1     16.67%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1      0.05%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2046     99.95%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2047                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            1                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          917                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1131                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          432                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          245                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          230                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          910                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.numCommittedDist::samples         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.620171                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.488063                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3772     38.04%     38.04% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6141     61.94%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2            0      0.00%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.01%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.612457                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.620171                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5051                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4864                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2046                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         6144                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7164                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6144                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2048                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2046                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.619667                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6144                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6141                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4093                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2051                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2046                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2048                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            3                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          4865                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4094                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         6911                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          427                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.548664                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.782145                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5050     50.93%     50.93% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1027     10.36%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2            0      0.00%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1024     10.33%     71.62% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2814     28.38%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15355                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.548664                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2903                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.292789                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3003                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           7855                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           856                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2047                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.525525                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.270046                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6142     78.19%     78.19% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1710     21.77%     99.96% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8            3      0.04%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         6143                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2046                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts            0                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            0                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            0                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6145                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6145                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4094                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8188                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.619768                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.500000                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles         6842                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3073                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts         6144                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        10234                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10235                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         4094                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            16064                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           12293                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      3301695                       # Number of ticks simulated (Tick)
finalTick                                    47059560                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 48993753                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     232072                       # Number of bytes of host memory used (Byte)
simInsts                                        76928                       # Number of instructions simulated (Count)
simOps                                          77950                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1140216                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1155265                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        16368                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        16368                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst         4662                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3431637                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.111417                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4456.671429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          772                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          770                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            2                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          513                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.666234                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.998054                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         7766                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         6996                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         7766                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          770                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         7766                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         7153                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          772                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     9.265544                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.248916                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.751084                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002439                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997561                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          511                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024            1                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          511                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.998047                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.001953                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        56060                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        56060                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1084078                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       771228                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1542                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          772                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          769                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst            1                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst            1                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          769                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst            1                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst            1                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1646                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1219                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074402                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100464                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1392                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24672                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24672                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      1173120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1900050                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   575.477141                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      3054016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1173120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1900050                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   575.477141                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3054016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             9915                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.612457                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.620171                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            6142                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           6145                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.619768                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.486091                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3772     38.04%     38.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6142     61.95%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            3                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4099     66.70%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2046     33.30%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         6145                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.619768                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        22204                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         6143                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6145                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         6145                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2046                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         7852                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2047                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles           16                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         7855                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2909                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            9                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2047                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2047                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            2      0.07%      0.07% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            2      0.07%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2898     99.83%     99.97% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            1      0.03%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2903                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            2      0.07%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2898     99.93%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2900                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.979631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.760358                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.03%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            3      0.04%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.01%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         7849     99.92%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     50.00%     83.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            1     16.67%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.12%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          852     99.88%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          853                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1      0.05%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2046     99.95%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2047                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2047    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2047                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1      0.05%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2046     99.95%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2047                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2047                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2047                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2048                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2047                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2047                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     50.00%     83.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            1     16.67%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1      0.05%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2046     99.95%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2047                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            1                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          917                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1131                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          432                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          245                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          230                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          910                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.numCommittedDist::samples         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.620171                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.488063                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3772     38.04%     38.04% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6141     61.94%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2            0      0.00%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.01%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.612457                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.620171                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5051                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4864                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2046                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         6144                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7164                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6144                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2048                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2046                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.619667                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6144                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6141                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4093                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2051                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2046                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2048                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            3                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          4865                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4094                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         6911                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          427                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.548664                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.782145                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5050     50.93%     50.93% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1027     10.36%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2            0      0.00%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1024     10.33%     71.62% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2814     28.38%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15355                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.548664                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2903                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.292789                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3003                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           7855                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           856                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2047                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.525525                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.270046                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6142     78.19%     78.19% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1710     21.77%     99.96% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8            3      0.04%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         6143                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2046                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts            0                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            0                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            0                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6145                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6145                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4094                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8188                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.619768                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.500000                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles         6842                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3073                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts         6144                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        10234                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10235                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         4094                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            16064                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           12293                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      3301695                       # Number of ticks simulated (Tick)
finalTick                                    50373576                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 49094476                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     236168                       # Number of bytes of host memory used (Byte)
simInsts                                        83089                       # Number of instructions simulated (Count)
simOps                                          84111                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1233942                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1249012                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        16368                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        16368                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst         4662                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3431637                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.111417                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4456.671429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          772                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          770                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            2                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          513                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.666234                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.998054                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         7766                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         6996                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         7766                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          770                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         7766                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         7153                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          772                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     9.265544                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.248916                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.751084                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002439                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997561                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          511                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024            1                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          511                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.998047                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.001953                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        56060                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        56060                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1084078                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       771228                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1542                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          772                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          769                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst            1                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst            1                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          769                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst            1                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst            1                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1646                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1219                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074402                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100464                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1392                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24672                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24672                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      1267680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1267680                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   383.948245                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1267680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1267680                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   383.948245                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             9915                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.612457                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.620171                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            6142                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           6145                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.619768                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.486091                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3772     38.04%     38.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6142     61.95%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            3                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4099     66.70%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2046     33.30%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         6145                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.619768                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        22204                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         6143                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6145                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         6145                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2046                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         7852                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2047                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles           16                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         7855                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2909                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            9                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2047                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2047                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            2      0.07%      0.07% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            2      0.07%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2898     99.83%     99.97% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            1      0.03%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2903                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            2      0.07%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2898     99.93%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2900                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.979631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.760358                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.03%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            3      0.04%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.01%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         7849     99.92%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     50.00%     83.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            1     16.67%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.12%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          852     99.88%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          853                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1      0.05%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2046     99.95%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2047                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2047    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2047                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1      0.05%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2046     99.95%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2047                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2047                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2047                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2048                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2047                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2047                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     50.00%     83.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            1     16.67%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1      0.05%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2046     99.95%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2047                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            1                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          917                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1131                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          432                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          245                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          230                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          910                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.numCommittedDist::samples         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.620171                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.488063                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3772     38.04%     38.04% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6141     61.94%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2            0      0.00%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.01%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.612457                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.620171                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5051                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4864                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2046                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         6144                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7164                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6144                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2048                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2046                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.619667                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6144                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6141                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4093                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2051                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2046                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2048                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            3                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          4865                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4094                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         6911                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          427                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.548664                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.782145                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5050     50.93%     50.93% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1027     10.36%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2            0      0.00%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1024     10.33%     71.62% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2814     28.38%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15355                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.548664                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2903                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.292789                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3003                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           7855                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           856                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2047                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.525525                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.270046                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6142     78.19%     78.19% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1710     21.77%     99.96% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8            3      0.04%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         6143                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2046                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts            0                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            0                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            0                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6145                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6145                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4094                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8188                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.619768                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.500000                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles         6842                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3073                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts         6144                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        10234                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10235                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         4094                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            16064                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           12293                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000003                       # Number of seconds simulated (Second)
simTicks                                      3301695                       # Number of ticks simulated (Tick)
finalTick                                    53687592                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                 49164680                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     239240                       # Number of bytes of host memory used (Byte)
simInsts                                        89250                       # Number of instructions simulated (Count)
simOps                                          90272                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1327432                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1342520                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2046                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2046                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2046                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2046                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2046                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2046                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          329                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          171                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.333984                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.642578                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          171                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          171                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.333984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        16368                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        16368                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6398                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6398                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          513                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          513                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total       714951                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total       714951                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         6911                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         6911                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.074229                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.074229                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  1393.666667                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  1393.666667                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          772                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          512                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          512                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total         4662                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst         4662                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3431637                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000145                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.111417                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst         4662                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4456.671429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          772                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3426975                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4456.404421                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6398                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          513                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total       714951                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         6911                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.074229                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  1393.666667                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          512                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total         4662                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000145                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total         4662                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          770                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            2                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          513                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.666234                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.998054                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         7766                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         6996                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         7766                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          770                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         7766                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         7153                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          772                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     9.265544                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.248916                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.751084                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002439                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997561                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          511                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024            1                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          511                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.998047                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.001953                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        56060                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        56060                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2314                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1084078                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       771228                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1542                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          772                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          769                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst            1                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          769                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst            1                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          769                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst            1                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst            1                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          769                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1646                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1219                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009766                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074402                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100464                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1392                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          254                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1392                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.084961                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015503                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24672                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24672                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              0                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      1268160                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      1268160                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   384.093625                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy            0                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy            0                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1268160                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      1268160                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   384.093625                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3314016                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles             9915                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.612457                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.620171                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            6142                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           6145                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.619768                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.486091                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         3772     38.04%     38.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6142     61.95%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            3                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total         9915                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4099     66.70%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     66.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2046     33.30%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         6145                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.619768                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        22204                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         6143                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6145                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         6145                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2046                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         7852                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2047                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles           16                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         7855                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2909                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            9                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2047                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2047                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            2      0.07%      0.07% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            2      0.07%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2898     99.83%     99.97% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            1      0.03%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2903                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            2      0.07%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.07% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2898     99.93%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2900                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.979631                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.760358                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            2      0.03%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            3      0.04%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.01%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         7849     99.92%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         7855                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     50.00%     83.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            1     16.67%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.12%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          852     99.88%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          853                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1      0.05%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2046     99.95%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2047                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2047    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2047                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1      0.05%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      0.05% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2046     99.95%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2047                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2047                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2047                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2048                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2047                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2047                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     50.00%     83.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            1     16.67%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1      0.05%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.05% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2046     99.95%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2047                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            1                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          917                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1131                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          432                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          245                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          230                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          910                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.numCommittedDist::samples         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.620171                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.488063                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         3772     38.04%     38.04% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6141     61.94%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2            0      0.00%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.01%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total         9915                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.612457                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.620171                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5051                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4864                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2046                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         6144                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7164                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6144                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2048                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2046                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.619667                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6144                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6141                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4093                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2051                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2046                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2048                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            3                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          4865                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4094                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         6911                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          427                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.548664                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.782145                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5050     50.93%     50.93% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1027     10.36%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2            0      0.00%     61.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1024     10.33%     71.62% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2814     28.38%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total         9915                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15355                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.548664                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2903                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.292789                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3003                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           7855                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals           856                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2047                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.525525                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.270046                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6142     78.19%     78.19% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1710     21.77%     99.96% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8            3      0.04%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         7855                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         6143                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2046                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts            0                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            0                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            0                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6145                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6145                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4094                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8188                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.619768                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.500000                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      3314016                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles         6842                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3073                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts         6144                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        10234                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        10235                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         4094                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            16064                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           12293                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000005                       # Number of seconds simulated (Second)
simTicks                                      4547448                       # Number of ticks simulated (Tick)
finalTick                                    54933345                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.12                       # Real time elapsed on the host (Second)
hostTickRate                                 38587534                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     240264                       # Number of bytes of host memory used (Byte)
simInsts                                        89749                       # Number of instructions simulated (Count)
simOps                                          90859                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   761075                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     770449                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         2265                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         2265                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         2265                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         2265                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandMisses::processor.cores.core.data           19                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.demandMisses::total           19                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.overallMisses::processor.cores.core.data           19                       # number of overall misses (Count)
board.cache_hierarchy.dcache.overallMisses::total           19                       # number of overall misses (Count)
board.cache_hierarchy.dcache.demandMissLatency::processor.cores.core.data      1389609                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.demandMissLatency::total      1389609                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::processor.cores.core.data      1389609                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::total      1389609                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         2284                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         2284                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         2284                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         2284                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandMissRate::processor.cores.core.data     0.008319                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMissRate::total     0.008319                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::processor.cores.core.data     0.008319                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::total     0.008319                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMissLatency::processor.cores.core.data 73137.315789                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMissLatency::total 73137.315789                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::processor.cores.core.data 73137.315789                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::total 73137.315789                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.writebacks::writebacks            1                       # number of writebacks (Count)
board.cache_hierarchy.dcache.writebacks::total            1                       # number of writebacks (Count)
board.cache_hierarchy.dcache.demandMshrHits::processor.cores.core.data            4                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrHits::total            4                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::processor.cores.core.data            4                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::total            4                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrMisses::processor.cores.core.data           15                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMisses::total           15                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::processor.cores.core.data           15                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::total           15                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMissLatency::processor.cores.core.data      1053612                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissLatency::total      1053612                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::processor.cores.core.data      1053612                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::total      1053612                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissRate::processor.cores.core.data     0.006567                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMshrMissRate::total     0.006567                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::processor.cores.core.data     0.006567                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::total     0.006567                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::processor.cores.core.data 70240.800000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::total 70240.800000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::processor.cores.core.data 70240.800000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::total 70240.800000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.replacements            1                       # number of replacements (Count)
board.cache_hierarchy.dcache.LoadLockedReq.hits::processor.cores.core.data            4                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.dcache.LoadLockedReq.hits::total            4                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.dcache.LoadLockedReq.accesses::processor.cores.core.data            4                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.LoadLockedReq.accesses::total            4                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2169                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2169                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.misses::processor.cores.core.data           19                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.misses::total           19                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.missLatency::processor.cores.core.data      1389609                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.missLatency::total      1389609                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2188                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2188                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.missRate::processor.cores.core.data     0.008684                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.missRate::total     0.008684                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::processor.cores.core.data 73137.315789                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::total 73137.315789                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.mshrHits::processor.cores.core.data            4                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrHits::total            4                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::processor.cores.core.data           15                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::total           15                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::processor.cores.core.data      1053612                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::total      1053612                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.006856                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::total     0.006856                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data 70240.800000                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::total 70240.800000                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            8                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            8                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            8                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            8                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data           96                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total           96                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data           96                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total           96                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses           15                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            4                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy            0                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            4                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            4                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            4                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse   330.553313                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs        31714                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs          344                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs    92.191860                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          158                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data   172.553313                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.308594                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337018                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.645612                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          158                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          185                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           15                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          170                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.308594                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.361328                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        18383                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        18383                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         7073                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         7073                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         7073                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         7073                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          556                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          556                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          556                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          556                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst      2239092                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total      2239092                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst      2239092                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total      2239092                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         7629                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         7629                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         7629                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         7629                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.072880                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.072880                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.072880                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.072880                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst  4027.143885                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total  4027.143885                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst  4027.143885                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total  4027.143885                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          875                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          875                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          532                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          532                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          532                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          532                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst           24                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total           24                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst           24                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          857                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          881                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       871794                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       871794                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       871794                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      7015973                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      7887767                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.003146                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.003146                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.003146                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.115480                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst 36324.750000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total 36324.750000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst 36324.750000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  8186.666278                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  8953.197503                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          875                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          857                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          857                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      7015973                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      7015973                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  8186.666278                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  8186.666278                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         7073                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         7073                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          556                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          556                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst      2239092                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total      2239092                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         7629                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         7629                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.072880                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.072880                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst  4027.143885                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total  4027.143885                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          532                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          532                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst           24                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total           24                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       871794                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       871794                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.003146                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.003146                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst 36324.750000                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total 36324.750000                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses           24                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          881                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            2                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          542                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.615210                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.957597                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR           24                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate           24                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         8627                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         7746                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         8627                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          881                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         8627                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        12670                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs         1387                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     9.134823                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     5.905174                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   506.094826                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.011534                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.988466                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          488                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           24                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          488                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           24                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.953125                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.046875                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        61907                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        61907                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          890                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackDirty            1                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          875                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          896                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2631                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.dcache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port           31                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2662                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port       112000                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.dcache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         1024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total       113024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          896                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean     0.002232                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev     0.047219                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          894     99.78%     99.78% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            2      0.22%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          896                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1237236                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       874125                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer1.occupancy        14985                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1772                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          878                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst           16                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          806                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          822                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst           16                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          806                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          822                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.inst            8                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.data           15                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::cache_hierarchy.icache.prefetcher           51                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::total           74                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.inst            8                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.data           15                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::cache_hierarchy.icache.prefetcher           51                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::total           74                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.inst       793206                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.data      1042623                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::cache_hierarchy.icache.prefetcher      3364954                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::total      5200783                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.inst       793206                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.data      1042623                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::cache_hierarchy.icache.prefetcher      3364954                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::total      5200783                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst           24                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.data           15                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          857                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          896                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst           24                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.data           15                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          857                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          896                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.inst     0.333333                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.data            1                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::cache_hierarchy.icache.prefetcher     0.059510                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::total     0.082589                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.inst     0.333333                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.data            1                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::cache_hierarchy.icache.prefetcher     0.059510                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::total     0.082589                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.inst 99150.750000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.data 69508.200000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::cache_hierarchy.icache.prefetcher 65979.490196                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::total 70280.851351                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.inst 99150.750000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.data 69508.200000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::cache_hierarchy.icache.prefetcher 65979.490196                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::total 70280.851351                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.inst            8                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.data           15                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::cache_hierarchy.icache.prefetcher           51                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::total           74                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.inst            8                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.data           15                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.icache.prefetcher           51                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::total           74                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.inst       790542                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.data      1037628                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::cache_hierarchy.icache.prefetcher      3350968                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::total      5179138                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.inst       790542                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.data      1037628                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3350968                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::total      5179138                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.inst     0.333333                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.data            1                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::cache_hierarchy.icache.prefetcher     0.059510                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::total     0.082589                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.inst     0.333333                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.data            1                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.icache.prefetcher     0.059510                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::total     0.082589                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 98817.750000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.data 69175.200000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 65705.254902                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::total 69988.351351                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 98817.750000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.data 69175.200000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 65705.254902                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::total 69988.351351                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst           16                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          806                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          822                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.inst            8                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.data           15                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::cache_hierarchy.icache.prefetcher           51                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::total           74                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.inst       793206                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.data      1042623                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::cache_hierarchy.icache.prefetcher      3364954                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::total      5200783                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst           24                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.data           15                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          857                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          896                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.inst     0.333333                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.data            1                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::cache_hierarchy.icache.prefetcher     0.059510                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::total     0.082589                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 99150.750000                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 69508.200000                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::cache_hierarchy.icache.prefetcher 65979.490196                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::total 70280.851351                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.inst            8                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data           15                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::cache_hierarchy.icache.prefetcher           51                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::total           74                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst       790542                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data      1037628                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3350968                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::total      5179138                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.333333                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data            1                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::cache_hierarchy.icache.prefetcher     0.059510                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::total     0.082589                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 98817.750000                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 69175.200000                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 65705.254902                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::total 69988.351351                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          875                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          875                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          875                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          875                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::writebacks            1                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::total            1                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::writebacks            1                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::total            1                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses           74                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued           12                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy            0                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache           12                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate           12                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified           12                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse  1655.840522                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs        16677                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs         1711                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs     9.746932                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          102                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst    95.338827                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data   161.665132                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher  1225.836563                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006226                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005819                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009867                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074819                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.101064                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1434                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          277                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0           42                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1392                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::0           23                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          254                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.087524                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.016907                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        28417                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        28417                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp           65                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq           73                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port          138                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::total          138                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total          138                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port         4160                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::total         4160                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total         4160                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples           73                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0           73    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total           73                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy        24322                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy        53616                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests           73                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         8.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples        15.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples        50.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000514530                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState            133                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                     73                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                   73                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.17                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6               73                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                 14                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                 14                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                 14                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                 12                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  8                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  5                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys               4672                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1027389428.09241569                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 31217751                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                427640.42                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          512                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data          960                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher         3200                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 112590622.256703093648                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 211107416.731318295002                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 703691389.104394316673                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            8                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data           15                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher           50                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       573030                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data       630311                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher      2414531                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     71628.75                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     42020.73                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     48290.62                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          512                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data          960                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher         2880                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total         4352                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          512                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher         2880                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total         3392                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            8                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data           15                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher           45                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total           68                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst    112590622                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data    211107417                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher    633322250                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total    957020289                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst    112590622                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher    633322250                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total    745912872                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst    112590622                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data    211107417                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher    633322250                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total    957020289                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts              73                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           13                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12           24                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            9                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat            2249122                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat           365000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat       3617872                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           30809.89                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      49559.89                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits             60                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        82.19                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples            9                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   405.333333                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   284.407082                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   340.164666                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            1     11.11%     11.11% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255            2     22.22%     33.33% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            3     33.33%     66.67% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            1     11.11%     77.78% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1     11.11%     88.89% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151            1     11.11%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total            9                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead             4672                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        1027.389428                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               8.03                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           8.03                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          82.19                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy        49980                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy        18975                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy       228480                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       478230                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      1343520                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      2733825                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   601.177847                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      3456207                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT       843562                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy        42840                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy        15180                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       271320                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       538080                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1293120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      2775180                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   610.271959                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3351978                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT       947791                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            13656                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               2.053843                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.486892                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded            7159                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           47                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued           7033                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined          477                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined          292                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           29                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples        11658                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.603277                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.605525                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         5056     43.37%     43.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         6360     54.55%     97.92% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2          132      1.13%     99.06% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3           60      0.51%     99.57% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4           32      0.27%     99.85% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            9      0.08%     99.92% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            8      0.07%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        11658                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            3     75.00%     75.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            1     25.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            8      0.11%      0.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         4678     66.52%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     66.63% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         2211     31.44%     98.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite          136      1.93%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total         7033                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.515012                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   4                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000569                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        25724                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites         7678                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses         6938                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            4                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            6                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses         7027                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            2                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts           54                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled              11                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles            1998                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         2242                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores          168                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads           33                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores           43                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         8658                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2183                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles          817                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         8764                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          3664                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          358                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2182                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode         2122                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit           60                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           74      2.18%      2.18% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           90      2.65%      4.83% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            7      0.21%      5.03% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         3178     93.53%     98.56% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           47      1.38%     99.94% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     99.94% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            2      0.06%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         3398                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           47      1.43%      1.43% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           88      2.67%      4.10% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            7      0.21%      4.31% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         3101     94.23%     98.54% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           46      1.40%     99.94% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     99.94% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            2      0.06%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         3291                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         8764                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.450023                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     3.593728                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           34      0.39%      0.39% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           42      0.48%      0.87% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           47      0.54%      1.40% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15           24      0.27%      1.68% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19           18      0.21%      1.88% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           34      0.39%      2.27% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27           28      0.32%      2.59% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            7      0.08%      2.67% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         8530     97.33%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         8764                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           60     22.56%     22.56% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           51     19.17%     41.73% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            3      1.13%     42.86% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond          142     53.38%     96.24% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           10      3.76%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          266                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           87      6.26%      6.26% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          120      8.64%     14.90% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            7      0.50%     15.41% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond         1122     80.78%     96.18% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           51      3.67%     99.86% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.86% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            2      0.14%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         1389                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           23      1.05%      1.05% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           43      1.97%      3.02% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            3      0.14%      3.16% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2105     96.47%     99.63% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            8      0.37%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2182                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           21      0.97%      0.97% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           19      0.88%      1.85% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            3      0.14%      1.98% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2120     97.79%     99.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            5      0.23%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2168                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           20      0.94%      0.94% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           19      0.89%      1.84% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            3      0.14%      1.98% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2077     97.79%     99.76% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            5      0.24%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2124                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget           11      4.14%      4.14% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB          195     73.31%     77.44% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           60     22.56%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          266                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2168     99.36%     99.36% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            2      0.09%     99.45% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect           12      0.55%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2182                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           43      2.03%      2.03% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%      2.03% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond         2071     97.60%     99.62% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            8      0.38%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total         2122                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted          142                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken          131                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2182                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2182                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          266                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2124                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC         2052                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          266                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2158                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            3                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            3                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2171                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted           11                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          266                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           60     22.56%     22.56% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           51     19.17%     41.73% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            3      1.13%     42.86% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond          142     53.38%     96.24% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           10      3.76%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          266                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           21      0.99%      0.99% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           19      0.89%      1.88% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            3      0.14%      2.02% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2076     97.74%     99.76% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            5      0.24%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2124                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           11      0.51%      0.51% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           43      1.99%      2.50% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            3      0.14%      2.64% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2093     96.99%     99.63% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            8      0.37%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2158                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2104                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2104                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2091                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            5                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes          151                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops          149                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes          129                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           92                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           20                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            3                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            3                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            3                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            6                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          919                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect         1143                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong           25                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          433                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          245                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          230                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            9                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0          912                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            7                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts          479                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls           18                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts           60                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        11556                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.582987                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.607569                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         5153     44.59%     44.59% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6258     54.15%     98.75% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2           63      0.55%     99.29% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           29      0.25%     99.54% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           25      0.22%     99.76% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           14      0.12%     99.88% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            8      0.07%     99.95% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%     99.95% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            6      0.05%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        11556                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            8                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            8      0.12%      0.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4469     66.34%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2156     32.00%     98.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          104      1.54%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6737                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            6                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6649                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6737                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6648                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6736                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     2.053843                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.486892                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2260                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4649                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2156                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts           96                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            8      0.12%      0.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4469     66.34%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2156     32.00%     98.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          104      1.54%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6737                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2168                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2144                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           24                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2120                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           48                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           21                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         5778                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          443                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         5346                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles           30                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles           61                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved          108                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           52                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection         2072                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts         7607                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         7363                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts         6979                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            3                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2227                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         2205                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts          128                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.511057                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6240                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6237                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads         4888                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         2580                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         2333                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2195                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites           16                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches          103                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          5847                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4366                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         7629                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          450                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        11658                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.511237                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.794710                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         6083     52.18%     52.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1122      9.62%     61.80% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          186      1.60%     63.40% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1130      9.69%     73.09% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         3043     26.10%     99.19% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           37      0.32%     99.51% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           30      0.26%     99.77% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           19      0.16%     99.93% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            8      0.07%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        11658                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        17335                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.269405                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         3398                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.248828                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         3628                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           8764                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1099                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2183                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         8764                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     2.676974                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.465122                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6560     74.85%     74.85% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         2098     23.94%     98.79% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8          106      1.21%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         8764                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles           61                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          152                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            2                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts         7209                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           69                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         2242                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts          168                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           47                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            1                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            1                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect           15                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect           49                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts           64                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit         6963                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount         6938                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         4424                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst         8695                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.508055                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.508798                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            1                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads           88                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            1                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores           64                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2156                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.853432                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    18.815624                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2148     99.63%     99.63% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39            1      0.05%     99.68% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149            2      0.09%     99.77% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159            1      0.05%     99.81% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179            1      0.05%     99.86% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189            1      0.05%     99.91% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229            1      0.05%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows            1      0.05%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          769                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2156                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      4559769                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles           61                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         7675                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          157                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles          275                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         3477                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles           13                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts         7380                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.IQFullEvents            4                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.renamedOperands        11304                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        11762                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups         5303                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups            2                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10750                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps          565                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing           29                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            8                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts          162                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            18766                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           14527                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6648                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6736                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            1                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
