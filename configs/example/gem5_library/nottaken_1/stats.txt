
---------- Begin Simulation Statistics ----------
simSeconds                                   0.000014                       # Number of seconds simulated (Second)
simTicks                                     14353299                       # Number of ticks simulated (Tick)
finalTick                                    31106196                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.10                       # Real time elapsed on the host (Second)
hostTickRate                                138263369                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     196356                       # Number of bytes of host memory used (Byte)
simInsts                                        41227                       # Number of instructions simulated (Count)
simOps                                          42474                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   396621                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     408595                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7643                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7643                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7643                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7643                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7643                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7643                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7643                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7643                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         5595                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         5595                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         5595                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         5595                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          370                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          216                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.421875                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.722656                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          216                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          216                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.421875                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        61144                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        61144                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         6988                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         6988                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         6988                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         6988                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst         1356                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total         1356                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst         1356                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total         1356                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     28019619                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     28019619                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     28019619                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     28019619                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         8344                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         8344                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         8344                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         8344                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.162512                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.162512                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.162512                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.162512                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 20663.435841                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 20663.435841                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 20663.435841                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 20663.435841                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst         1356                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total         1356                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst         1356                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total         1356                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          774                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          774                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     55353820                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     55353820                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.092761                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 71516.563307                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 71516.563307                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          770                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          774                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          774                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     55353820                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     55353820                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 71516.563307                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 71516.563307                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         6988                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         6988                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst         1356                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total         1356                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     28019619                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     28019619                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         8344                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         8344                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.162512                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.162512                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 20663.435841                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 20663.435841                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst         1356                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total         1356                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          774                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused          173                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful           24                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.031008                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        11057                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        10283                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        11057                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          774                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        11057                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse   511.948843                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        14288                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          770                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    18.555844                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    28.973364                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   482.975479                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.056589                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.943311                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total     0.999900                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        67524                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        67524                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          772                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          770                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          774                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2316                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2316                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2316                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port        98688                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total        98688                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total        98688                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          774                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          774    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          774                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       802434                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       660926                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1544                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          763                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       763.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       774.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000003049284                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           47                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           48                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1942                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           716                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    774                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   763                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  774                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 763                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.37                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.55                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              774                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             763                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                172                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                194                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                266                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                137                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                46                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                80                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                53                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                55                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                83                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                78                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                54                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                59                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                56                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                53                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                49                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.250000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.238330                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     0.635811                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::15            1      2.08%      2.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           38     79.17%     81.25% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            5     10.42%     91.67% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            4      8.33%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           47                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           47    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           47                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49536                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           48832                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3451192649.16030836                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3402144691.61410236                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 14353299                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9338.52                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49152                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        48896                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3424439217.771468639374                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3406603596.845575332642                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          774                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          763                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     37029685                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    383017758                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     47841.97                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    501989.20                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49344                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        49344                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49344                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        49344                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          771                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          771                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3437815933                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3437815933                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3437815933                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3437815933                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3437815933                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3437815933                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             768                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            764                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0           96                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           32                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          130                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          201                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           37                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3           26                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4           27                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5           13                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           53                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7           21                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8           40                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           25                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12           32                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           65                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           18                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           22629685                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3840000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      37029685                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           29465.74                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      48215.74                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            713                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           641                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        92.84                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        83.90                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          181                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   539.933702                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   358.348781                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   401.115439                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127           26     14.36%     14.36% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           37     20.44%     34.81% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383           24     13.26%     48.07% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           11      6.08%     54.14% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            7      3.87%     58.01% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            6      3.31%     61.33% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            2      1.10%     62.43% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            3      1.66%     64.09% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           65     35.91%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          181                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            49152                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         48896                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3424.439218                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3406.603597                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              53.37                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.75                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         26.61                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          88.38                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       978180                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       504735                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5569200                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      2714400                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      6756780                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       112800                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     17250735                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1201.865508                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     14521616                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       492660                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       235290                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       257040                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy      1492920                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      6838290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy        89280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     10020120                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   698.105711                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE       204323                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     14764770                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            43103                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.506304                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.285201                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           23872                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          20119                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        11575                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         9157                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        22325                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.901187                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.247610                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        12143     54.39%     54.39% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         4636     20.77%     75.16% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         2786     12.48%     87.64% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         1490      6.67%     94.31% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          969      4.34%     98.65% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          241      1.08%     99.73% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           60      0.27%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        22325                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         9252     45.99%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     45.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         7931     39.42%     85.41% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2936     14.59%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        20119                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.466766                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        62561                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        36645                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        17684                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        20119                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         1819                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             180                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           20778                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         8294                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         3930                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         1792                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          262                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         8957                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         1091                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        12277                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        11134                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          4316                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           11                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict         1090                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            1                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.14%      0.14% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            1      0.02%      0.16% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.16% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         4298     99.84%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         4305                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.14%      0.14% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            1      0.02%      0.16% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.16% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         4298     99.84%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         4305                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        11134                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.978444                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.720965                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            5      0.04%      0.04% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.04% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            4      0.04%      0.08% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            1      0.01%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            1      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        11123     99.90%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        11134                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            3     27.27%     27.27% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            4     36.36%     63.64% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     63.64% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            4     36.36%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           11                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            3      0.13%      0.13% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            4      0.18%      0.31% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.31% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond         2254     99.69%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         2261                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            1                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            8     72.73%     72.73% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            3     27.27%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           11                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            1    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            1                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            1                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            4                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            4                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            1                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            1                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           11                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           11                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            1                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            1                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           11                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            3     27.27%     27.27% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            4     36.36%     63.64% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     63.64% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            4     36.36%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           11                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            1                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            8                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            7                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            7                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            4                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        11582                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        20317                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.605060                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.223478                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        13374     65.83%     65.83% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         4969     24.46%     90.28% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          641      3.15%     93.44% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          443      2.18%     95.62% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          318      1.57%     97.18% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5          229      1.13%     98.31% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          142      0.70%     99.01% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7          164      0.81%     99.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           37      0.18%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        20317                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           37                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.506304                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.285201                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        12648                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          917                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         6478                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         1192                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         1090                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        26859                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts            1                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        18298                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2535                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7422                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2389                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.424518                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         7593                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         8577                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        18153                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         9929                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9811                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            5                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          9207                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         2182                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         8344                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          865                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        22325                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.231848                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.649224                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        13118     58.76%     58.76% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         1593      7.14%     65.89% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         1508      6.75%     72.65% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         1532      6.86%     79.51% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         4574     20.49%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        22325                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        27501                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.638030                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         4305                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.099877                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        12027                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          11134                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          2651                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          1091                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        11134                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.915304                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.299835                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         3216     28.88%     28.88% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         5741     51.56%     80.45% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         2177     19.55%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        11134                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         1090                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          917                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        23879                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts          124                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         8294                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         3930                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents         1229                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        17711                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        17684                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        11930                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        16902                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.410273                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.705834                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1827                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         4198                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses          336                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation         1229                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         1882                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.124023                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.329649                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     31106196                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         1090                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        12918                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          917                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         7400                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        26022                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        30587                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        38463                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        26274                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        16241                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            44155                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           49780                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000015                       # Number of seconds simulated (Second)
simTicks                                     14939046                       # Number of ticks simulated (Tick)
finalTick                                    48512106                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.08                       # Real time elapsed on the host (Second)
hostTickRate                                197954000                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     199428                       # Number of bytes of host memory used (Byte)
simInsts                                        54550                       # Number of instructions simulated (Count)
simOps                                          55929                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   722087                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     740288                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         5444                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         5444                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         5444                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         5444                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         5444                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         5444                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         5444                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         5444                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         3396                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         3396                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         3396                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         3396                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          371                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          217                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.423828                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.724609                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          217                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          217                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.423828                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        43552                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        43552                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         3815                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         3815                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         3815                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         3815                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst         1008                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total         1008                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst         1008                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total         1008                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     21401910                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     21401910                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     21401910                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     21401910                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         4823                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         4823                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         4823                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         4823                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.208999                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.208999                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.208999                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.208999                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 21232.053571                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 21232.053571                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 21232.053571                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 21232.053571                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          784                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          784                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst         1007                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total         1007                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst         1007                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total         1007                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          775                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          776                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       427572                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       427572                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       427572                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     58996513                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     59424085                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000207                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000207                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000207                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.160896                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst       427572                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total       427572                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst       427572                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 76124.532903                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 76577.429124                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          784                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          775                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          775                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     58996513                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     58996513                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 76124.532903                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 76124.532903                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         3815                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         3815                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst         1008                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total         1008                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     21401910                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     21401910                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         4823                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         4823                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.208999                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.208999                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 21232.053571                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 21232.053571                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst         1007                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total         1007                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       427572                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       427572                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000207                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000207                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst       427572                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total       427572                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          776                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           56                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            8                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.010309                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.888889                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            1                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            1                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         5173                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         4398                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         5173                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          775                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         5173                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         5657                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          784                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     7.215561                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    13.589295                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   498.410705                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.026542                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.973458                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          508                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1            4                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        39368                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        39368                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          784                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          784                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          776                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2344                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2344                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2344                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       100352                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       100352                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       100352                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          776                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          776    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          776                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       810431                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       666911                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1560                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          777                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       777.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       775.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000002998862                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           48                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           48                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1957                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           723                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    776                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   777                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  776                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 777                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.58                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.02                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              776                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             777                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                160                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                185                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                237                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                186                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                93                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                66                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                57                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                67                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                78                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                73                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                51                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                49                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                49                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.125000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.086678                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     1.084219                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::11            1      2.08%      2.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           42     87.50%     89.58% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            2      4.17%     93.75% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            1      2.08%     95.83% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1      2.08%     97.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::20            1      2.08%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           48    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49664                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           49728                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3324442538.03087568                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3328726613.46648264                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 14949036                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9625.91                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          128                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49920                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        49152                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 8568150.871213596314                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3341578839.773303031921                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3290169934.546021461487                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          775                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          777                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       210741                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     40558915                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    386040869                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst    210741.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     52334.08                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    496835.10                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          256                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49984                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        50240                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          256                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49984                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        50240                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            4                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          781                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          785                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     17136302                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3345862915                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3362999217                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     17136302                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3345862915                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3362999217                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     17136302                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3345862915                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3362999217                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             782                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            768                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          101                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          114                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           36                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          109                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          124                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           26                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           26107156                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3910000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      40769656                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           33385.11                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      52135.11                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            728                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           703                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.09                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.54                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          128                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean          795                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   634.399599                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   361.022520                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            7      5.47%      5.47% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           13     10.16%     15.62% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            6      4.69%     20.31% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            7      5.47%     25.78% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            3      2.34%     28.12% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            2      1.56%     29.69% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1      0.78%     30.47% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            1      0.78%     31.25% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           88     68.75%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          128                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            50048                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         49152                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3350.146991                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3290.169935                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              51.88                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.17                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         25.70                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.32                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       856800                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       440220                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5747700                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      4097700                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      7731480                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        37440                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     20140620                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1348.186491                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE         1061                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     16531320                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       228480                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       121440                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       785400                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       579420                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      6682110                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy       926400                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     10552530                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   706.372415                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      2343269                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     14202862                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            44862                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.649394                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.274018                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           16109                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          14724                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         3812                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         2926                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        18550                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.793747                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.039800                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        10029     54.06%     54.06% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         4055     21.86%     75.92% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3229     17.41%     93.33% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          801      4.32%     97.65% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          377      2.03%     99.68% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           54      0.29%     99.97% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            5      0.03%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        18550                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         7111     48.30%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     48.30% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         5231     35.53%     83.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2382     16.18%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        14724                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.328206                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        47996                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        20394                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        14108                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        14724                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          450                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             230                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           26312                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         5506                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2679                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2384                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          416                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         3663                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          453                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        14434                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         5256                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2676                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            3                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict          452                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            1                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.22%      0.22% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            1      0.04%      0.26% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.26% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2666     99.74%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2673                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.22%      0.22% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            1      0.04%      0.26% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.26% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2666     99.74%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2673                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         5256                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.985540                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.611794                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            2      0.04%      0.04% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.04% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            1      0.02%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.06% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         5253     99.94%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         5256                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            1     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            1     33.33%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            1     33.33%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            3                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            1      0.16%      0.16% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      0.16%      0.32% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.32% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          620     99.68%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          622                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            1                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            2     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            1     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            3                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            1    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            1                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            1                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            1                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            1                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            1                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            1                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            3                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            1                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            1                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            1     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            1     33.33%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            1     33.33%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            3                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            1                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            3                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            2                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            2                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         3819                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        17830                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.689456                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.217949                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        10520     59.00%     59.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         5440     30.51%     89.51% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          481      2.70%     92.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          546      3.06%     95.27% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          407      2.28%     97.55% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5          128      0.72%     98.27% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          203      1.14%     99.41% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           73      0.41%     99.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           32      0.18%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        17830                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           32                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.649394                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.274018                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        12596                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          267                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         4824                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          411                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          452                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        16611                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts            1                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        14272                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2232                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         5112                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2217                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.318131                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6684                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6921                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        14258                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         7372                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         7329                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            5                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          5607                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          906                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         4823                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          397                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        18550                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.903127                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.515619                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        12943     69.77%     69.77% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          998      5.38%     75.15% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          882      4.75%     79.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          917      4.94%     84.85% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2810     15.15%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        18550                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        16753                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.373434                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2673                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.059583                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        12490                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           5256                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1694                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           453                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         5256                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     5.318113                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.397752                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         1347     25.63%     25.63% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         2316     44.06%     69.69% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1593     30.31%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         5256                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          452                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          267                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        16116                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           13                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         5506                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2679                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          477                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        14127                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        14108                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         9105                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        13191                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.314476                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.690243                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1716                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         1410                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses           80                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          477                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          631                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.072510                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.259362                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     17405910                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          452                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        12639                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          267                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         5192                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        16486                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        19301                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        24488                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        16592                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         4955                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            33910                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           32950                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000015                       # Number of seconds simulated (Second)
simTicks                                     14924061                       # Number of ticks simulated (Tick)
finalTick                                    65492109                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.07                       # Real time elapsed on the host (Second)
hostTickRate                                214438648                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     201476                       # Number of bytes of host memory used (Byte)
simInsts                                        67879                       # Number of instructions simulated (Count)
simOps                                          69390                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   974317                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     995926                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         5044                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         5044                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         5044                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         5044                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         5044                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         5044                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         5044                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         5044                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2996                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2996                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2996                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2996                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          371                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          217                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.423828                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.724609                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          217                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          217                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.423828                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        40352                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        40352                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         3307                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         3307                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         3307                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         3307                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          900                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          900                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          900                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          900                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     17543772                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     17543772                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     17543772                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     17543772                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         4207                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         4207                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         4207                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         4207                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.213929                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.213929                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.213929                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.213929                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 19493.080000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 19493.080000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 19493.080000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 19493.080000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          899                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          899                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          899                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          899                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          777                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       551448                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       551448                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       551448                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     58887635                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     59439083                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000238                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000238                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000238                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.184692                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst       551448                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total       551448                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst       551448                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 75886.127577                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 76498.176319                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          785                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     58887635                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     58887635                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 75886.127577                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 75886.127577                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         3307                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         3307                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          900                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          900                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     17543772                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     17543772                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         4207                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         4207                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.213929                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.213929                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 19493.080000                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 19493.080000                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          899                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          899                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       551448                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       551448                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000238                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000238                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst       551448                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total       551448                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          778                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           53                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            1                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.001285                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.500000                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            2                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            2                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         3839                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         3064                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         3839                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          775                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         3839                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         4521                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          785                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     5.759236                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    12.701028                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   499.298972                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.024807                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.975193                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        34441                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        34441                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          784                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          777                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2346                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2346                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2346                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       100416                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       100416                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       100416                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          777    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       807113                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       664008                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1562                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          778                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       778.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       776.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000002539990                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           48                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           49                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1888                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           723                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    777                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   778                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  777                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 778                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.65                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 27.28                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              777                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             778                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                150                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                181                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                221                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                217                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                46                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               109                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                64                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                49                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                50                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                56                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                58                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                53                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                59                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                68                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                59                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           49                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.244898                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.097770                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     2.046650                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::7            1      2.04%      2.04% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::15            1      2.04%      4.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           40     81.63%     85.71% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            3      6.12%     91.84% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            1      2.04%     93.88% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1      2.04%     95.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::21            1      2.04%     97.96% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::25            1      2.04%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           49                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           48    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49728                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           49792                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3332068932.17603445                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3336357309.18012190                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 14925060                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9598.11                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          256                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49856                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        49408                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 17153508.016350243241                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3340645686.184209346771                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3310627047.155596733093                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          776                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          778                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       374642                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     40398299                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    399755691                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst    374642.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     52059.66                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    513824.80                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          320                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49856                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        50176                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49856                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        50176                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            5                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          779                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          784                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     21441885                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3340645686                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3362087571                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     21441885                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3340645686                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3362087571                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     21441885                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3340645686                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3362087571                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             783                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            772                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          102                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          114                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           38                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          114                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           26091691                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3915000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      40772941                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           33322.72                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      52072.72                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            729                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           707                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.10                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.58                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          128                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean          815                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   675.260862                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   341.263608                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            5      3.91%      3.91% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           12      9.38%     13.28% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            5      3.91%     17.19% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            9      7.03%     24.22% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            2      1.56%     25.78% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            3      2.34%     28.12% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1      0.78%     28.91% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            3      2.34%     31.25% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           88     68.75%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          128                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            50112                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         49408                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3357.799194                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3310.627047                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              52.10                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.23                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         25.86                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.35                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       821100                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       432630                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5733420                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      4134240                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      6772170                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        27840                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     19150680                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1283.208371                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE         4386                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     16455617                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       221340                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       117645                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       749700                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       542880                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      5782650                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1649280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     10292775                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   689.676557                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      4239411                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     12217262                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            44817                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.645733                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.274293                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           14778                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          13769                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         2481                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         2062                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        17269                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.797325                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.008380                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         9154     53.01%     53.01% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         3788     21.94%     74.94% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3368     19.50%     94.45% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          624      3.61%     98.06% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          304      1.76%     99.82% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           29      0.17%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            2      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        17269                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         6705     48.70%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     48.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         4815     34.97%     83.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2249     16.33%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        13769                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.307227                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        44805                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        17564                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        13365                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        13769                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          269                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             235                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           27548                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         5021                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2455                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2490                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          462                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         2424                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          295                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        14550                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         3901                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2456                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           12                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            3                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict          292                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            3                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.25%      0.25% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            3      0.12%      0.37% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.37% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2435     99.63%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2444                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.25%      0.25% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            3      0.12%      0.37% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.37% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2435     99.63%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2444                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         3901                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.934376                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     1.243568                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            5      0.13%      0.13% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.13% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            4      0.10%      0.23% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.05%      0.28% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.28% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.28% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            1      0.03%      0.31% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         3889     99.69%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         3901                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            4     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            4     33.33%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            4     33.33%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           12                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            4      1.00%      1.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            6      1.49%      2.49% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      2.49% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          392     97.51%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          402                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            3    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            3                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            8     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            4     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           12                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            3    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            3                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            3    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            3                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            4                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            4                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            3                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            3                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           12                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           12                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            3                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            3                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           12                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            4     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            4     33.33%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            4     33.33%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           12                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            3    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            3                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           11                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           10                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           10                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            5                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         2488                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        16812                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.731204                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.235572                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         9478     56.38%     56.38% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         5493     32.67%     89.05% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          430      2.56%     91.61% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          539      3.21%     94.81% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          464      2.76%     97.57% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           95      0.57%     98.14% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          219      1.30%     99.44% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           74      0.44%     99.88% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           20      0.12%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        16812                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           20                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.645733                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.274293                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        11996                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          164                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         4543                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          274                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          292                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            3                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            3                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        15053                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts            1                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        13498                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2156                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         4726                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2157                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.301180                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6453                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6570                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        13498                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         6896                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         6883                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            6                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          5059                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          590                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         4207                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          260                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        17269                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.877468                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.501808                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        12210     70.70%     70.70% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          876      5.07%     75.78% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          812      4.70%     80.48% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          831      4.81%     85.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2540     14.71%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        17269                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        15153                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.338108                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2444                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.054533                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        11915                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           3901                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1571                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           295                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         3901                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     5.626250                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.402406                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          876     22.46%     22.46% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7         1548     39.68%     62.14% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1477     37.86%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         3901                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          292                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          164                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        14785                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           15                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         5021                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2455                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          302                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        13397                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        13365                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         8542                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        12442                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.298213                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.686546                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1730                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads          925                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses           59                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          302                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          407                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.058350                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.234432                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     16980003                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          292                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        12021                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          164                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         4792                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        14993                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        17523                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        22325                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        15053                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         3177                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            31573                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           30024                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000015                       # Number of seconds simulated (Second)
simTicks                                     15003648                       # Number of ticks simulated (Tick)
finalTick                                    82745172                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.06                       # Real time elapsed on the host (Second)
hostTickRate                                232725977                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     203524                       # Number of bytes of host memory used (Byte)
simInsts                                        81208                       # Number of instructions simulated (Count)
simOps                                          82851                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1258219                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1283565                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         4784                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         4784                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         4784                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         4784                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         4784                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         4784                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         4784                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         4784                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2736                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2736                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2736                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2736                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          371                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          217                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.423828                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.724609                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          217                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          217                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.423828                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        38272                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        38272                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2873                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2873                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2873                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2873                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          845                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          845                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          845                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          845                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     18255393                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     18255393                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     18255393                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     18255393                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         3718                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         3718                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         3718                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         3718                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.227273                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.227273                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.227273                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.227273                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 21604.015385                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 21604.015385                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 21604.015385                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 21604.015385                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          844                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          844                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          844                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          844                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          775                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          776                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       554445                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       554445                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       554445                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     58913303                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     59467748                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000269                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000269                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000269                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.208714                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 76017.165161                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 76633.695876                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          785                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          775                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          775                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     58913303                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     58913303                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 76017.165161                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 76017.165161                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2873                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2873                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          845                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          845                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     18255393                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     18255393                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         3718                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         3718                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.227273                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.227273                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 21604.015385                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 21604.015385                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          844                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          844                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       554445                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       554445                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000269                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000269                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst       554445                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total       554445                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          777                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           52                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            2                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.002574                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.666667                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            2                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            2                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2849                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2075                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2849                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          774                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2849                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         4072                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          785                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     5.187261                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    12.681840                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   499.318160                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.024769                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.975231                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        30529                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        30529                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          776                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2346                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2346                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2346                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          776                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          776    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          776                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       797484                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       666955                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1561                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          778                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       778.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       775.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000003265908                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           49                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           49                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1956                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           735                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    776                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   778                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  776                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 778                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.67                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 27.56                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              776                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             778                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                168                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                188                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                202                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                210                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                45                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                46                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                72                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                56                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                93                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                62                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                65                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                64                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                49                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           49                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.102041                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    15.821804                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     2.417341                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::4            1      2.04%      2.04% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::12            1      2.04%      4.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::14            1      2.04%      6.12% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           38     77.55%     83.67% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            3      6.12%     89.80% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            2      4.08%     93.88% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1      2.04%     95.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::20            1      2.04%     97.96% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::25            1      2.04%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           49                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           49                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           49    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           49                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49664                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           49792                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3310128310.12831020                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3318659568.65956879                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 15001983                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9653.79                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          256                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49792                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        50176                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 17062517.062517061830                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3318659568.659568786621                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3344253344.253344535828                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          775                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          778                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       377639                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     40796994                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    412415899                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst    377639.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     52641.28                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    530097.56                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          320                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        50048                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        50368                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        50048                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        50368                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            5                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          782                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          787                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     21328146                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3335722086                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3357050232                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     21328146                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3335722086                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3357050232                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     21328146                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3335722086                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3357050232                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             782                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            784                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          101                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          123                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           38                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          117                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           26512133                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3910000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      41174633                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           33902.98                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      52652.98                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            728                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           715                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.09                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.20                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          129                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   797.767442                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   645.845458                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   355.801879                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            6      4.65%      4.65% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           14     10.85%     15.50% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            7      5.43%     20.93% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            6      4.65%     25.58% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            3      2.33%     27.91% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            2      1.55%     29.46% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1      0.78%     30.23% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            2      1.55%     31.78% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           88     68.22%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          129                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            50048                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         50176                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3335.722086                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3344.253344                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              52.19                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.06                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         26.13                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.15                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       842520                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       451605                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5719140                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      4217760                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      6804090                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        31680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     19296075                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1286.092222                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     16733063                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       228480                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       113850                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       749700                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       542880                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      6206160                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1374240                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     10444590                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   696.136700                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3522708                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     13145633                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            45056                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.665175                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.272838                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           13703                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          13141                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         1406                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined         1130                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        16187                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.811824                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.985525                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         8289     51.21%     51.21% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         3715     22.95%     74.16% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3433     21.21%     95.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          451      2.79%     98.15% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          288      1.78%     99.93% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           11      0.07%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        16187                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            1    100.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         6486     49.36%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     49.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         4494     34.20%     83.56% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2161     16.44%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        13141                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.291659                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   1                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000076                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        42468                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        15295                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        12923                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        13142                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          164                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             220                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           28869                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         4615                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2284                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2413                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          484                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         1461                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          177                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        14549                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2883                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2274                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            8                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict          176                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            1                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.26%      0.26% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            1      0.04%      0.31% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.31% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2259     99.69%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2266                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.26%      0.26% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            1      0.04%      0.31% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.31% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2259     99.69%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2266                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2883                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.951439                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     1.028599                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            2      0.07%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            3      0.10%      0.17% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            1      0.03%      0.21% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.21% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.21% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            2      0.07%      0.28% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2875     99.72%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2883                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     25.00%     25.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            3     37.50%     62.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            3     37.50%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            8                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            2      0.91%      0.91% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            3      1.36%      2.27% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      2.27% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          215     97.73%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          220                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            1                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            6     75.00%     75.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     25.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            8                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            1    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            1                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            1                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            3                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            3                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            1                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            1                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            8                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            8                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            1                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            1                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            8                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     25.00%     25.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            3     37.50%     62.50% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.50% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            3     37.50%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            8                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            1                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            6                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            5                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            5                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         1413                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        15910                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.772659                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.244782                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         8506     53.46%     53.46% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         5601     35.20%     88.67% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          394      2.48%     91.14% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          518      3.26%     94.40% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          502      3.16%     97.55% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           72      0.45%     98.01% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          250      1.57%     99.58% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           54      0.34%     99.92% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           13      0.08%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        15910                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           13                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.665175                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.272838                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        11408                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          100                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         4330                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          173                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          176                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        13840                       # Number of instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        12975                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2117                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         4442                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2105                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.287975                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6339                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6420                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        12964                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         6572                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         6547                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            5                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          4619                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          354                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         3718                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          168                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        16187                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.856057                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.490789                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        11568     71.46%     71.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          801      4.95%     76.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          729      4.50%     80.92% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          758      4.68%     85.60% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2331     14.40%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        16187                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        13857                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.307551                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2266                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.050293                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        11391                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2883                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1470                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           177                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2883                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     6.061048                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.360858                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          531     18.42%     18.42% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7          930     32.26%     50.68% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1422     49.32%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2883                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          176                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          100                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        13710                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         4615                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2284                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          179                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        12933                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        12923                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         8200                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        11986                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.286821                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.684131                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1706                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads          519                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses           26                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          179                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          236                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.048828                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.215535                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     17253063                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          176                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        11415                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          100                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         4496                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        13816                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        16137                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        20631                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        13854                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         1791                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            29603                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           27693                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000015                       # Number of seconds simulated (Second)
simTicks                                     14940378                       # Number of ticks simulated (Tick)
finalTick                                    99753813                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.06                       # Real time elapsed on the host (Second)
hostTickRate                                237143452                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     204548                       # Number of bytes of host memory used (Byte)
simInsts                                        94537                       # Number of instructions simulated (Count)
simOps                                          96312                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1498779                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1526790                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         4699                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         4699                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         4699                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         4699                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         4699                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         4699                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         4699                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         4699                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2651                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2651                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2651                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2651                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          371                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          217                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.423828                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.724609                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          217                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          217                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.423828                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        37592                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        37592                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2729                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2729                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2729                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2729                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          827                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          827                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          827                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          827                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     15470181                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     15470181                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     15470181                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     15470181                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         3556                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         3556                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         3556                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         3556                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.232565                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.232565                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.232565                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.232565                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 18706.385732                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 18706.385732                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 18706.385732                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 18706.385732                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          786                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          786                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          826                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          826                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          826                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          826                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          777                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          778                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       556110                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       556110                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       556110                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     59259969                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     59816079                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000281                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000281                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000281                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.218785                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst       556110                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total       556110                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst       556110                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 76267.656371                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 76884.420308                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          786                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          777                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          777                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     59259969                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     59259969                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 76267.656371                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 76267.656371                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2729                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2729                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          827                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          827                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     15470181                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     15470181                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         3556                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         3556                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.232565                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.232565                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 18706.385732                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 18706.385732                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          826                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          826                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       556110                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       556110                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000281                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000281                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst       556110                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total       556110                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          779                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           54                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            1                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.001284                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.500000                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            2                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            2                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         2425                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         1649                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         2425                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          776                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         2425                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         3898                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          786                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     4.959288                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    12.710626                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   499.289374                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.024825                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.975175                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        29234                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        29234                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          786                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          786                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          778                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2350                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2350                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2350                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       100608                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       100608                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       100608                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          778                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          778    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          778                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       794168                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       668502                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1564                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          779                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       779.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       777.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000003123076                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           49                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           49                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1907                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           735                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    778                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   779                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  778                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 779                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.68                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.38                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              778                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             779                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                155                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                178                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                214                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                222                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               107                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                54                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                61                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                55                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                78                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                71                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                51                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           49                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.142857                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    15.814973                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     2.993047                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::4-5            1      2.04%      2.04% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::12-13            1      2.04%      4.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16-17           44     89.80%     93.88% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18-19            2      4.08%     97.96% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::32-33            1      2.04%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           49                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           49                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           49    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           49                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49792                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           49856                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3332713536.43127394                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3336997229.92283058                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 14938713                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9594.55                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          256                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49920                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        50176                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 17134773.966227628291                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3341280923.414387702942                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3358415697.380615234375                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          777                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          779                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       379304                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     40785356                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    401876359                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst    379304.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     52490.81                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    515887.50                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          320                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        50112                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        50432                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        50112                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        50432                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            5                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          783                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          788                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     21418467                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3354132004                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3375550471                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     21418467                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3354132004                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3375550471                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     21418467                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3354132004                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3375550471                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             784                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            784                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          103                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          118                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           48                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          111                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          127                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           22                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           26464660                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3920000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      41164660                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           33755.94                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      52505.94                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            731                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           712                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.24                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        90.82                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          125                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   805.376000                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   652.469753                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   346.293593                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            8      6.40%      6.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           10      8.00%     14.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            5      4.00%     18.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            5      4.00%     22.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            5      4.00%     26.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            2      1.60%     28.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            5      4.00%     32.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            1      0.80%     32.80% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           84     67.20%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          125                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            50176                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         50176                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3358.415697                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3358.415697                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              52.48                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.24                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         26.24                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.03                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       835380                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       440220                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5726280                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      4123800                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      6769320                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        36960                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     19161240                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1282.513736                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     16488641                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       228480                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       106260                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       763980                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       553320                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      4506420                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1942560                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      9330300                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   624.502272                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      5003635                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     11485006                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            44866                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.649719                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.273994                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           13327                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          12893                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         1030                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined          855                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        16281                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.791905                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.975718                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         8507     52.25%     52.25% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         3643     22.38%     74.63% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3430     21.07%     95.69% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          425      2.61%     98.30% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          267      1.64%     99.94% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            8      0.05%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            7                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        16281                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         6389     49.55%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         4378     33.96%     83.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2126     16.49%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        12893                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.287367                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        42065                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        14490                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        12737                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        12893                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          102                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             233                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           28585                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         4482                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2213                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2432                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          551                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         1047                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          126                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        15108                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         2451                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2236                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           11                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict          125                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            1                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.27%      0.27% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            1      0.04%      0.31% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.31% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2218     99.69%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2225                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.27%      0.27% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            1      0.04%      0.31% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.31% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2218     99.69%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2225                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         2451                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.911873                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     1.429280                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            4      0.16%      0.16% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.16% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            4      0.16%      0.33% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            1      0.04%      0.37% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.37% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.37% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            2      0.08%      0.45% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         2440     99.55%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         2451                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            3     27.27%     27.27% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            4     36.36%     63.64% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     63.64% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            4     36.36%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           11                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            3      1.65%      1.65% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            4      2.20%      3.85% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      3.85% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          175     96.15%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          182                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            1                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            8     72.73%     72.73% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            3     27.27%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           11                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            1    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            1                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            1                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            4                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            4                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            1                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            1                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           11                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           11                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            1                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            1                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           11                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            3     27.27%     27.27% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            4     36.36%     63.64% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     63.64% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            4     36.36%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           11                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            1                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            8                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            7                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            7                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            4                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         1037                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        16094                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.763825                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.232680                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         8675     53.90%     53.90% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         5629     34.98%     88.88% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          366      2.27%     91.15% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          509      3.16%     94.31% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          528      3.28%     97.60% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           77      0.48%     98.07% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          268      1.67%     99.74% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           36      0.22%     99.96% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            6      0.04%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        16094                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            6                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.649719                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.273994                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        11685                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles           61                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         4314                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles           96                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          125                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        13479                       # Number of instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        12789                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2102                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         4349                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2088                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.285049                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6294                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6354                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        12776                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         6446                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         6437                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            5                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          4504                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          252                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         3556                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          113                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        16281                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.829924                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.473644                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        11777     72.34%     72.34% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          757      4.65%     76.99% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          745      4.58%     81.56% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          743      4.56%     86.12% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2259     13.88%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        16281                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        13512                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.301163                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2225                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.049592                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        11651                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           2451                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1449                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           126                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         2451                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     6.374133                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.269039                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          375     15.30%     15.30% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7          672     27.42%     42.72% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1404     57.28%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         2451                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          125                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles           61                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        13334                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           14                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         4482                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2213                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          127                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        12753                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        12737                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         8046                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        11780                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.283890                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.683022                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1698                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads          386                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses           22                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          127                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          165                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.048340                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.214510                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     17008641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          125                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        11699                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles           61                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         4396                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        13436                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        15698                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        20089                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        13453                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         1352                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            29418                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           26851                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000015                       # Number of seconds simulated (Second)
simTicks                                     14560092                       # Number of ticks simulated (Tick)
finalTick                                   116661555                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.06                       # Real time elapsed on the host (Second)
hostTickRate                                242642444                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     205572                       # Number of bytes of host memory used (Byte)
simInsts                                       107866                       # Number of instructions simulated (Count)
simOps                                         109773                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1795387                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1826964                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         4540                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         4540                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         4540                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         4540                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         4540                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         4540                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         4540                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         4540                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2492                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2492                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2492                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2492                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          371                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          217                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.423828                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.724609                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          217                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          216                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.423828                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        36320                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        36320                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2498                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2498                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2498                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2498                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          782                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          782                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          782                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          782                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     14581737                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     14581737                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     14581737                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     14581737                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         3280                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         3280                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         3280                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         3280                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.238415                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.238415                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.238415                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.238415                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 18646.722506                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 18646.722506                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 18646.722506                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 18646.722506                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          781                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          781                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          781                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          781                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          777                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       542124                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       542124                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       542124                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     58030550                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     58572674                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000305                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000305                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000305                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.236890                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst       542124                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total       542124                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst       542124                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 74781.636598                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 75383.106821                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          785                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     58030550                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     58030550                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 74781.636598                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 74781.636598                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2498                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2498                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          782                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          782                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     14581737                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     14581737                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         3280                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         3280                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.238415                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.238415                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 18646.722506                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 18646.722506                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          781                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          781                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       542124                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       542124                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000305                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000305                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst       542124                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total       542124                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          778                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           52                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            1                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.001285                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.500000                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            2                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            2                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         1838                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         1063                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         1838                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          775                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         1838                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         3753                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          785                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     4.780892                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    12.625399                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   499.374601                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.024659                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.975341                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        27025                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        27025                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          777                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          777    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       787857                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       670043                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1562                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          778                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       778.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       776.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000002562388                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           48                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           48                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1924                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           720                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    777                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   778                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  777                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 778                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.70                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.23                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              777                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             778                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                151                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                190                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                200                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                226                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                95                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                62                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                57                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                55                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                68                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                81                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                62                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                54                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                50                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.250000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.204195                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     1.344809                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13            1      2.08%      2.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           42     87.50%     89.58% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            2      4.17%     93.75% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            1      2.08%     95.83% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1      2.08%     97.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::24            1      2.08%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           48    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49728                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           49792                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3415363034.79401112                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3419758611.41536760                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 14558427                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9362.33                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          256                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49856                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        49152                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 17582306.485426053405                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3424154188.036724090576                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3375802845.201802253723                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          776                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          778                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       365139                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     39508717                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    383851618                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst    365139.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     50913.30                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    493382.54                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          320                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49792                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        50112                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49792                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        50112                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            5                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          778                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          783                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     21977883                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3419758611                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3441736495                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     21977883                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3419758611                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3441736495                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     21977883                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3419758611                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3441736495                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             783                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            768                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          102                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          117                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           38                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          107                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           25192606                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3915000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      39873856                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           32174.46                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      50924.46                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            731                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           704                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.36                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.67                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          115                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   857.043478                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   721.024940                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   326.633906                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            5      4.35%      4.35% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           10      8.70%     13.04% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            5      4.35%     17.39% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            4      3.48%     20.87% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1      0.87%     21.74% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            2      1.74%     23.48% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           88     76.52%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          115                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            50112                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         49152                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3441.736495                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3375.802845                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              53.26                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.89                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         26.37                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.52                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       749700                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       383295                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5604900                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      3643560                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      6850260                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        24000                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     17870355                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1227.351791                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     14667391                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       171360                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy        68310                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       214200                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       542880                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      6723720                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy       162240                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      8497350                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   583.605516                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE       394835                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     14511720                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            43724                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.556821                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.281150                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           12745                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          12562                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined          448                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined          355                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        15815                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.794309                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.965442                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         8190     51.79%     51.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         3543     22.40%     74.19% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3505     22.16%     96.35% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          307      1.94%     98.29% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          262      1.66%     99.95% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            8      0.05%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        15815                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         6258     49.82%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     49.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         4224     33.63%     83.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2080     16.56%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        12562                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.287302                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        40937                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        13256                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        12490                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        12562                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts           43                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             238                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           27909                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         4261                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2125                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2424                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          583                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles          476                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles           56                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        15283                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         1853                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2126                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            6                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict           55                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            1                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.28%      0.28% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            1      0.05%      0.33% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.33% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2113     99.67%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2120                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.28%      0.28% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            1      0.05%      0.33% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.33% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2113     99.67%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2120                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         1853                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.917971                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     1.455520                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            4      0.22%      0.22% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.22% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            2      0.11%      0.32% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.32% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.32% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.32% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.32% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         1847     99.68%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         1853                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            2     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            2     33.33%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2     33.33%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            6                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            2      2.78%      2.78% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            2      2.78%      5.56% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      5.56% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond           68     94.44%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total           72                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            1                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            4     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            2     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            6                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            1    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            1                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            1                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            1                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            1                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            6                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            1                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            1                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            6                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            2     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            2     33.33%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2     33.33%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            6                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            1                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            5                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            4                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            4                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            3                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts          455                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        15726                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.781699                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.238481                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         8267     52.57%     52.57% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         5700     36.25%     88.81% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          340      2.16%     90.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          509      3.24%     94.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          526      3.34%     97.56% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           62      0.39%     97.95% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          287      1.83%     99.78% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           30      0.19%     99.97% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            5      0.03%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        15726                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            5                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.556821                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.281150                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        11498                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles           33                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         4175                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles           54                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles           55                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        12783                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts            1                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        12517                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2077                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         4209                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2070                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.286273                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6219                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6234                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        12511                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         6274                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         6279                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            5                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          4268                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          112                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         3280                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes           56                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        15815                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.808726                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.460374                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        11547     73.01%     73.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          726      4.59%     77.60% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          700      4.43%     82.03% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          704      4.45%     86.48% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2138     13.52%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        15815                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        12790                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.292517                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2120                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.048486                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        11491                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           1853                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1401                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes            56                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         1853                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     7.032920                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.918281                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          168      9.07%      9.07% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7          308     16.62%     25.69% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1377     74.31%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         1853                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles           55                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles           33                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        12752                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         4261                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2125                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents           56                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        12498                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        12490                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         7848                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        11500                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.285655                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.682435                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1717                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads          165                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses           14                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation           56                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores           77                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.040039                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.196075                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     16907742                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles           55                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        11501                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles           33                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         4226                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        12782                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        14903                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        19147                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        12790                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps          557                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            28469                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           25589                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000015                       # Number of seconds simulated (Second)
simTicks                                     14852799                       # Number of ticks simulated (Tick)
finalTick                                   133759107                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.06                       # Real time elapsed on the host (Second)
hostTickRate                                255471750                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     206596                       # Number of bytes of host memory used (Byte)
simInsts                                       121195                       # Number of instructions simulated (Count)
simOps                                         123234                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  2081963                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    2116797                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         4470                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         4470                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         4470                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         4470                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         4470                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         4470                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         4470                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         4470                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2422                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2422                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2422                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2422                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          371                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          217                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.423828                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.724609                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          217                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          217                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.423828                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        35760                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        35760                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2348                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2348                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2348                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2348                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          775                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          775                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          775                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          775                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     14398920                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     14398920                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     14398920                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     14398920                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         3123                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         3123                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         3123                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         3123                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.248159                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.248159                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.248159                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.248159                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 18579.251613                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 18579.251613                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 18579.251613                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 18579.251613                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          774                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          774                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          774                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          774                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          777                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       546786                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       546786                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       546786                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     59253669                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     59800455                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000320                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000320                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000320                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.248799                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst       546786                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total       546786                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst       546786                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 76357.820876                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 76963.262548                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          785                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     59253669                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     59253669                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 76357.820876                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 76357.820876                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2348                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2348                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          775                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          775                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     14398920                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     14398920                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         3123                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         3123                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.248159                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.248159                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 18579.251613                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 18579.251613                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          774                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          774                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       546786                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       546786                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000320                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000320                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst       546786                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total       546786                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          778                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           52                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            1                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.001285                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.500000                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            2                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            2                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         1485                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache          710                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         1485                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          775                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         1485                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         3561                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          785                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     4.536306                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    12.588390                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   499.411610                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.024587                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.975413                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          507                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1            5                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        25769                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        25769                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          786                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          777                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2348                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2348                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2348                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       100544                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       100544                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       100544                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          777    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       785203                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       675144                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1563                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          779                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       779.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       776.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000002398622                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           48                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           48                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1945                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           724                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    777                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   779                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  777                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 779                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.71                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.18                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              777                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             779                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                150                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                184                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                208                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                226                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                95                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                58                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                55                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                56                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                67                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                77                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                66                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                57                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                53                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.250000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.204195                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     1.344809                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13            1      2.08%      2.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           42     87.50%     89.58% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            2      4.17%     93.75% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            1      2.08%     95.83% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1      2.08%     97.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::24            1      2.08%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           48    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49728                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           49856                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3348055810.89463329                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3356673715.16978025                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 14859126                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9549.57                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          256                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49856                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        49152                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 17235808.550294123590                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3356673715.169780254364                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3309275241.656471729279                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          776                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          779                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       368802                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     40786120                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    389212769                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst    368802.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     52559.43                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    499631.28                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          320                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49856                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        50176                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49856                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        50176                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            5                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          779                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          784                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     21544761                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3356673715                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3378218476                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     21544761                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3356673715                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3378218476                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     21544761                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3356673715                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3378218476                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             783                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            768                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          102                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          117                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           38                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          108                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          127                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           26473672                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3915000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      41154922                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           33810.56                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      52560.56                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            727                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           707                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        92.85                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        92.06                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          124                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   811.354839                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   678.006388                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   338.021171                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            4      3.23%      3.23% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           10      8.06%     11.29% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            8      6.45%     17.74% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            7      5.65%     23.39% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            5      4.03%     27.42% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            3      2.42%     29.84% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1      0.81%     30.65% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            2      1.61%     32.26% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           84     67.74%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          124                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            50112                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         49152                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3373.909524                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3309.275242                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              52.21                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.36                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         25.85                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.46                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       821100                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       421245                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5697720                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      4066380                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      7526850                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        26400                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     19788975                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1332.339783                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     16055075                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       214200                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       113850                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       706860                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       542880                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      6990480                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy       520800                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     10318350                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   694.707442                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      1300197                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     14866314                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            44603                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.628325                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.275609                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           12404                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          12351                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined          107                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined          105                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        15669                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.788244                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.951310                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         8107     51.74%     51.74% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         3511     22.41%     74.15% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3567     22.76%     96.91% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          231      1.47%     98.39% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          252      1.61%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        15669                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         6173     49.98%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     49.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         4124     33.39%     83.37% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2054     16.63%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        12351                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.276910                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        40369                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        12531                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        12327                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        12351                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts           13                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             241                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           28934                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         4136                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2065                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2387                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          561                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles          118                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles           14                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        15537                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         1493                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2073                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            3                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict           13                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            1                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.29%      0.29% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            1      0.05%      0.34% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.34% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2063     99.66%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2070                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.29%      0.29% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            1      0.05%      0.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2063     99.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2070                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         1493                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.957133                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.981483                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            1      0.07%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            1      0.07%      0.13% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            1      0.07%      0.20% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.20% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.20% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            0      0.00%      0.20% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         1490     99.80%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         1493                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            1     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            1     33.33%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            1     33.33%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            3                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            1      5.26%      5.26% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1      5.26%     10.53% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%     10.53% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond           17     89.47%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total           19                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            1                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            2     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            1     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            3                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            1    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            1                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            1                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            1                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            1                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            1                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            1                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            3                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            1                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            1                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            1     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            1     33.33%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            1     33.33%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            3                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            1                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            3                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            2                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            2                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts          114                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        15648                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.785596                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.222164                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         8132     51.97%     51.97% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         5754     36.77%     88.74% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          332      2.12%     90.86% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          521      3.33%     94.19% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          545      3.48%     97.67% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           55      0.35%     98.03% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          306      1.96%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            3      0.02%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            7                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        15648                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.628325                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.275609                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        11517                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles            7                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         4119                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles           13                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles           13                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        12419                       # Number of instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        12336                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2055                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         4119                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2051                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.276573                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6153                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6162                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        12333                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         6171                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         6170                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            5                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          4141                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles           28                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         3123                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes           20                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        15669                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.792393                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.449201                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        11528     73.57%     73.57% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          690      4.40%     77.98% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          692      4.42%     82.39% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          694      4.43%     86.82% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2065     13.18%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        15669                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        12416                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.278367                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2070                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.046409                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        11514                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           1493                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1376                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes            14                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         1493                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     7.699933                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     1.160559                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3           42      2.81%      2.81% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7           76      5.09%      7.90% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1375     92.10%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         1493                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles           13                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            7                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        12411                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         4136                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2065                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents           13                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        12330                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        12327                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         7713                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        11317                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.276372                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.681541                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1697                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads           40                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            5                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation           13                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores           17                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.036621                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.187853                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     17097552                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles           13                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        11516                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles            7                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         4133                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        12423                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        14489                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        18630                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        12417                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps          143                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            28055                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           24839                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000015                       # Number of seconds simulated (Second)
simTicks                                     14639013                       # Number of ticks simulated (Tick)
finalTick                                   150477039                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.06                       # Real time elapsed on the host (Second)
hostTickRate                                255127991                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     206596                       # Number of bytes of host memory used (Byte)
simInsts                                       134524                       # Number of instructions simulated (Count)
simOps                                         136695                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  2341469                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    2379031                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         4437                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         4437                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         4437                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         4437                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         4437                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         4437                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         4437                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         4437                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2389                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2389                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2389                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2389                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          371                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          217                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.423828                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.724609                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          217                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          217                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.423828                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        35496                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        35496                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2307                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2307                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2307                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2307                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          769                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          769                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          769                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          769                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     14044941                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     14044941                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     14044941                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     14044941                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         3076                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         3076                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         3076                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         3076                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.250000                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.250000                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.250000                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.250000                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 18263.902471                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 18263.902471                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 18263.902471                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 18263.902471                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          768                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          768                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          768                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          768                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          777                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       554445                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       554445                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       554445                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     58385874                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     58940319                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000325                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000325                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000325                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.252601                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 75239.528351                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 75856.266409                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          785                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     58385874                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     58385874                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 75239.528351                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 75239.528351                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2307                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2307                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          769                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          769                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     14044941                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     14044941                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         3076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         3076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.250000                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.250000                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 18263.902471                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 18263.902471                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          768                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          768                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       554445                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       554445                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000325                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000325                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst       554445                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total       554445                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          778                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           52                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            1                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.001285                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.500000                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            2                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            2                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         1373                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache          598                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         1373                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          775                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         1373                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         3483                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          785                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     4.436943                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    12.608425                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   499.391575                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.024626                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.975374                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        25393                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        25393                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          777                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          777    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       783541                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       673171                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1562                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          778                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       778.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       776.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000004144780                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           48                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           48                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1909                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           720                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    777                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   778                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  777                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 778                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.70                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.81                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              777                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             778                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                150                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                179                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                213                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                227                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               107                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                57                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                56                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                57                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                71                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                66                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                61                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                50                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.250000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.202874                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     1.360538                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13            1      2.08%      2.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::15            1      2.08%      4.17% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           40     83.33%     87.50% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            3      6.25%     93.75% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            1      2.08%     95.83% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1      2.08%     97.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::24            1      2.08%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           48    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49728                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           49792                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3396950327.18394327                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3401322206.62690830                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 14637348                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9413.09                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          256                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49856                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        49152                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 17487517.771860711277                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3405694086.069873809814                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3357603412.197256565094                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          776                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          778                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       377639                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     39916699                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    390273156                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst    377639.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     51439.05                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    501636.45                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          320                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49792                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        50112                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49792                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        50112                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            5                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          778                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          783                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     21859397                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3401322207                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3423181604                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     21859397                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3401322207                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3423181604                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     21859397                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3401322207                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3423181604                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             783                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            768                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          102                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          119                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           36                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          108                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          127                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           25613088                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3915000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      40294338                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           32711.48                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      51461.48                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            730                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           704                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.23                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.67                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          127                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   807.811024                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   657.503008                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   348.209701                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            7      5.51%      5.51% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           10      7.87%     13.39% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            5      3.94%     17.32% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           10      7.87%     25.20% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            4      3.15%     28.35% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            1      0.79%     29.13% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            3      2.36%     31.50% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           87     68.50%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          127                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            50112                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         49152                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3423.181604                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3357.603412                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              52.97                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.74                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         26.23                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.46                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       821100                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       440220                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5704860                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      4149900                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      6650190                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        21120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     19016670                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1299.040448                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     16197932                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       214200                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       113850                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       749700                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       542880                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      5901210                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1449120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     10200240                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   696.784681                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      3717333                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     12477269                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            43961                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.576100                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.279634                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           12297                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          12298                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples        15449                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.796039                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.952399                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         7914     51.23%     51.23% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         3503     22.67%     73.90% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3558     23.03%     96.93% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          218      1.41%     98.34% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          255      1.65%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        15449                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         6154     50.04%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         4096     33.31%     83.35% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2048     16.65%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        12298                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.279748                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        40043                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        12304                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        12296                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        12298                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             235                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           28512                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         4096                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2048                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2380                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          554                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles           13                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles            1                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        15435                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         1379                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2057                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            3                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            1                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.29%      0.29% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            1      0.05%      0.34% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.34% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2047     99.66%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2054                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.29%      0.29% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            1      0.05%      0.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2047     99.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2054                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         1379                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.962292                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.932419                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            1      0.07%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            1      0.07%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            1      0.07%      0.22% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         1376     99.78%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         1379                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            1     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            1     33.33%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            1     33.33%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            3                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            1     33.33%     33.33% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1     33.33%     66.67% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%     66.67% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond            1     33.33%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total            3                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            1                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            2     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            1     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            3                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            1    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            1                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            1                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            1                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            1                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            1                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            1                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            3                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            1                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            1                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            1     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            1     33.33%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            1     33.33%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            3                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            1                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            3                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            2                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            2                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts            7                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        15448                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.795766                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.229128                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         7931     51.34%     51.34% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         5768     37.34%     88.68% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          328      2.12%     90.80% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          503      3.26%     94.06% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          545      3.53%     97.59% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           59      0.38%     97.97% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          313      2.03%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            7                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        15448                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.576100                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.279634                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        11349                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4100                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        12300                       # Number of instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        12296                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2053                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         4096                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2048                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.279702                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6147                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6144                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        12292                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         6148                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         6144                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            5                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          4099                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles            2                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         3076                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes            6                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        15449                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.795974                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.452041                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        11350     73.47%     73.47% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          684      4.43%     77.90% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          682      4.41%     82.31% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          683      4.42%     86.73% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2050     13.27%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        15449                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        12297                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.279725                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2054                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.046723                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        11349                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           1379                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1366                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes             1                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         1379                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     7.968093                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     0.369949                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3            3      0.22%      0.22% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7           10      0.73%      0.94% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1366     99.06%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         1379                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        12304                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         4096                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2048                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        12296                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        12296                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         7682                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        11268                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.279702                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.681754                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1707                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.033936                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.181085                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     16717932                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles        11348                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         4101                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        12304                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        14346                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        18459                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        12294                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            27748                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           24605                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000015                       # Number of seconds simulated (Second)
simTicks                                     14814837                       # Number of ticks simulated (Tick)
finalTick                                   167391441                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.06                       # Real time elapsed on the host (Second)
hostTickRate                                256101705                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     207620                       # Number of bytes of host memory used (Byte)
simInsts                                       147853                       # Number of instructions simulated (Count)
simOps                                         150156                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  2552707                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    2592222                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         4440                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         4440                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         4440                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         4440                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         4440                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         4440                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         4440                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         4440                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2392                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2392                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2392                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2392                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          371                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          217                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.423828                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.724609                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          217                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          217                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.423828                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        35520                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        35520                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2307                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2307                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2307                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2307                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          769                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          769                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          769                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          769                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     14220765                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     14220765                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     14220765                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     14220765                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         3076                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         3076                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         3076                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         3076                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.250000                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.250000                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.250000                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.250000                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 18492.542263                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 18492.542263                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 18492.542263                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 18492.542263                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          768                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          768                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          768                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          768                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          777                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       554445                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       554445                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       554445                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     59089170                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     59643615                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000325                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000325                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000325                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.252601                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 76145.837629                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 76761.409266                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          785                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     59089170                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     59089170                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 76145.837629                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 76145.837629                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2307                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2307                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          769                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          769                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     14220765                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     14220765                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         3076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         3076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.250000                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.250000                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 18492.542263                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 18492.542263                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          768                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          768                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       554445                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       554445                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000325                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000325                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst       554445                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total       554445                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          778                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           52                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            1                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.001285                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.500000                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            2                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            2                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         1373                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache          598                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         1373                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          775                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         1373                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         3469                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          785                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     4.419108                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    12.513946                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   499.486054                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.024441                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.975559                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        25393                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        25393                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          777                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          777    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       783541                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       667550                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1562                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          778                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       778.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       776.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000003691890                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           48                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           48                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1903                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           720                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    777                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   778                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  777                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 778                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.71                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.16                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              777                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             778                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                146                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                184                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                206                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                233                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               112                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                60                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                53                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                55                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                62                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                78                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                60                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                56                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.250000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.204195                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     1.344809                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13            1      2.08%      2.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           42     87.50%     89.58% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            2      4.17%     93.75% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            1      2.08%     95.83% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1      2.08%     97.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::24            1      2.08%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           48    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49728                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           49792                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3356634973.43912697                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3360954966.96993685                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 14813172                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9526.16                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          256                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49856                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        49152                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 17279974.123238749802                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3365274960.500746726990                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3317755031.661839962006                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          776                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          778                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       377639                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     40625616                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    388965900                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst    377639.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     52352.60                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    499956.17                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          320                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49792                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        50112                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49792                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        50112                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            5                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          778                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          783                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     21599968                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3360954967                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3382554935                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     21599968                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3360954967                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3382554935                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     21599968                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3360954967                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3382554935                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             783                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            768                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          102                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          117                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           38                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          108                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          127                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           26322005                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3915000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      41003255                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           33616.86                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      52366.86                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            730                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           704                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.23                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.67                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          126                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   814.730159                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   675.875905                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   341.202261                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            5      3.97%      3.97% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           10      7.94%     11.90% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            7      5.56%     17.46% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            8      6.35%     23.81% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            4      3.17%     26.98% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            1      0.79%     27.78% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            2      1.59%     29.37% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            1      0.79%     30.16% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           88     69.84%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          126                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            50112                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         49152                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3382.554935                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3317.755032                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              52.35                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.43                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         25.92                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.46                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       828240                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       436425                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5719140                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      4149900                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      6720870                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        29280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     19113135                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1290.134681                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE         7258                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     16387144                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       214200                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       113850                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       749700                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       542880                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      4822200                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      2433120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     10105230                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   682.102004                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      6279254                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     10111818                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            44489                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.619051                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.276315                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           12297                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          12298                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples        15534                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.791683                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.951400                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         7996     51.47%     51.47% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         3509     22.59%     74.06% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3555     22.89%     96.95% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          218      1.40%     98.35% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          255      1.64%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        15534                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         6154     50.04%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         4096     33.31%     83.35% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2048     16.65%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        12298                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.276428                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        40128                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        12304                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        12296                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        12298                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             240                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           28955                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         4096                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2048                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2380                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          554                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles           13                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles            1                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        15520                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         1379                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2057                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            3                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            1                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.29%      0.29% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            1      0.05%      0.34% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.34% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2047     99.66%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2054                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.29%      0.29% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            1      0.05%      0.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2047     99.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2054                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         1379                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.962292                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.932419                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            1      0.07%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            1      0.07%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            1      0.07%      0.22% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         1376     99.78%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         1379                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            1     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            1     33.33%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            1     33.33%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            3                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            1     33.33%     33.33% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1     33.33%     66.67% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%     66.67% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond            1     33.33%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total            3                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            1                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            2     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            1     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            3                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            1    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            1                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            1                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            1                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            1                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            1                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            1                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            3                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            1                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            1                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            1     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            1     33.33%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            1     33.33%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            3                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            1                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            3                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            2                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            2                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts            7                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        15533                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.791412                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.226063                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         8017     51.61%     51.61% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         5763     37.10%     88.71% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          328      2.11%     90.83% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          506      3.26%     94.08% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          550      3.54%     97.62% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           59      0.38%     98.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          309      1.99%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            7                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        15533                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.619051                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.276315                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        11434                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4100                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        12300                       # Number of instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        12296                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2053                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         4096                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2048                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.276383                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6147                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6144                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        12292                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         6148                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         6144                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            5                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          4099                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles            2                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         3076                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes            6                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        15534                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.791618                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.449252                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        11435     73.61%     73.61% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          684      4.40%     78.02% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          682      4.39%     82.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          683      4.40%     86.80% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2050     13.20%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        15534                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        12297                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.276405                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2054                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.046169                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        11434                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           1379                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1366                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes             1                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         1379                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     7.968093                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     0.369949                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3            3      0.22%      0.22% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7           10      0.73%      0.94% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1366     99.06%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         1379                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        12304                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         4096                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2048                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        12296                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        12296                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         7682                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        11268                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.276383                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.681754                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1704                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.034668                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.182960                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     16914402                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles        11433                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         4101                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        12304                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        14346                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        18459                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        12294                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            27833                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           24605                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000015                       # Number of seconds simulated (Second)
simTicks                                     14842476                       # Number of ticks simulated (Tick)
finalTick                                   184322493                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.06                       # Real time elapsed on the host (Second)
hostTickRate                                258290009                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     208644                       # Number of bytes of host memory used (Byte)
simInsts                                       161182                       # Number of instructions simulated (Count)
simOps                                         163617                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  2801301                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    2843349                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         4445                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         4445                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         4445                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         4445                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         4445                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         4445                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         4445                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         4445                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2397                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2397                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2397                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2397                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2048                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2048                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          371                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          217                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.423828                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.724609                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          217                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          217                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.423828                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        35560                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        35560                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         2307                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         2307                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         2307                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         2307                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          769                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          769                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          769                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          769                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     14278374                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     14278374                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     14278374                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     14278374                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         3076                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         3076                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         3076                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         3076                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.250000                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.250000                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.250000                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.250000                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 18567.456437                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 18567.456437                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 18567.456437                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 18567.456437                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          785                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          768                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          768                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          768                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          768                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total            1                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst            1                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          777                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       554445                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       554445                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       554445                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     59169756                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     59724201                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000325                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000325                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000325                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.252601                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst       554445                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 76249.685567                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 76865.123552                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          785                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          776                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     59169756                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     59169756                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 76249.685567                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 76249.685567                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         2307                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         2307                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          769                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          769                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     14278374                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     14278374                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         3076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         3076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.250000                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.250000                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 18567.456437                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 18567.456437                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          768                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          768                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total            1                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       554445                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       554445                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000325                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000325                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst       554445                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total       554445                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            1                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          778                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           52                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful            1                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.001285                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.500000                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            2                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            2                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         1373                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache          598                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         1373                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          775                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         1373                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         3468                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          785                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     4.417834                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    12.491025                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   499.508975                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.024397                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.975603                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        25393                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        25393                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          785                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          777                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         2347                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       100480                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          777    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          777                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       783541                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       671720                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         1562                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests          778                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples       778.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         1.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       776.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000002374822                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           48                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           48                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1928                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           724                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    777                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   778                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  777                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 778                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  3.71                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.17                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              777                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6             778                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                153                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                179                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                213                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                224                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                96                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                60                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                54                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                57                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                85                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                75                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                60                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                49                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.250000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.204195                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     1.344809                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13            1      2.08%      2.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           42     87.50%     89.58% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            2      4.17%     93.75% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            1      2.08%     95.83% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            1      2.08%     97.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::24            1      2.08%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           48                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           48    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           48                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49728                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           49792                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3350384396.78123808                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3354696345.81184435                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 14840811                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9543.93                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          256                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49856                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        49152                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 17247796.122425936162                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3359008294.842450618744                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3311576855.505779266357                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            1                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          776                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks          778                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       377639                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     40688076                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    387118154                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst    377639.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     52433.09                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    497581.17                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          320                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49856                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        50176                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49856                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        50176                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            5                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          779                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          784                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     21559745                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3359008295                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3380568040                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     21559745                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3359008295                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3380568040                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     21559745                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3359008295                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3380568040                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             783                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            768                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          102                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          117                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2           38                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          108                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          127                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           26384465                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3915000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      41065715                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           33696.63                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      52446.63                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            730                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           700                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.23                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.15                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          128                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   795.500000                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   633.677559                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   360.582206                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            7      5.47%      5.47% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           13     10.16%     15.62% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            5      3.91%     19.53% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            8      6.25%     25.78% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            4      3.12%     28.91% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1      0.78%     29.69% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            3      2.34%     32.03% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           87     67.97%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          128                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            50112                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         49152                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3376.256091                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3311.576856                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              52.25                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          26.38                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         25.87                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.20                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       849660                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       451605                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5740560                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      4149900                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      6742530                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        21120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     19184655                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1292.550852                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     16411052                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       214200                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       110055                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       749700                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       542880                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      6458670                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1061280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     10366065                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   698.405374                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      2709184                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     13698538                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            44572                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               3.625803                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.275801                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           12297                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          12298                       # Number of instructions issued (Count)
board.processor.cores.core.numIssuedDist::samples        15435                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.796761                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.952052                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0         7899     51.18%     51.18% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         3499     22.67%     73.85% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3569     23.12%     96.97% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          212      1.37%     98.34% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          255      1.65%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            1      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        15435                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         6154     50.04%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     50.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         4096     33.31%     83.35% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2048     16.65%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        12298                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.275913                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        40029                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        12304                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        12296                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        12298                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts            0                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             232                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           29137                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         4096                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2048                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2380                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          554                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles           13                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles            1                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        15421                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         1379                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          2057                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            3                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            1                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit            0                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            6      0.29%      0.29% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            1      0.05%      0.34% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.34% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2047     99.66%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         2054                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            6      0.29%      0.29% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            1      0.05%      0.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2047     99.66%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         2054                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         1379                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.962292                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.932419                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            1      0.07%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.07% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            1      0.07%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            0      0.00%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.15% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            1      0.07%      0.22% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         1376     99.78%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            4                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         1379                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            1     33.33%     33.33% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            1     33.33%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     66.67% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            1     33.33%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            3                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            1     33.33%     33.33% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            1     33.33%     66.67% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%     66.67% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond            1     33.33%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total            3                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            1    100.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total            1                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1     50.00%     50.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1     50.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total            2                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            2     66.67%     66.67% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            1     33.33%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            3                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch            1    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total            1                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            1    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            1                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            1                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            1                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect            1                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect            1                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates            2                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            3                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted            1                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted            1                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            3                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            1     33.33%     33.33% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            1     33.33%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     66.67% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            1     33.33%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            3                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1     50.00%     50.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1     50.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total            2                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            1    100.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total            1                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions            2                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes            3                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            2                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            2                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            2                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect            0                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts            7                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts            1                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        15434                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.796488                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.227553                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0         7911     51.26%     51.26% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         5773     37.40%     88.66% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          322      2.09%     90.75% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          516      3.34%     94.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          546      3.54%     97.63% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           53      0.34%     97.97% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          312      2.02%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            1      0.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            7                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        15434                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         6149     50.02%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     50.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4096     33.32%     83.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2048     16.66%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        12293                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        12293                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        12293                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        12293                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        12293                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     3.625803                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.275801                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6144                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        10245                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4096                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2048                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         6149     50.02%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     50.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4096     33.32%     83.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2048     16.66%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        12293                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        11335                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.runCycles         4100                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.branchResolved            1                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            1                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        12300                       # Number of instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        12296                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2053                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         4096                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2048                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.275868                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6147                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6144                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        12292                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         6148                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         6144                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads            5                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles          4099                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles            2                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         3076                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes            6                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        15435                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.796696                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.452501                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        11336     73.44%     73.44% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          684      4.43%     77.87% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2          682      4.42%     82.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          683      4.43%     86.72% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2050     13.28%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        15435                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        12297                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.275891                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         2054                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.046083                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        11335                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           1379                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1366                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes             1                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         1379                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     7.968093                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     0.369949                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3            3      0.22%      0.22% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7           10      0.73%      0.94% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1366     99.06%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         1379                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles            0                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles            0                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        12304                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         4096                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2048                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect            2                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts            2                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        12296                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        12296                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         7682                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        11268                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.275868                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.681754                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1699                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads            0                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores            0                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.035645                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.185425                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4096    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4096                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     16931052                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.idleCycles        11334                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         4101                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        12304                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        14346                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        18459                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        12294                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        14340                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            27734                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           24605                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        12293                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        12293                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000020                       # Number of seconds simulated (Second)
simTicks                                     19582065                       # Number of ticks simulated (Tick)
finalTick                                   189062082                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.11                       # Real time elapsed on the host (Second)
hostTickRate                                176190939                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     209668                       # Number of bytes of host memory used (Byte)
simInsts                                       162975                       # Number of instructions simulated (Count)
simOps                                         165719                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1465403                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1490002                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         5271                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         5271                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         5271                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         5271                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandMisses::processor.cores.core.data           16                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.demandMisses::total           16                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.overallMisses::processor.cores.core.data           16                       # number of overall misses (Count)
board.cache_hierarchy.dcache.overallMisses::total           16                       # number of overall misses (Count)
board.cache_hierarchy.dcache.demandMissLatency::processor.cores.core.data      1382949                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.demandMissLatency::total      1382949                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::processor.cores.core.data      1382949                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::total      1382949                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         5287                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         5287                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         5287                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         5287                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandMissRate::processor.cores.core.data     0.003026                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMissRate::total     0.003026                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::processor.cores.core.data     0.003026                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::total     0.003026                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMissLatency::processor.cores.core.data 86434.312500                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMissLatency::total 86434.312500                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::processor.cores.core.data 86434.312500                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::total 86434.312500                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.writebacks::writebacks            1                       # number of writebacks (Count)
board.cache_hierarchy.dcache.writebacks::total            1                       # number of writebacks (Count)
board.cache_hierarchy.dcache.demandMshrHits::processor.cores.core.data            4                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrHits::total            4                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::processor.cores.core.data            4                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::total            4                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrMisses::processor.cores.core.data           12                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMisses::total           12                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::processor.cores.core.data           12                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::total           12                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMissLatency::processor.cores.core.data      1088244                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissLatency::total      1088244                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::processor.cores.core.data      1088244                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::total      1088244                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissRate::processor.cores.core.data     0.002270                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMshrMissRate::total     0.002270                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::processor.cores.core.data     0.002270                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::total     0.002270                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::processor.cores.core.data        90687                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::total        90687                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::processor.cores.core.data        90687                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::total        90687                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.replacements            2                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         2877                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         2877                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.misses::processor.cores.core.data           16                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.misses::total           16                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.missLatency::processor.cores.core.data      1382949                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.missLatency::total      1382949                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         2893                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         2893                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.missRate::processor.cores.core.data     0.005531                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.missRate::total     0.005531                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::processor.cores.core.data 86434.312500                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::total 86434.312500                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.mshrHits::processor.cores.core.data            4                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrHits::total            4                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::processor.cores.core.data           12                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::total           12                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::processor.cores.core.data      1088244                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::total      1088244                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.004148                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::total     0.004148                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data        90687                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::total        90687                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data           12                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total           12                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data           12                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total           12                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data         2394                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total         2394                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data         2394                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total         2394                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses           12                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse   371.481779                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs        61184                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs          383                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs   159.749347                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          154                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data   217.481779                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.300781                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.424769                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.725550                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          154                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          227                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2          154                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           12                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          215                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.300781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.443359                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        42404                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        42404                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst         3811                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total         3811                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst         3811                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total         3811                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst          896                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total          896                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst          896                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total          896                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     20627019                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     20627019                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     20627019                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     20627019                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst         4707                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total         4707                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst         4707                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total         4707                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.190355                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.190355                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.190355                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.190355                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 23021.226562                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 23021.226562                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 23021.226562                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 23021.226562                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks         1059                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total         1059                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst          848                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total          848                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst          848                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total          848                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst           48                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total           48                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst           48                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher         1003                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total         1051                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst      4693302                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total      4693302                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst      4693302                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     79119602                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     83812904                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.010198                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.010198                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.010198                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.223284                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst 97777.125000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total 97777.125000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst 97777.125000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 78882.953141                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 79745.864891                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements         1059                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher         1003                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total         1003                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     79119602                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     79119602                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 78882.953141                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 78882.953141                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst         3811                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total         3811                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst          896                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total          896                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     20627019                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     20627019                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst         4707                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total         4707                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.190355                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.190355                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 23021.226562                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 23021.226562                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst          848                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total          848                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst           48                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total           48                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst      4693302                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total      4693302                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.010198                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.010198                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst 97777.125000                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total 97777.125000                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses           48                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued         1052                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused           52                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful           65                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.061787                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.575221                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR           49                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate           49                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified         3334                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache         2285                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated         3334                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded         1049                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess         3334                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs         7288                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs         1571                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs     4.639083                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    15.011973                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   496.988027                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.029320                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.970680                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          466                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           46                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          438                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::1           28                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           46                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.910156                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.089844                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses        38715                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses        38715                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp         1071                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty            1                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean         1059                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict            1                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq         1063                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port         3169                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.icache.mem_side_port::total         3169                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port           26                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.dcache.mem_side_port::total           26                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         3195                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.memory.mem_ctrl.port       135552                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.icache.mem_side_port::total       135552                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::board.memory.mem_ctrl.port          832                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.dcache.mem_side_port::total          832                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       136384                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples         1063                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean     0.010348                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev     0.101245                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0         1052     98.97%     98.97% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1           11      1.03%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total         1063                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy      1082845                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       900037                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy        10102                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         2124                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests         1065                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            7                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples      1053.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples        48.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples        12.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples      1003.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000002374822                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           65                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           65                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           2490                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           982                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                   1063                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  1053                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                 1063                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                1053                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.16                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.68                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6             1063                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6            1053                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                191                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                223                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                255                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                269                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                 33                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                 25                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                 14                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                 11                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                 11                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                 11                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 6                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 6                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 5                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                55                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               107                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                76                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                72                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                76                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26               124                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                97                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                80                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                77                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                67                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                74                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                68                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           65                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    16.446154                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    16.104048                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev     3.391307                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::6            1      1.54%      1.54% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::9            1      1.54%      3.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::11            1      1.54%      4.62% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::12            1      1.54%      6.15% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13            2      3.08%      9.23% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::14            2      3.08%     12.31% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16           42     64.62%     76.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17            5      7.69%     84.62% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18            3      4.62%     89.23% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19            2      3.08%     92.31% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::22            1      1.54%     93.85% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::24            1      1.54%     95.38% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::25            1      1.54%     96.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::27            1      1.54%     98.46% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::30            1      1.54%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           65                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           65                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    16.046154                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.042358                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     0.372104                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           64     98.46%     98.46% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::19            1      1.54%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           65                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              68032                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           67392                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3474199477.94065619                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         3441516510.13312435                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 19579068                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                  9252.87                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst         3264                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data          768                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        64384                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks        66752                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 166683135.818413436413                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 39219561.369038455188                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 3287906561.437723636627                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 3408833542.325592041016                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst           48                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data           12                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher         1003                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks         1053                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst      3539398                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data       801512                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     55247930                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks    522838297                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     73737.46                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     66792.67                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     55082.68                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks    496522.60                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst         3328                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data          768                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        64384                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        68480                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst         3328                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        64384                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        67712                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks           64                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total           64                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst           52                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data           12                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher         1006                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total         1070                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks            1                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total            1                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst    169951433                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data     39219561                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   3287906561                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3497077555                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst    169951433                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   3287906561                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   3457857994                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks      3268297                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total      3268297                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks      3268297                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst    169951433                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data     39219561                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   3287906561                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3500345852                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts            1069                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts           1043                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          119                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          149                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          130                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          141                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          130                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          147                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           49                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            9                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8           13                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            9                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13           27                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14           45                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15           40                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2          148                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          210                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          176                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          130                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           39                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           39545090                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          5345000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      59588840                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           36992.60                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      55742.60                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            975                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           956                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        91.21                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.66                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          183                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   745.967213                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   582.473042                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   372.798120                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            9      4.92%      4.92% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           24     13.11%     18.03% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383           11      6.01%     24.04% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           12      6.56%     30.60% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            9      4.92%     35.52% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            1      0.55%     36.07% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            3      1.64%     37.70% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            5      2.73%     40.44% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151          109     59.56%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          183                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            68416                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         66752                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3493.809259                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW        3408.833542                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              53.93                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          27.30                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite         26.63                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          91.43                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy      1113840                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       580635                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      6383160                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      5580180                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1843920.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      8891430                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        31680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     24424845                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1247.306911                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       780000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     20890641                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       378420                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       185955                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy      2142000                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       548100                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1843920.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      8475900                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      1182720                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     14757015                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   753.598510                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      2997464                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       780000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     17889847                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            58805                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.171455                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.239725                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           15716                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           62                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          15338                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued            3                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined         1384                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined          940                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           35                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples        19710                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.778184                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.050653                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        10908     55.34%     55.34% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         3944     20.01%     75.35% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3881     19.69%     95.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3          458      2.32%     97.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          398      2.02%     99.39% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           76      0.39%     99.77% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           32      0.16%     99.93% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7           10      0.05%     99.98% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            3      0.02%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        19710                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            2     22.22%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     22.22% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            6     66.67%     88.89% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            1     11.11%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass           15      0.10%      0.10% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         8140     53.07%     53.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            5      0.03%     53.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            1      0.01%     53.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     53.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     53.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     53.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     53.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     53.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     53.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            3      0.02%     53.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     53.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.02%     53.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     53.25% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            3      0.02%     53.27% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            7      0.05%     53.31% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     53.31% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            6      0.04%     53.35% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     53.35% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            1      0.01%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     53.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead         4678     30.50%     83.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2476     16.14%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        15338                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.260828                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   9                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000587                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        50267                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        17071                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        14961                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads          131                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           91                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses           58                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        15269                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses           63                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          217                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             280                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           39095                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads         4756                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         2574                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2477                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          749                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles         1785                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles          277                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles        17648                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets         3453                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          3480                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          362                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict          276                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode          117                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit          159                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return          157      4.92%      4.92% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect          130      4.08%      9.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect           30      0.94%      9.94% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         2749     86.23%     96.17% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond          102      3.20%     99.37% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     99.37% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond           20      0.63%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         3188                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return          142      4.61%      4.61% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect          121      3.93%      8.54% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect           30      0.97%      9.51% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         2669     86.63%     96.14% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond          101      3.28%     99.42% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     99.42% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond           18      0.58%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         3081                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples         3453                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    30.415291                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     5.945301                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           36      1.04%      1.04% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           45      1.30%      2.35% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           50      1.45%      3.79% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15           45      1.30%      5.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19           20      0.58%      5.68% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           36      1.04%      6.72% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27           19      0.55%      7.27% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31           14      0.41%      7.67% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32         3188     92.33%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total         3453                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           46     15.75%     15.75% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           52     17.81%     33.56% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            7      2.40%     35.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond          159     54.45%     90.41% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           22      7.53%     97.95% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     97.95% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            6      2.05%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          292                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return          138     14.85%     14.85% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          133     14.32%     29.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect           25      2.69%     31.86% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond          512     55.11%     86.98% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond          104     11.19%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           17      1.83%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total          929                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           52     18.84%     18.84% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           74     26.81%     45.65% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect           14      5.07%     50.72% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond           88     31.88%     82.61% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           43     15.58%     98.19% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.19% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            5      1.81%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total          276                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           51      2.09%      2.09% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           40      1.64%      3.73% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect           12      0.49%      4.22% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2313     94.76%     98.98% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond           18      0.74%     99.71% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     99.71% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            7      0.29%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2441                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           51     25.37%     25.37% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           37     18.41%     43.78% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           12      5.97%     49.75% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond           78     38.81%     88.56% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           18      8.96%     97.51% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     97.51% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            5      2.49%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total          201                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget           24      8.22%      8.22% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB          222     76.03%     84.25% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           46     15.75%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          292                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          269     97.46%     97.46% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            2      0.72%     98.19% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            5      1.81%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total          276                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           74     63.25%     63.25% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     63.25% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     63.25% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           43     36.75%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total          117                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted          159                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken          135                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect          276                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect          276                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          292                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          214                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          292                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          268                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups           13                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses           13                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          274                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            2                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          292                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           46     15.75%     15.75% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           52     17.81%     33.56% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            7      2.40%     35.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond          159     54.45%     90.41% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           22      7.53%     97.95% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%     97.95% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            6      2.05%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          292                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           51     23.83%     23.83% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           40     18.69%     42.52% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect           12      5.61%     48.13% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond           86     40.19%     88.32% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond           18      8.41%     96.73% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%     96.73% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            7      3.27%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total          214                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           47     17.54%     17.54% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           74     27.61%     45.15% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect           14      5.22%     50.37% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond           85     31.72%     82.09% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           43     16.04%     98.13% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%     98.13% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            5      1.87%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total          268                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions          193                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples          193                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0          132                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1           31                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2           23                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            3                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            4                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes          190                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops          188                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes          138                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used          144                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           51                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups           13                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses           13                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           19                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords           32                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect           12                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            3                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            1                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1            3                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2            4                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            3                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            2                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0            8                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1            1                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            3                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            3                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts         1415                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls           27                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts          159                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        19440                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.741049                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.250802                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        11061     56.90%     56.90% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         6134     31.55%     88.45% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2          513      2.64%     91.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3          620      3.19%     94.28% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4          625      3.22%     97.49% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5          104      0.53%     98.03% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6          340      1.75%     99.78% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7           18      0.09%     99.87% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8           25      0.13%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        19440                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           12                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           52                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           15      0.10%      0.10% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         7502     52.08%     52.18% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            5      0.03%     52.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     52.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     52.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     52.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     52.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     52.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     52.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     52.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            3      0.02%     52.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     52.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            3      0.02%     52.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     52.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            3      0.02%     52.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            6      0.04%     52.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     52.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            6      0.04%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     52.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         4457     30.94%     83.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite         2406     16.70%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total        14406                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples           25                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts        14097                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps        14406                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP        14086                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP        14395                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.171455                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.239725                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         6863                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts        12173                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         4457                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts         2394                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts           55                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           15      0.10%      0.10% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         7502     52.08%     52.18% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            5      0.03%     52.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     52.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     52.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     52.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     52.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     52.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     52.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     52.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            3      0.02%     52.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     52.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            3      0.02%     52.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     52.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            3      0.02%     52.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            6      0.04%     52.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     52.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            6      0.04%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     52.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         4457     30.94%     83.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite         2406     16.70%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total        14406                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2441                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2371                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           70                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2313                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl          128                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           52                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           51                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        13182                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles          906                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         5344                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles          118                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles          160                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved          180                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred          120                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        16793                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          337                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        15121                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop           35                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2576                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         4617                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2452                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.257138                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         6714                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites         6744                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        15150                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         7909                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         7069                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          471                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites           24                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads           97                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches           94                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles          6449                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles          554                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines         4707                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes           61                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        19710                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.921563                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.594881                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        13846     70.25%     70.25% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1          969      4.92%     75.16% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         1010      5.12%     80.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3          942      4.78%     85.07% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         2700     13.70%     98.77% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           69      0.35%     99.12% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           72      0.37%     99.48% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           44      0.22%     99.71% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           58      0.29%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        19710                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        17377                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.295502                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         3188                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.054213                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        12984                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts           3453                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          1918                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes           277                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples         3453                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     5.825659                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.498728                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3          788     22.82%     22.82% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7          997     28.87%     51.69% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         1668     48.31%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total         3453                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles          160                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles          415                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            4                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        15813                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           95                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts         4756                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         2574                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           62                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            4                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            7                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          169                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts          176                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        15073                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        15019                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst         8893                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        13329                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.255403                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.667192                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         1704                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads          299                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          168                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            6                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         4457                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.301099                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     7.848057                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         4452     99.89%     99.89% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139            1      0.02%     99.91% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179            1      0.02%     99.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199            1      0.02%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269            1      0.02%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows            1      0.02%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          355                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         4457                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     21670641                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles          160                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        13380                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles          419                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles          471                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles         5263                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles           17                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts        16343                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.IQFullEvents            1                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.renamedOperands        18155                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        24140                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        16420                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           99                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps        16319                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps         1837                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing           39                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing           23                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts          238                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            35223                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           31908                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts        14086                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps        14395                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            2                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
