
---------- Begin Simulation Statistics ----------
simSeconds                                   0.000011                       # Number of seconds simulated (Second)
simTicks                                     10612710                       # Number of ticks simulated (Tick)
finalTick                                    23965344                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.13                       # Real time elapsed on the host (Second)
hostTickRate                                 78744348                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     205448                       # Number of bytes of host memory used (Byte)
simInsts                                        33801                       # Number of instructions simulated (Count)
simOps                                          34823                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   250492                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     258056                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         8257                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         8257                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         8257                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         8257                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         8257                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         8257                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         8257                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         8257                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         8257                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         8257                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         8257                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         8257                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          157                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          173                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        66056                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        66056                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        11542                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        11542                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        11542                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        11542                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst         2032                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total         2032                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst         2032                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total         2032                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst     26033274                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total     26033274                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst     26033274                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total     26033274                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        13574                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        13574                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        13574                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        13574                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.149698                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.149698                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.149698                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.149698                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 12811.650591                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 12811.650591                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 12811.650591                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 12811.650591                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          753                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          753                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst         2032                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total         2032                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst         2032                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total         2032                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          774                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          774                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     40102395                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total     40102395                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.057021                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 51811.879845                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total 51811.879845                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          753                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          774                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          774                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     40102395                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total     40102395                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 51811.879845                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total 51811.879845                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        11542                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        11542                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst         2032                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total         2032                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst     26033274                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total     26033274                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        13574                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        13574                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.149698                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.149698                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 12811.650591                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 12811.650591                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst         2032                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total         2032                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          774                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused          171                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          103                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.133075                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        19864                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        19089                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        19864                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          775                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        19864                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse   510.561186                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        17532                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          753                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    23.282869                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst    31.705551                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   478.855635                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.061925                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.935265                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total     0.997190                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       109365                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       109365                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          773                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          753                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          774                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2300                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2300                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        97664                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        97664                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          774                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          774    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          774                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1046509                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       772227                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1527                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          747                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            6                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher            9                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total            9                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher            9                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total            9                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandMisses::cache_hierarchy.icache.prefetcher          765                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::total          765                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.overallMisses::cache_hierarchy.icache.prefetcher          765                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::total          765                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.demandMissLatency::cache_hierarchy.icache.prefetcher     39796386                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::total     39796386                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::cache_hierarchy.icache.prefetcher     39796386                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::total     39796386                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          774                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          774                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          774                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          774                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandMissRate::cache_hierarchy.icache.prefetcher     0.988372                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::total     0.988372                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::cache_hierarchy.icache.prefetcher     0.988372                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::total     0.988372                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMissLatency::cache_hierarchy.icache.prefetcher 52021.419608                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::total 52021.419608                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::cache_hierarchy.icache.prefetcher 52021.419608                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::total 52021.419608                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.demandMshrMisses::cache_hierarchy.icache.prefetcher          765                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::total          765                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.icache.prefetcher          765                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::total          765                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMissLatency::cache_hierarchy.icache.prefetcher     39541308                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::total     39541308                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher     39541308                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::total     39541308                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissRate::cache_hierarchy.icache.prefetcher     0.988372                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::total     0.988372                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.icache.prefetcher     0.988372                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::total     0.988372                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 51687.984314                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::total 51687.984314                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 51687.984314                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::total 51687.984314                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher            9                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total            9                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::cache_hierarchy.icache.prefetcher          765                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::total          765                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::cache_hierarchy.icache.prefetcher     39796386                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::total     39796386                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          774                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          774                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::cache_hierarchy.icache.prefetcher     0.988372                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::total     0.988372                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::cache_hierarchy.icache.prefetcher 52021.419608                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::total 52021.419608                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::cache_hierarchy.icache.prefetcher          765                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::total          765                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::cache_hierarchy.icache.prefetcher     39541308                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::total     39541308                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::cache_hierarchy.icache.prefetcher     0.988372                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::total     0.988372                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 51687.984314                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::total 51687.984314                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          747                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          747                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          747                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          747                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses          765                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse  1269.713183                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher   841.713183                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.051374                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.077497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0          722                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1          672                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          256                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        25102                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        25102                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          766                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          766                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port         1532                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::total         1532                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         1532                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port        49024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::total        49024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total        49024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          766                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          766    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          766                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       255189                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       651760                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests          766                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples       766.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000579848                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1536                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    766                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  766                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  2.92                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              766                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                191                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                191                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                313                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                 70                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              49024                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         4619366778.13678169                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 10754234                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 14039.47                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher        49024                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 4619366778.136781692505                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher          766                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher     18649251                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     24346.28                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher        49024                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        49024                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher        49024                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        49024                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher          766                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          766                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher   4619366778                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   4619366778                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher   4619366778                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   4619366778                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher   4619366778                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   4619366778                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             766                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0           96                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           30                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat            4286751                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3830000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      18649251                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            5596.28                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      24346.28                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            716                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.47                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples           63                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   874.666667                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   787.142192                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   278.020654                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            1      1.59%      1.59% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255            3      4.76%      6.35% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511            3      4.76%     11.11% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            6      9.52%     20.63% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            2      3.17%     23.81% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            2      3.17%     26.98% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           46     73.02%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total           63                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            49024                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        4619.366778                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              36.09                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          36.09                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          93.47                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       442680                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       231495                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5940480                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      7134120                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy        49920                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     15027975                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower  1416.035584                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE        20223                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     15233987                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       128520                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy        68310                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy      1113840                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      3630330                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3034080                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      9204360                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   867.295912                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      7859094                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT      7483697                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            31870                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               5.182957                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.192940                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           33335                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            7                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          22781                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        27182                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        22846                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28661                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.794843                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.202807                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        17506     61.08%     61.08% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         4472     15.60%     76.68% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         3234     11.28%     87.97% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         2250      7.85%     95.82% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          941      3.28%     99.10% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          221      0.77%     99.87% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           37      0.13%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28661                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        10049     44.11%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     44.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        10542     46.28%     90.39% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2190      9.61%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        22781                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.714810                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        74221                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        61662                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        17797                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        22781                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         3468                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled              81                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles            3209                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads        11727                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         4579                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         2260                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          207                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        17071                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2052                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         9538                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        19959                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches          7369                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches            8                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2052                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            4                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           16      0.22%      0.22% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            4      0.05%      0.27% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.27% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond         7341     99.73%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total         7361                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           16      0.22%      0.22% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            4      0.05%      0.27% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.27% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond         7341     99.73%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total         7361                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        19959                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.992986                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.417033                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3            1      0.01%      0.01% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            2      0.01%      0.02% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            1      0.01%      0.02% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.02% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            1      0.01%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            0      0.00%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.03% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.02%      0.04% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        19951     99.96%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        19959                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return            5     62.50%     62.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            1     12.50%     75.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     75.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            0      0.00%     75.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            2     25.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total            8                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return            9      0.17%      0.17% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            3      0.06%      0.23% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.23% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond         5293     99.75%     99.98% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            1      0.02%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total         5306                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            4      0.19%      0.19% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.19% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.81%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2052                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.10% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.10% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.90%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2050                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB            3     37.50%     37.50% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS            5     62.50%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total            8                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2052    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2052                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            4    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            4                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            0                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2052                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2052                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups            8                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits            8                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2052                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2052                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups            8                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return            5     62.50%     62.50% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            1     12.50%     75.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     75.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            0      0.00%     75.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            2     25.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total            8                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            4      0.19%      0.19% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.19% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.81%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2052                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2050                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2050                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2035                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            6                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            6                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           10                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops            8                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes            8                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used            6                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            0                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            1                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect          107                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect           14                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong         1927                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1           55                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2           27                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3           16                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0           88                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           19                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        27189                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2049                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        24485                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.251133                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.596400                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        20387     83.26%     83.26% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2048      8.36%     91.63% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2049      8.37%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            3                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        24485                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     5.182957                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.192940                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles        13891                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         2127                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles         8125                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2470                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            4                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            4                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        40305                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           12                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        19311                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         2748                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         8672                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         1780                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.605930                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads         8226                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        10611                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        18340                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites        10006                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs        10452                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         2748                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.cycles         13895                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4104                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        13574                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         1671                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        28661                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.470116                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.714676                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0        14766     51.52%     51.52% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         2270      7.92%     59.44% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         2191      7.64%     67.08% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         2253      7.86%     74.95% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4         7181     25.05%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            4                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28661                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        42135                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.322090                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches         7361                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.230970                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        12714                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          19959                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          3692                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2052                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        19959                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.705897                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.231308                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6156     30.84%     30.84% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        10915     54.69%     85.53% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         2888     14.47%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        19959                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         2127                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        33342                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts          349                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        11727                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         4579                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            7                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents         1138                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            0                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         2664                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         2664                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        18068                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        17797                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        12144                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        18162                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.558425                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.668649                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads          415                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         9679                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses          415                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation         1138                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         4579                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     23965344                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles        14484                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         2127                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        10002                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        38503                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        46538                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        57515                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        37199                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        36286                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            57823                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes           70856                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000010                       # Number of seconds simulated (Second)
simTicks                                      9547110                       # Number of ticks simulated (Tick)
finalTick                                    33528771                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.17                       # Real time elapsed on the host (Second)
hostTickRate                                 57548047                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     217736                       # Number of bytes of host memory used (Byte)
simInsts                                        39962                       # Number of instructions simulated (Count)
simOps                                          40984                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   240700                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     246846                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         9358                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         9358                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         9358                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         9358                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         9358                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         9358                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         9358                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         9358                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         9358                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         9358                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         9358                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         9358                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          157                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          173                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        74864                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        74864                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          771                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          771                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          770                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3084909                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3084909                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.037601                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4006.375325                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4006.375325                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          771                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          770                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          770                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3084909                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3084909                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4006.375325                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4006.375325                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          770                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            9                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          771                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     1.001299                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        22532                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        21763                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        22532                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        22532                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        15102                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          771                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    19.587549                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.278619                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.721381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997503                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       164595                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       164595                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          771                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          772                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2313                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2313                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98752                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98752                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1027638                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       770229                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1542                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          772                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          772                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          772                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1650                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1222                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100708                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0           21                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1373                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          256                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24672                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24672                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples            1                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean          320                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   320.000000                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev          nan                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::320-351            1    100.00%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total            1                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy         3795                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      3378390                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       821280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      4818105                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   504.666334                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      2110021                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT      7193406                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9303427                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            28670                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.662547                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.214475                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           49103                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          27398                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued            6                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        42968                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        41169                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.955633                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.391733                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        18430     64.28%     64.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          624      2.18%     66.46% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         4041     14.09%     80.55% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         4037     14.08%     94.64% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4         1170      4.08%     98.72% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          307      1.07%     99.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           61      0.21%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            6    100.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        11803     43.08%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        13101     47.82%     90.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2494      9.10%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        27398                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.955633                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   6                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000219                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        83480                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        93284                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        21486                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        27404                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         4554                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17384                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7159                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         6639                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         2714                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        18444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2053                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         8173                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        22532                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         12310                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           36                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2053                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            5                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            7      0.06%      0.06% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.05%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12268     99.88%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12283                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.05%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12268     99.95%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12274                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.969288                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.942790                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           12      0.05%      0.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            9      0.04%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.01%      0.12% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        22505     99.88%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           17     62.96%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2      7.41%     70.37% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            8     29.63%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           27                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           15      0.15%      0.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.05%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10223     99.74%     99.93% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            7      0.07%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10250                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.24%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.76%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2053                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           10     37.04%     37.04% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           17     62.96%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           27                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2053    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2053                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            5                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2053                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2053                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           27                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2053                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2053                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           17     62.96%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2      7.41%     70.37% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            8     29.63%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           27                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.24%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.76%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2053                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           20                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           21                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           19                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           18                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1420                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          619                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            9                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          618                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          373                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1391                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        42968                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2048                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.272925                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.617512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        18434     81.82%     81.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2047      9.09%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2047      9.09%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.662547                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.214475                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6152                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4092                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14329                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2049                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            7                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            6                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        69553                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           20                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        22846                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3794                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         9359                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2047                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.796861                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        11367                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        13830                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        21092                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites        11040                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs        11406                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3794                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            9                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         24564                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4106                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        20478                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.569585                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.499133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         4106     14.32%     14.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4104     14.31%     28.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4092     14.27%     42.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4091     14.27%     57.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12276     42.82%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            1      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            5                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        73668                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.569515                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12283                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.428427                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2053                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          22532                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8190                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2053                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.905335                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.234580                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6163     27.35%     27.35% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12281     54.50%     81.86% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4088     18.14%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4092                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        49104                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            1                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17384                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7159                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents         1212                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3693                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3695                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        21487                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        21486                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        14281                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        21857                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.749424                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.653383                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            1                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15341                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation         1212                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7161                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      9563427                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8204                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4092                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14326                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        61378                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        72617                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        91024                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        60340                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        62387                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            71647                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          104361                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000010                       # Number of seconds simulated (Second)
simTicks                                      9547110                       # Number of ticks simulated (Tick)
finalTick                                    43093863                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.15                       # Real time elapsed on the host (Second)
hostTickRate                                 61746183                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     230024                       # Number of bytes of host memory used (Byte)
simInsts                                        46123                       # Number of instructions simulated (Count)
simOps                                          47145                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   298076                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     304670                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         8312                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         8312                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         8312                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         8312                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         8312                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         8312                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         8312                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         8312                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         8312                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         8312                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         8312                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         8312                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          157                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          173                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        66496                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        66496                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.037552                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          770                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          769                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            5                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          770                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     1.001300                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        22532                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        21763                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        22532                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        22532                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        20995                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          770                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    27.266234                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.278619                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.721381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997503                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       164594                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       164594                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1025640                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       769230                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1540                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          770                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1650                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1222                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100708                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1394                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          256                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24640                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24640                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            28670                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.662547                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.214475                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           49103                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          25139                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued            5                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        42971                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        43217                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.876840                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.277174                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        18430     64.28%     64.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1          992      3.46%     67.74% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         4630     16.15%     83.89% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         3801     13.26%     97.15% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          636      2.22%     99.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          146      0.51%     99.88% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6           35      0.12%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            5    100.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        10823     43.05%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        12009     47.77%     90.82% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2307      9.18%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        25139                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.876840                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   5                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000199                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        78959                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        92725                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        19792                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        25144                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         4139                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17384                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7159                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         8109                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         4361                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        18444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2053                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         8173                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        22532                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         12310                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           36                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2053                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            5                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            7      0.06%      0.06% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.05%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12268     99.88%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12283                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.05%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12268     99.95%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12274                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.969288                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.942790                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           12      0.05%      0.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            9      0.04%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.01%      0.12% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        22505     99.88%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           17     62.96%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2      7.41%     70.37% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            8     29.63%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           27                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           15      0.15%      0.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.05%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10225     99.74%     99.93% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            7      0.07%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10252                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.24%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.76%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2053                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           10     37.04%     37.04% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           17     62.96%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           27                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2053    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2053                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            5                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2053                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2053                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           27                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2053                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2053                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           17     62.96%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2      7.41%     70.37% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            8     29.63%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           27                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.24%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.76%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2053                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           20                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           21                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           19                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           18                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1429                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          619                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          624                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          376                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1400                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        42971                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2048                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.272925                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.617512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        18434     81.82%     81.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2047      9.09%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2047      9.09%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.662547                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.214475                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6152                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4092                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14329                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2049                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            7                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            6                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        69553                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           20                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        21001                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3710                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         8312                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2047                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.732508                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        11115                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        13092                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        19331                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         9676                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs        10359                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3710                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            9                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         24564                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4106                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        20478                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.569585                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.499133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         4106     14.32%     14.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4104     14.31%     28.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4092     14.27%     42.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4091     14.27%     57.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12276     42.82%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            1      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            5                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        73668                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.569515                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12283                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.428427                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2053                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          22532                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8190                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2053                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.905335                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.234580                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6163     27.35%     27.35% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12281     54.50%     81.86% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4088     18.14%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4092                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        49104                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            1                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17384                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7159                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          650                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3656                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3658                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        19793                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        19792                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        13114                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        20522                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.690338                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.639022                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15342                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          650                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7162                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8204                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4092                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14326                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        61378                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        72617                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        91024                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        60340                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        62396                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            71650                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          104364                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000010                       # Number of seconds simulated (Second)
simTicks                                      9547110                       # Number of ticks simulated (Tick)
finalTick                                    52658955                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.15                       # Real time elapsed on the host (Second)
hostTickRate                                 63319322                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     241288                       # Number of bytes of host memory used (Byte)
simInsts                                        52284                       # Number of instructions simulated (Count)
simOps                                          53306                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   346520                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     353281                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7713                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7713                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7713                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7713                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7713                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7713                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7713                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7713                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         7713                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         7713                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         7713                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         7713                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          157                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          173                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        61704                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        61704                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.037552                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          770                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          769                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            5                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          770                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     1.001300                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        22532                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        21763                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        22532                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        22532                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        20995                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          770                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    27.266234                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.278619                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.721381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997503                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       164594                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       164594                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1025640                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       769230                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1540                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          770                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1650                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1222                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100708                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1394                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          256                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24640                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24640                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            28670                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.662547                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.214475                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           49103                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          23791                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        42971                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        44349                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.829822                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.203908                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        18430     64.28%     64.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         1269      4.43%     68.71% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         4900     17.09%     85.80% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         3670     12.80%     98.60% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          297      1.04%     99.64% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          100      0.35%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            4      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        10281     43.21%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        11338     47.66%     90.87% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2172      9.13%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        23791                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.829822                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        76253                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        92397                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        18852                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        23791                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         3836                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17384                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7159                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         8952                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         4898                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        18444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2053                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         8173                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        22532                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         12310                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           36                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2053                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            5                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            7      0.06%      0.06% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.05%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12268     99.88%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12283                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.05%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12268     99.95%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12274                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.969288                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.942790                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           12      0.05%      0.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            9      0.04%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.01%      0.12% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        22505     99.88%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           17     62.96%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2      7.41%     70.37% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            8     29.63%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           27                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           15      0.15%      0.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.05%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10225     99.74%     99.93% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            7      0.07%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10252                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.24%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.76%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2053                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           10     37.04%     37.04% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           17     62.96%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           27                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2053    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2053                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            5                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2053                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2053                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           27                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2053                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2053                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           17     62.96%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2      7.41%     70.37% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            8     29.63%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           27                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.24%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.76%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2053                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           20                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           21                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           19                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           18                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1429                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          619                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          624                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          376                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1400                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        42971                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2048                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.272925                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.617512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        18434     81.82%     81.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2047      9.09%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2047      9.09%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.662547                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.214475                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6152                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4092                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14329                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2049                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            7                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            6                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        69553                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           20                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        19956                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3662                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7713                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2047                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.696059                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        10971                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        12699                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        18334                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         8915                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9760                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3662                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            9                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         24564                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4106                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        20478                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.569585                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.499133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         4106     14.32%     14.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4104     14.31%     28.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4092     14.27%     42.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4091     14.27%     57.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12276     42.82%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            1      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            5                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        73668                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.569515                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12283                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.428427                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2053                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          22532                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8190                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2053                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.905335                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.234580                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6163     27.35%     27.35% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12281     54.50%     81.86% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4088     18.14%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4092                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        49104                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            1                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17384                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7159                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          322                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3628                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3630                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        18853                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        18852                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        12437                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        19749                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.657551                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.629753                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15342                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          322                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7162                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8204                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4092                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14326                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        61378                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        72617                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        91024                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        60340                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        62396                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            71650                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          104364                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000010                       # Number of seconds simulated (Second)
simTicks                                      9547110                       # Number of ticks simulated (Tick)
finalTick                                    62224047                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.15                       # Real time elapsed on the host (Second)
hostTickRate                                 63704542                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     252552                       # Number of bytes of host memory used (Byte)
simInsts                                        58445                       # Number of instructions simulated (Count)
simOps                                          59467                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   389701                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     396501                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7668                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7668                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7668                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7668                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7668                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7668                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7668                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7668                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         7668                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         7668                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         7668                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         7668                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          157                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          173                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        61344                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        61344                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.037552                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          770                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          769                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            5                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          770                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     1.001300                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        22532                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        21763                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        22532                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        22532                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        20995                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          770                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    27.266234                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.278619                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.721381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997503                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       164594                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       164594                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1025640                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       769230                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1540                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          770                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1650                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1222                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100708                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1394                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          256                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24640                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24640                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            28670                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.662547                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.214475                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           49103                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          23704                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        42971                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        44455                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.826788                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.198669                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        18430     64.28%     64.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         1278      4.46%     68.74% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         4936     17.22%     85.96% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         3651     12.73%     98.69% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          274      0.96%     99.65% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5          101      0.35%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        10234     43.17%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.17% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        11300     47.67%     90.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2170      9.15%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        23704                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.826788                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        76080                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        92384                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        18771                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        23704                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         3842                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17384                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7159                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         9003                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         4958                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        18444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2053                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         8173                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        22532                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         12310                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           36                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2053                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            5                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            7      0.06%      0.06% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.05%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12268     99.88%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12283                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.05%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12268     99.95%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12274                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.969288                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.942790                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           12      0.05%      0.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            9      0.04%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.01%      0.12% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        22505     99.88%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           17     62.96%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2      7.41%     70.37% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            8     29.63%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           27                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           15      0.15%      0.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.05%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10225     99.74%     99.93% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            7      0.07%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10252                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.24%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.76%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2053                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           10     37.04%     37.04% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           17     62.96%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           27                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2053    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2053                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            5                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2053                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2053                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           27                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2053                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2053                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           17     62.96%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2      7.41%     70.37% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            8     29.63%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           27                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.24%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.76%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2053                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           20                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           21                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           19                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           18                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1429                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          619                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          624                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          376                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1400                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        42971                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2048                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.272925                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.617512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        18434     81.82%     81.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2047      9.09%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2047      9.09%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.662547                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.214475                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6152                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4092                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14329                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2049                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            7                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            6                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        69553                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           20                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        19864                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3648                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7669                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2047                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.692850                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        10929                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        12609                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        18256                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         8879                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9716                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3648                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            9                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         24564                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4106                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        20478                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.569585                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.499133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         4106     14.32%     14.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4104     14.31%     28.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4092     14.27%     42.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4091     14.27%     57.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12276     42.82%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            1      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            5                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        73668                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.569515                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12283                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.428427                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2053                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          22532                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8190                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2053                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.905335                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.234580                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6163     27.35%     27.35% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12281     54.50%     81.86% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4088     18.14%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4092                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        49104                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            1                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17384                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7159                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          309                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3624                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3626                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        18773                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        18771                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        12388                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        19672                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.654726                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.629728                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            1                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15342                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          309                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7162                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8204                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4092                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14326                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        61378                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        72617                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        91024                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        60340                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        62396                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            71650                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          104364                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000010                       # Number of seconds simulated (Second)
simTicks                                      9547110                       # Number of ticks simulated (Tick)
finalTick                                    71789139                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.15                       # Real time elapsed on the host (Second)
hostTickRate                                 63818549                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     263816                       # Number of bytes of host memory used (Byte)
simInsts                                        64606                       # Number of instructions simulated (Count)
simOps                                          65628                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   431568                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     438378                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7511                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7511                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7511                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7511                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7511                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7511                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7511                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7511                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         7511                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         7511                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         7511                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         7511                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          157                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          173                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        60088                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        60088                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.037552                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          770                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          769                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            5                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          770                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     1.001300                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        22532                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        21763                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        22532                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        22532                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        20995                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          770                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    27.266234                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.278619                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.721381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997503                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       164594                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       164594                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1025640                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       769230                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1540                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          770                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1650                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1222                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100708                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1394                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          256                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24640                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24640                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              4                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       224580                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      3477120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      4930980                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   516.489283                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      9045092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       224580                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3477120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      4930980                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   516.489283                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9045092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            28670                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.662547                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.214475                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           49103                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          23332                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        42971                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        44776                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.813812                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.177683                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        18430     64.28%     64.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         1366      4.76%     69.05% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         4984     17.38%     86.43% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         3632     12.67%     99.10% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          189      0.66%     99.76% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           68      0.24%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            1      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        10082     43.21%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        11124     47.68%     90.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2126      9.11%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        23332                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.813812                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        75335                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        92283                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        18511                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        23332                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         3750                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17384                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7159                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         9227                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         5008                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        18444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2053                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         8173                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        22532                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         12310                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           36                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2053                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            5                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            7      0.06%      0.06% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.05%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12268     99.88%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12283                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.05%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12268     99.95%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12274                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.969288                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.942790                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           12      0.05%      0.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            9      0.04%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.01%      0.12% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        22505     99.88%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           17     62.96%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2      7.41%     70.37% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            8     29.63%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           27                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           15      0.15%      0.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.05%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10225     99.74%     99.93% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            7      0.07%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10252                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.24%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.76%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2053                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           10     37.04%     37.04% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           17     62.96%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           27                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2053    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2053                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            5                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2053                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2053                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           27                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2053                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2053                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           17     62.96%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2      7.41%     70.37% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            8     29.63%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           27                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.24%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.76%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2053                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           20                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           21                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           19                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           18                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1429                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          619                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          624                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          376                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1400                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        42971                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2048                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.272925                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.617512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        18434     81.82%     81.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2047      9.09%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2047      9.09%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.662547                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.214475                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6152                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4092                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14329                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2049                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            7                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            6                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        69553                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           20                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        19583                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3633                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7511                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2047                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.683048                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        10884                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        12531                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        17990                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         8659                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9558                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3633                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            9                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         24564                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4106                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        20478                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.569585                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.499133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         4106     14.32%     14.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4104     14.31%     28.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4092     14.27%     42.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4091     14.27%     57.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12276     42.82%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            1      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            5                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        73668                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.569515                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12283                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.428427                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2053                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          22532                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8190                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2053                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.905335                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.234580                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6163     27.35%     27.35% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12281     54.50%     81.86% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4088     18.14%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4092                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        49104                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            1                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17384                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7159                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          208                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3612                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3614                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        18512                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        18511                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        12192                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        19446                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.645657                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.626967                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15342                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          208                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7162                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8204                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4092                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14326                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        61378                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        72617                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        91024                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        60340                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        62396                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            71650                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          104364                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000010                       # Number of seconds simulated (Second)
simTicks                                      9547110                       # Number of ticks simulated (Tick)
finalTick                                    81354231                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.15                       # Real time elapsed on the host (Second)
hostTickRate                                 63784507                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     276104                       # Number of bytes of host memory used (Byte)
simInsts                                        70767                       # Number of instructions simulated (Count)
simOps                                          71789                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   472468                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     479274                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7489                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7489                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7489                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7489                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7489                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7489                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7489                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7489                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         7489                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         7489                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         7489                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         7489                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          157                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          173                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        59912                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        59912                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.037552                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          770                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          769                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            5                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          770                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     1.001300                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        22532                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        21763                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        22532                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        22532                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        20995                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          770                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    27.266234                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.278619                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.721381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997503                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       164594                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       164594                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1025640                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       769230                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1540                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          770                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1650                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1222                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100708                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1394                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          256                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24640                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24640                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            28670                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.662547                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.214475                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           49103                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          23284                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        42971                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        44828                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.812138                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.174629                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        18430     64.28%     64.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         1370      4.78%     69.06% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         5005     17.46%     86.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         3620     12.63%     99.15% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          181      0.63%     99.78% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           64      0.22%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        10058     43.20%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        11100     47.67%     90.87% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2126      9.13%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        23284                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.812138                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        75240                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        92275                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        18470                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        23284                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         3747                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17384                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7159                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         9255                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         5020                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        18444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2053                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         8173                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        22532                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         12310                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           36                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2053                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            5                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            7      0.06%      0.06% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.05%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12268     99.88%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12283                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.05%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12268     99.95%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12274                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.969288                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.942790                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           12      0.05%      0.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            9      0.04%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.01%      0.12% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        22505     99.88%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           17     62.96%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2      7.41%     70.37% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            8     29.63%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           27                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           15      0.15%      0.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.05%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10225     99.74%     99.93% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            7      0.07%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10252                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.24%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.76%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2053                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           10     37.04%     37.04% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           17     62.96%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           27                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2053    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2053                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            5                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2053                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2053                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           27                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2053                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2053                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           17     62.96%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2      7.41%     70.37% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            8     29.63%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           27                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.24%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.76%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2053                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           20                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           21                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           19                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           18                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1429                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          619                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          624                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          376                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1400                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        42971                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2048                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.272925                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.617512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        18434     81.82%     81.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2047      9.09%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2047      9.09%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.662547                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.214475                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6152                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4092                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14329                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2049                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            7                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            6                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        69553                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           20                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        19539                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3627                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7490                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2047                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.681514                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        10866                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        12492                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        17952                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         8638                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9537                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3627                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            9                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         24564                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4106                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        20478                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.569585                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.499133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         4106     14.32%     14.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4104     14.31%     28.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4092     14.27%     42.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4091     14.27%     57.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12276     42.82%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            1      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            5                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        73668                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.569515                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12283                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.428427                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2053                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          22532                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8190                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2053                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.905335                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.234580                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6163     27.35%     27.35% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12281     54.50%     81.86% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4088     18.14%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4092                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        49104                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            1                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17384                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7159                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          200                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3609                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3611                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        18472                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        18470                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        12168                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        19410                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.644227                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.626893                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            1                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15342                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          200                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7162                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8204                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4092                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14326                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        61378                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        72617                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        91024                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        60340                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        62396                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            71650                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          104364                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000010                       # Number of seconds simulated (Second)
simTicks                                      9547110                       # Number of ticks simulated (Tick)
finalTick                                    90919323                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.15                       # Real time elapsed on the host (Second)
hostTickRate                                 64297798                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     287368                       # Number of bytes of host memory used (Byte)
simInsts                                        76928                       # Number of instructions simulated (Count)
simOps                                          77950                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   517687                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     524544                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7388                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7388                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7388                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7388                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7388                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7388                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7388                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7388                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         7388                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         7388                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         7388                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         7388                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          157                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          173                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        59104                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        59104                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.037552                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          770                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          769                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            5                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          770                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     1.001300                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        22532                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        21763                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        22532                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        22532                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        20995                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          770                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    27.266234                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.278619                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.721381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997503                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       164594                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       164594                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1025640                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       769230                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1540                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          770                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1650                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1222                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100708                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1394                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          256                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24640                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24640                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            28670                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.662547                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.214475                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           49103                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          23051                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        42971                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        45034                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.804011                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.160973                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        18430     64.28%     64.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         1423      4.96%     69.25% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         5036     17.57%     86.81% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         3612     12.60%     99.41% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4          125      0.44%     99.85% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           44      0.15%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         9960     43.21%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        10993     47.69%     90.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2098      9.10%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        23051                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.804011                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        74773                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        92212                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        18301                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        23051                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         3694                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17384                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7159                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         9397                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         5042                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        18444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2053                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         8173                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        22532                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         12310                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           36                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2053                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            5                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            7      0.06%      0.06% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.05%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12268     99.88%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12283                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.05%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12268     99.95%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12274                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.969288                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.942790                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           12      0.05%      0.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            9      0.04%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.01%      0.12% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        22505     99.88%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           17     62.96%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2      7.41%     70.37% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            8     29.63%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           27                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           15      0.15%      0.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.05%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10225     99.74%     99.93% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            7      0.07%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10252                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.24%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.76%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2053                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           10     37.04%     37.04% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           17     62.96%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           27                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2053    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2053                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            5                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2053                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2053                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           27                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2053                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2053                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           17     62.96%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2      7.41%     70.37% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            8     29.63%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           27                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.24%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.76%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2053                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           20                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           21                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           19                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           18                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1429                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          619                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          624                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          376                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1400                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        42971                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2048                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.272925                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.617512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        18434     81.82%     81.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2047      9.09%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2047      9.09%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.662547                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.214475                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6152                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4092                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14329                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2049                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            7                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            6                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        69553                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           20                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        19358                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3619                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7388                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2047                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.675201                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        10842                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        12438                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        17779                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         8494                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9435                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3619                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            9                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         24564                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4106                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        20478                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.569585                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.499133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         4106     14.32%     14.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4104     14.31%     28.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4092     14.27%     42.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4091     14.27%     57.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12276     42.82%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            1      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            5                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        73668                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.569515                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12283                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.428427                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2053                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          22532                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8190                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2053                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.905335                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.234580                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6163     27.35%     27.35% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12281     54.50%     81.86% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4088     18.14%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4092                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        49104                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            1                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17384                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7159                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          137                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3605                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3607                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        18302                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        18301                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        12042                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        19268                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.638333                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.624974                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15342                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          137                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7162                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8204                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4092                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14326                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        61378                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        72617                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        91024                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        60340                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        62396                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            71650                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          104364                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000010                       # Number of seconds simulated (Second)
simTicks                                      9547110                       # Number of ticks simulated (Tick)
finalTick                                   100484415                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.17                       # Real time elapsed on the host (Second)
hostTickRate                                 57116132                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     298632                       # Number of bytes of host memory used (Byte)
simInsts                                        83089                       # Number of instructions simulated (Count)
simOps                                          84111                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   496669                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     502758                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7255                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7255                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7255                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7255                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7255                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7255                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7255                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7255                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         7255                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         7255                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         7255                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         7255                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1          157                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1          163                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2           10                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        58040                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        58040                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.037552                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          770                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          769                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            5                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          770                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     1.001300                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        22532                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        21763                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        22532                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        22532                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        20995                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          770                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    27.266234                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.278619                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.721381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997503                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       164594                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       164594                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1025640                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       769230                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1540                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          770                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1650                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1222                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100708                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1371                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::2           23                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          242                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::2           14                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24640                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24640                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              2                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 614640.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       112290                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3571680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      4298610                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   450.252485                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9305092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       260000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            28670                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.662547                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.214475                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           49103                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          22743                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        42971                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        45308                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.793268                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.142681                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        18430     64.28%     64.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         1492      5.20%     69.49% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         5084     17.73%     87.22% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         3590     12.52%     99.74% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4           57      0.20%     99.94% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           17      0.06%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         9830     43.22%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        10848     47.70%     90.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2065      9.08%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        22743                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.793268                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        74157                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        92130                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        18077                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        22743                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         3627                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17384                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7159                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         9584                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         5082                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        18444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2053                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         8173                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        22532                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         12310                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           36                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2053                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            5                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            7      0.06%      0.06% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.05%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12268     99.88%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12283                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.05%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12268     99.95%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12274                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.969288                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.942790                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           12      0.05%      0.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            9      0.04%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.01%      0.12% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        22505     99.88%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           17     62.96%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2      7.41%     70.37% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            8     29.63%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           27                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           15      0.15%      0.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.05%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10225     99.74%     99.93% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            7      0.07%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10252                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.24%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.76%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2053                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           10     37.04%     37.04% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           17     62.96%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           27                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2053    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2053                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            5                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2053                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2053                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           27                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2053                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2053                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           17     62.96%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2      7.41%     70.37% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            8     29.63%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           27                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.24%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.76%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2053                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           20                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           21                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           19                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           18                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1429                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          619                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          624                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          376                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1400                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        42971                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2048                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.272925                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.617512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        18434     81.82%     81.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2047      9.09%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2047      9.09%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.662547                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.214475                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6152                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4092                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14329                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2049                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            7                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            6                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        69553                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           20                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        19117                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3605                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7255                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2047                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.666795                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        10800                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        12354                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        17552                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         8312                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9302                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3605                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            9                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         24564                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4106                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        20478                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.569585                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.499133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         4106     14.32%     14.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4104     14.31%     28.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4092     14.27%     42.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4091     14.27%     57.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12276     42.82%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            1      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            5                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        73668                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.569515                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12283                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.428427                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2053                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          22532                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8190                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2053                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.905335                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.234580                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6163     27.35%     27.35% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12281     54.50%     81.86% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4088     18.14%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4092                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        49104                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            1                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17384                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7159                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents           55                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3596                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3598                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        18078                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        18077                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        11879                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        19077                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.630520                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.622687                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15342                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation           55                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7162                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8204                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4092                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14326                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        61378                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        72617                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        91024                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        60340                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        62396                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            71650                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          104364                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000010                       # Number of seconds simulated (Second)
simTicks                                      9547110                       # Number of ticks simulated (Tick)
finalTick                                   110049507                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.15                       # Real time elapsed on the host (Second)
hostTickRate                                 65633833                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     309896                       # Number of bytes of host memory used (Byte)
simInsts                                        89250                       # Number of instructions simulated (Count)
simOps                                          90272                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   613160                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     620157                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7163                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7163                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7163                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7163                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7163                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7163                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7163                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7163                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         7163                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         7163                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         7163                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         7163                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse          330                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data          173                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.337891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.644531                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          173                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           82                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2           75                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1           15                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          158                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.337891                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        57304                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        57304                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        20477                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        20477                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total            1                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total            1                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        20478                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        20478                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.000049                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.000049                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          770                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          769                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      3079582                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.037552                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  4004.657997                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          770                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          769                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      3079582                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  4004.657997                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        20477                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total            1                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        20478                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.000049                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total            1                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          769                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            5                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          770                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     1.001300                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage            1                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        22532                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        21763                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        22532                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          769                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        22532                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        20995                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs          770                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    27.266234                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     1.278619                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   510.721381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.002497                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.997503                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       164594                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       164594                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          770                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2310                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total        98560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          770    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          770                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1025640                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       769230                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1540                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          770                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          770                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          770                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          770                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          770                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          770                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          770                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses            0                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage          nan                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse         1650                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst           94                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data          162                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher         1222                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005737                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009888                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074585                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100708                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1394                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1          850                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::2          544                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1           10                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::2          246                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.085083                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.015625                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        24640                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        24640                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.priorityMinLatency 0.000000000000                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000000000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState              4                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                      0                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                    0                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys                  0                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys           0.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                        0                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                      nan                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.dram.readBursts               0                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat                  0                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat                0                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat             0                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat                nan                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat              nan                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat           nan                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits              0                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate          nan                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesRead                0                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW                  0                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate            nan                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       224580                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      3477120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      4930980                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   516.489283                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      9045092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy            0                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy            0                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy            0                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       224580                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3477120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      4930980                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   516.489283                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9045092                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            28670                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.662547                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.214475                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           49103                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded            1                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          22526                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        42971                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        45512                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.numIssuedDist::samples        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.785699                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.129813                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        18430     64.28%     64.28% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         1544      5.39%     69.67% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         5112     17.83%     87.50% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         3580     12.49%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            2      0.01%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            2      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        28670                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            0      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu         9737     43.23%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     43.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        10742     47.69%     90.91% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2047      9.09%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        22526                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.785699                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        73723                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        92075                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        17922                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        22526                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         3582                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17384                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7159                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         9710                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         5112                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        18444                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2053                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         8173                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        22532                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         12310                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches           36                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2053                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            0                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode            5                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2048                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return            7      0.06%      0.06% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect            6      0.05%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect            0      0.00%      0.11% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12268     99.88%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            0      0.00%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12283                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect            6      0.05%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect            0      0.00%      0.05% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12268     99.95%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            0      0.00%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12274                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.969288                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     0.942790                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           12      0.05%      0.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7            9      0.04%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15            0      0.00%      0.09% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19            2      0.01%      0.10% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23            1      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27            0      0.00%      0.11% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31            3      0.01%      0.12% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        22505     99.88%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        22532                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           17     62.96%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            0      0.00%     62.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond            2      7.41%     70.37% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond            8     29.63%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total           27                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           15      0.15%      0.15% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect            5      0.05%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            0      0.00%      0.20% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10225     99.74%     99.93% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond            7      0.07%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10252                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect            5      0.24%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            0      0.00%      0.24% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2048     99.76%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2053                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return            1      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect            1      0.05%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            0      0.00%      0.10% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2048     99.90%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2050                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect            1      0.05%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            0      0.00%      0.05% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2048     99.95%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2049                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            0      0.00%      0.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB           10     37.04%     37.04% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           17     62.96%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total           27                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2053    100.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2053                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            5    100.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            5                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted            2                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken            2                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2053                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2053                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2050                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits           27                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2053                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2053                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            0                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups           27                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           17     62.96%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            0      0.00%     62.96% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond            2      7.41%     70.37% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond            8     29.63%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total           27                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return            1      0.05%      0.05% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect            1      0.05%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            0      0.00%      0.10% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2048     99.90%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2050                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect            5      0.24%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            0      0.00%      0.24% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2048     99.76%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2053                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2049                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2049                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes           20                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops           21                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes           19                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used           18                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1429                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          619                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong            0                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          624                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          376                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            8                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1400                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        42971                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            1                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2048                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.272925                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.617512                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        18434     81.82%     81.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2047      9.09%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2047      9.09%     99.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5            1      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            5                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        22530                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            0                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls            1                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            0      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4101     66.69%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2048     33.31%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6149                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            0                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6149                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6149                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6149                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6149                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.662547                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.214475                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2048                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4101                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2048                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4101     66.69%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2048     33.31%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6149                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2050                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2049                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2048                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl            2                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn            1                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6152                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4092                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14329                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2049                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2048                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved            7                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred            6                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        69553                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts           20                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        18945                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3587                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7163                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2047                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.660795                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        10746                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        12276                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        17398                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         8201                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9210                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3587                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches            9                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         24564                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4106                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        20478                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.nisnDist::samples        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.569585                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.499133                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         4106     14.32%     14.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4104     14.31%     28.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4092     14.27%     42.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4091     14.27%     57.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12276     42.82%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5            1      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            5                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        28670                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        73668                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.569515                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12283                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.428427                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2053                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          22532                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8190                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2053                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.905335                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.234580                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6163     27.35%     27.35% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12281     54.50%     81.86% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4088     18.14%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        22532                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2048                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4092                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            0                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        49104                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            1                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17384                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7159                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts            1                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            0                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect            2                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3581                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3583                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        17923                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        17922                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        11768                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        18930                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.625113                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.621659                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            0                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15342                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            0                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7162                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2048    100.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2048                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON      9565092                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2048                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8204                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4092                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14326                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.renamedInsts        61378                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.renamedOperands        72617                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        91024                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        60340                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10244                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        62396                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts            0                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            71650                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          104364                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6149                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6149                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000011                       # Number of seconds simulated (Second)
simTicks                                     10538451                       # Number of ticks simulated (Tick)
finalTick                                   111040848                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.20                       # Real time elapsed on the host (Second)
hostTickRate                                 53165805                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                     310920                       # Number of bytes of host memory used (Byte)
simInsts                                        89749                       # Number of instructions simulated (Count)
simOps                                          90859                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   452560                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     458145                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dcache.demandHits::processor.cores.core.data         7391                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.demandHits::total         7391                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.dcache.overallHits::processor.cores.core.data         7391                       # number of overall hits (Count)
board.cache_hierarchy.dcache.overallHits::total         7391                       # number of overall hits (Count)
board.cache_hierarchy.dcache.demandMisses::processor.cores.core.data           22                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.demandMisses::total           22                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.dcache.overallMisses::processor.cores.core.data           22                       # number of overall misses (Count)
board.cache_hierarchy.dcache.overallMisses::total           22                       # number of overall misses (Count)
board.cache_hierarchy.dcache.demandMissLatency::processor.cores.core.data      1285047                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.demandMissLatency::total      1285047                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::processor.cores.core.data      1285047                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.overallMissLatency::total      1285047                       # number of overall miss ticks (Tick)
board.cache_hierarchy.dcache.demandAccesses::processor.cores.core.data         7413                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandAccesses::total         7413                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::processor.cores.core.data         7413                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.overallAccesses::total         7413                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.dcache.demandMissRate::processor.cores.core.data     0.002968                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMissRate::total     0.002968                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::processor.cores.core.data     0.002968                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMissRate::total     0.002968                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMissLatency::processor.cores.core.data 58411.227273                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMissLatency::total 58411.227273                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::processor.cores.core.data 58411.227273                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMissLatency::total 58411.227273                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dcache.writebacks::writebacks            1                       # number of writebacks (Count)
board.cache_hierarchy.dcache.writebacks::total            1                       # number of writebacks (Count)
board.cache_hierarchy.dcache.demandMshrHits::processor.cores.core.data            4                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrHits::total            4                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::processor.cores.core.data            4                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.overallMshrHits::total            4                       # number of overall MSHR hits (Count)
board.cache_hierarchy.dcache.demandMshrMisses::processor.cores.core.data           18                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMisses::total           18                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::processor.cores.core.data           18                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.overallMshrMisses::total           18                       # number of overall MSHR misses (Count)
board.cache_hierarchy.dcache.demandMshrMissLatency::processor.cores.core.data      1138194                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissLatency::total      1138194                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::processor.cores.core.data      1138194                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.overallMshrMissLatency::total      1138194                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.demandMshrMissRate::processor.cores.core.data     0.002428                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.demandMshrMissRate::total     0.002428                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::processor.cores.core.data     0.002428                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.overallMshrMissRate::total     0.002428                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::processor.cores.core.data        63233                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.demandAvgMshrMissLatency::total        63233                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::processor.cores.core.data        63233                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.overallAvgMshrMissLatency::total        63233                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.replacements            1                       # number of replacements (Count)
board.cache_hierarchy.dcache.ReadReq.hits::processor.cores.core.data         7295                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.hits::total         7295                       # number of ReadReq hits (Count)
board.cache_hierarchy.dcache.ReadReq.misses::processor.cores.core.data           22                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.misses::total           22                       # number of ReadReq misses (Count)
board.cache_hierarchy.dcache.ReadReq.missLatency::processor.cores.core.data      1285047                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.missLatency::total      1285047                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.accesses::processor.cores.core.data         7317                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.accesses::total         7317                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.ReadReq.missRate::processor.cores.core.data     0.003007                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.missRate::total     0.003007                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::processor.cores.core.data 58411.227273                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMissLatency::total 58411.227273                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.mshrHits::processor.cores.core.data            4                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrHits::total            4                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::processor.cores.core.data           18                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMisses::total           18                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::processor.cores.core.data      1138194                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissLatency::total      1138194                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.002460                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.mshrMissRate::total     0.002460                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data        63233                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.ReadReq.avgMshrMissLatency::total        63233                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.dcache.SwapReq.hits::processor.cores.core.data            8                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.hits::total            8                       # number of SwapReq hits (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::processor.cores.core.data            8                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.SwapReq.accesses::total            8                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.hits::processor.cores.core.data           96                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.hits::total           96                       # number of WriteReq hits (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::processor.cores.core.data           96                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.WriteReq.accesses::total           96                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.dcache.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.prefetcher.demandMshrMisses           18                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.dcache.prefetcher.pfIssued            4                       # number of hwpf issued (Count)
board.cache_hierarchy.dcache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.dcache.prefetcher.accuracy            0                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInCache            4                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.dcache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.dcache.prefetcher.pfLate            4                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.dcache.prefetcher.pfIdentified            4                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.dcache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.dcache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.dcache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.dcache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.dcache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dcache.tags.tagsInUse   330.462984                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dcache.tags.totalRefs        84227                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.sampledRefs          348                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dcache.tags.avgRefs   242.031609                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dcache.tags.occupancies::cache_hierarchy.dcache.prefetcher          157                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.occupancies::processor.cores.core.data   173.462984                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.306641                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::processor.cores.core.data     0.338795                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.avgOccs::total     0.645436                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1022          157                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.occupanciesTaskId::1024          190                       # Occupied blocks per task id (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::1           49                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1022::2          108                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::0           18                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::1           10                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ageTaskId_1024::2          162                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1022     0.306641                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.ratioOccsTaskId::1024     0.371094                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.dcache.tags.tagAccesses        59386                       # Number of tag accesses (Count)
board.cache_hierarchy.dcache.tags.dataAccesses        59386                       # Number of data accesses (Count)
board.cache_hierarchy.dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.demandHits::processor.cores.core.inst        21129                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.demandHits::total        21129                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.icache.overallHits::processor.cores.core.inst        21129                       # number of overall hits (Count)
board.cache_hierarchy.icache.overallHits::total        21129                       # number of overall hits (Count)
board.cache_hierarchy.icache.demandMisses::processor.cores.core.inst           42                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.demandMisses::total           42                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.icache.overallMisses::processor.cores.core.inst           42                       # number of overall misses (Count)
board.cache_hierarchy.icache.overallMisses::total           42                       # number of overall misses (Count)
board.cache_hierarchy.icache.demandMissLatency::processor.cores.core.inst      1019646                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.demandMissLatency::total      1019646                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::processor.cores.core.inst      1019646                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.overallMissLatency::total      1019646                       # number of overall miss ticks (Tick)
board.cache_hierarchy.icache.demandAccesses::processor.cores.core.inst        21171                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.demandAccesses::total        21171                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::processor.cores.core.inst        21171                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.overallAccesses::total        21171                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.icache.demandMissRate::processor.cores.core.inst     0.001984                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMissRate::total     0.001984                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::processor.cores.core.inst     0.001984                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMissRate::total     0.001984                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMissLatency::processor.cores.core.inst 24277.285714                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMissLatency::total 24277.285714                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::processor.cores.core.inst 24277.285714                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMissLatency::total 24277.285714                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.icache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.icache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.icache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.icache.writebacks::writebacks          880                       # number of writebacks (Count)
board.cache_hierarchy.icache.writebacks::total          880                       # number of writebacks (Count)
board.cache_hierarchy.icache.demandMshrHits::processor.cores.core.inst           21                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrHits::total           21                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::processor.cores.core.inst           21                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.overallMshrHits::total           21                       # number of overall MSHR hits (Count)
board.cache_hierarchy.icache.demandMshrMisses::processor.cores.core.inst           21                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMisses::total           21                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::processor.cores.core.inst           21                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::cache_hierarchy.icache.prefetcher          863                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.overallMshrMisses::total          884                       # number of overall MSHR misses (Count)
board.cache_hierarchy.icache.demandMshrMissLatency::processor.cores.core.inst       594405                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissLatency::total       594405                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::processor.cores.core.inst       594405                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      6803104                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.overallMshrMissLatency::total      7397509                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.icache.demandMshrMissRate::processor.cores.core.inst     0.000992                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.demandMshrMissRate::total     0.000992                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::processor.cores.core.inst     0.000992                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.overallMshrMissRate::total     0.041755                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.icache.demandAvgMshrMissLatency::processor.cores.core.inst        28305                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.demandAvgMshrMissLatency::total        28305                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::processor.cores.core.inst        28305                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher  7883.086906                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.overallAvgMshrMissLatency::total  8368.222851                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.replacements          880                       # number of replacements (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::cache_hierarchy.icache.prefetcher          863                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMisses::total          863                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      6803104                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissLatency::total      6803104                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::cache_hierarchy.icache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher  7883.086906                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.HardPFReq.avgMshrMissLatency::total  7883.086906                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.hits::processor.cores.core.inst        21129                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.hits::total        21129                       # number of ReadReq hits (Count)
board.cache_hierarchy.icache.ReadReq.misses::processor.cores.core.inst           42                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.misses::total           42                       # number of ReadReq misses (Count)
board.cache_hierarchy.icache.ReadReq.missLatency::processor.cores.core.inst      1019646                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.missLatency::total      1019646                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.accesses::processor.cores.core.inst        21171                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.accesses::total        21171                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.icache.ReadReq.missRate::processor.cores.core.inst     0.001984                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.missRate::total     0.001984                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMissLatency::processor.cores.core.inst 24277.285714                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMissLatency::total 24277.285714                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.mshrHits::processor.cores.core.inst           21                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrHits::total           21                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::processor.cores.core.inst           21                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMisses::total           21                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::processor.cores.core.inst       594405                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissLatency::total       594405                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000992                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.mshrMissRate::total     0.000992                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst        28305                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.ReadReq.avgMshrMissLatency::total        28305                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.icache.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.prefetcher.demandMshrMisses           21                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.icache.prefetcher.pfIssued          884                       # number of hwpf issued (Count)
board.cache_hierarchy.icache.prefetcher.pfUnused            5                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.icache.prefetcher.pfUseful          799                       # number of useful prefetch (Count)
board.cache_hierarchy.icache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.icache.prefetcher.accuracy     0.903846                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.coverage     0.974390                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInMSHR           21                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.icache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.icache.prefetcher.pfLate           21                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.icache.prefetcher.fdipInsertions            0                       # Number of notifications from an insertion in the FTQ (Count)
board.cache_hierarchy.icache.prefetcher.pfIdentified        23349                       # number of prefetches identified. (Count)
board.cache_hierarchy.icache.prefetcher.pfInCache        22465                       # number of prefetches hit in in cache (Count)
board.cache_hierarchy.icache.prefetcher.pfInCachePrefetched            0                       # number of prefetches hit in cache but prefetched (Count)
board.cache_hierarchy.icache.prefetcher.pfPacketsCreated        23349                       # number of prefetch packets created (Count)
board.cache_hierarchy.icache.prefetcher.pfCandidatesAdded          884                       # Number of perfetch candidates added to the prefetch queue (Count)
board.cache_hierarchy.icache.prefetcher.translationFail            0                       # Number of prefetches that failed translation (Count)
board.cache_hierarchy.icache.prefetcher.translationSuccess        23349                       # Number of prefetches that succeeded translation (Count)
board.cache_hierarchy.icache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.icache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.icache.tags.totalRefs        35803                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.sampledRefs         1392                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.icache.tags.avgRefs    25.720546                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.icache.tags.occupancies::processor.cores.core.inst     2.633427                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.occupancies::cache_hierarchy.icache.prefetcher   509.366573                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.icache.tags.avgOccs::processor.cores.core.inst     0.005143                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.994857                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.icache.tags.occupanciesTaskId::1022          491                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.occupanciesTaskId::1024           21                       # Occupied blocks per task id (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1022::0          491                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ageTaskId_1024::0           21                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1022     0.958984                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.ratioOccsTaskId::1024     0.041016                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.icache.tags.tagAccesses       170248                       # Number of tag accesses (Count)
board.cache_hierarchy.icache.tags.dataAccesses       170248                       # Number of data accesses (Count)
board.cache_hierarchy.icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp          898                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackDirty            1                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean          880                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq          903                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         2645                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.dcache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port           37                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total         2682                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.icache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port       112640                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.dcache.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         1216                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total       113856                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops                  0                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples          903                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean     0.002215                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev     0.047036                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0          901     99.78%     99.78% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1            2      0.22%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total          903                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy      1186462                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy       879120                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer1.occupancy        18314                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests         1784                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests          883                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst           13                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.icache.prefetcher          808                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total          821                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst           13                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.icache.prefetcher          808                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total          821                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.inst            8                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.data           18                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::cache_hierarchy.icache.prefetcher           56                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::total           82                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.inst            8                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.data           18                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::cache_hierarchy.icache.prefetcher           56                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::total           82                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.inst       527139                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.data      1123875                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::cache_hierarchy.icache.prefetcher      3489829                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::total      5140843                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.inst       527139                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.data      1123875                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::cache_hierarchy.icache.prefetcher      3489829                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::total      5140843                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst           21                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.data           18                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.icache.prefetcher          864                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total          903                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst           21                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.data           18                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.icache.prefetcher          864                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total          903                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.inst     0.380952                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.data            1                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::cache_hierarchy.icache.prefetcher     0.064815                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::total     0.090808                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.inst     0.380952                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.data            1                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::cache_hierarchy.icache.prefetcher     0.064815                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::total     0.090808                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.inst 65892.375000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.data 62437.500000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::cache_hierarchy.icache.prefetcher 62318.375000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::total 62693.207317                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.inst 65892.375000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.data 62437.500000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::cache_hierarchy.icache.prefetcher 62318.375000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::total 62693.207317                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.demandMshrHits::processor.cores.core.data            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrHits::total            1                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::processor.cores.core.data            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::total            1                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.inst            8                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.data           17                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::cache_hierarchy.icache.prefetcher           56                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::total           81                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.inst            8                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.data           17                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.icache.prefetcher           56                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::total           81                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.inst       524475                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.data      1075257                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::cache_hierarchy.icache.prefetcher      3473179                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::total      5072911                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.inst       524475                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.data      1075257                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.icache.prefetcher      3473179                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::total      5072911                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.inst     0.380952                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.data     0.944444                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::cache_hierarchy.icache.prefetcher     0.064815                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::total     0.089701                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.inst     0.380952                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.data     0.944444                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.icache.prefetcher     0.064815                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::total     0.089701                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 65559.375000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.data 63250.411765                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 62021.053571                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::total 62628.530864                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 65559.375000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.data 63250.411765                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.icache.prefetcher 62021.053571                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::total 62628.530864                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst           13                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.icache.prefetcher          808                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total          821                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.inst            8                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.data           18                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::cache_hierarchy.icache.prefetcher           56                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::total           82                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.inst       527139                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.data      1123875                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::cache_hierarchy.icache.prefetcher      3489829                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::total      5140843                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst           21                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.data           18                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.icache.prefetcher          864                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total          903                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.inst     0.380952                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.data            1                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::cache_hierarchy.icache.prefetcher     0.064815                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::total     0.090808                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 65892.375000                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 62437.500000                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::cache_hierarchy.icache.prefetcher 62318.375000                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::total 62693.207317                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::processor.cores.core.data            1                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::total            1                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.inst            8                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data           17                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::cache_hierarchy.icache.prefetcher           56                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::total           81                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst       524475                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data      1075257                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::cache_hierarchy.icache.prefetcher      3473179                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::total      5072911                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.380952                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.944444                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::cache_hierarchy.icache.prefetcher     0.064815                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::total     0.089701                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 65559.375000                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 63250.411765                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::cache_hierarchy.icache.prefetcher 62021.053571                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::total 62628.530864                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks          880                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total          880                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks          880                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total          880                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::writebacks            1                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::total            1                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::writebacks            1                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::total            1                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses           81                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued            8                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy            0                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache            8                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate            8                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified            8                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse  1653.265782                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs        16791                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs         1725                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs     9.733913                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.dcache.prefetcher          101                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst    94.440295                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data   162.411510                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.icache.prefetcher  1224.413977                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher           71                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.dcache.prefetcher     0.006165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.005764                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.009913                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.icache.prefetcher     0.074732                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.100907                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022         1444                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024          281                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0           50                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1          817                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::2          577                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::0           25                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1            7                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::2          249                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.088135                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.017151                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses        28619                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses        28619                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp           75                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq           79                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port          154                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::total          154                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total          154                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port         4800                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::total         4800                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total         4800                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples           79                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0           79    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total           79                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy        26319                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy        61776                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests           79                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.mmubus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.mmubus.snoopFanout::samples            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::mean          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::stdev          nan                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::underflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::0            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::overflows            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.snoopFanout::total            0                       # Request fanout histogram (Count)
board.cache_hierarchy.mmubus.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmubus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.mmubus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.mmucache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.mmucache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.mmucache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.mmucache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.mmucache.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.mmucache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.mmucache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.mmucache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.mmucache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.mmucache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.mmucache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.mmucache.tags.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples         8.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples        17.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.icache.prefetcher::samples        54.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000191452                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState            147                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                     79                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                   79                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.43                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6               79                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                 13                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                 15                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                 12                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  9                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  7                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  8                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  5                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys               5056                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         479766903.12456733                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 87135778                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap               1102984.53                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst          512                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data         1088                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.icache.prefetcher         3456                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 48583990.189829602838                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 103240979.153387904167                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.icache.prefetcher 327941933.781349837780                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst            8                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data           17                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.icache.prefetcher           54                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst       306962                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data       614727                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.icache.prefetcher      2188276                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     38370.25                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     36160.41                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.icache.prefetcher     40523.63                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst          512                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data         1088                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.icache.prefetcher         3328                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total         4928                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst          512                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::cache_hierarchy.icache.prefetcher         3328                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total         3840                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst            8                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data           17                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.icache.prefetcher           52                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total           77                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     48583990                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data    103240979                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.icache.prefetcher    315795936                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total    467620906                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     48583990                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::cache_hierarchy.icache.prefetcher    315795936                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total    364379926                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     48583990                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data    103240979                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.icache.prefetcher    315795936                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total    467620906                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts              79                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1           18                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12           24                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13           11                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat            1628715                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat           395000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat       3109965                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           20616.65                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      39366.65                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits             69                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        87.34                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples            4                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean          544                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   400.661652                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   422.916856                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255            1     25.00%     25.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            1     25.00%     50.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            1     25.00%     75.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151            1     25.00%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total            4                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead             5056                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW         479.766903                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               3.75                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           3.75                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          87.34                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy        35700                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy         7590                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy       257040                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy       611040                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy      3532320                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy      5672970                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   538.311560                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      9161309                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT       875124                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy        35700                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy         7590                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy       299880                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy       660060                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      3491040                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy      5723550                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   543.111127                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE      9081056                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT       955377                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles            31647                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               4.759663                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.210099                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded           50232                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           44                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued          23477                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        43559                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        45868                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           26                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples        30399                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.772295                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.130009                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0        19698     64.80%     64.80% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1         1735      5.71%     70.51% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2         5251     17.27%     87.78% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         3655     12.02%     99.80% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4           38      0.13%     99.93% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5           14      0.05%     99.97% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            4      0.01%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            3      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            1      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total        30399                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            3     75.00%     75.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            1     25.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass            8      0.03%      0.03% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu        10368     44.16%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            2      0.01%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     44.20% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead        10917     46.50%     90.71% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite         2182      9.29%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total        23477                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.741840                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   4                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000170                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads        77349                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites        93826                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses        18765                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads           10                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites           10                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            4                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses        23468                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            5                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         3632                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled              10                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles            1248                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads        17608                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores         7330                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads         9789                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores         5172                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.bac.idleCycles            0                       # Number of cycles BAC is idle. (PC invalid) (Cycle)
board.processor.cores.core.bac.runCycles        19197                       # Number of cycles BAC is running (Cycle)
board.processor.cores.core.bac.squashCycles         2169                       # Number of cycles BAC is squashing (Cycle)
board.processor.cores.core.bac.ftqFullCycles         9033                       # Number of cycles BAC has spent waiting for FTQ to become free (Cycle)
board.processor.cores.core.bac.fetchTargets        23406                       # Number of fetch targets created  (Count)
board.processor.cores.core.bac.branches         13039                       # Number of branches that BAC encountered (Count)
board.processor.cores.core.bac.predTakenBranches          387                       # Number of branches that BAC predicted taken. (Count)
board.processor.cores.core.bac.branchesNotLastuOp            0                       # Number of branches that fetch encountered which are not the last uOp within a macrooperation. Jump to itself. (Count)
board.processor.cores.core.bac.branchMisspredict         2168                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.noBranchMisspredict            1                       # Number of branches that BAC has predicted taken (Count)
board.processor.cores.core.bac.squashBranchDecode           63                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.squashBranchCommit         2105                       # Number of branches squashed from decode (Count)
board.processor.cores.core.bac.preDecUpdate::NoBranch            0      0.00%      0.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::Return           77      0.60%      0.60% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallDirect           86      0.67%      1.28% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::CallIndirect           10      0.08%      1.36% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectCond        12542     98.28%     99.64% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::DirectUncond           44      0.34%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectCond            0      0.00%     99.98% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::IndirectUncond            2      0.02%    100.00% # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.preDecUpdate::total        12761                       # Number of branches extracted from the predecoder (Count)
board.processor.cores.core.bac.noHistType::NoBranch            0      0.00%      0.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::Return           43      0.34%      0.34% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallDirect           84      0.66%      1.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::CallIndirect           10      0.08%      1.08% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectCond        12463     98.57%     99.65% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::DirectUncond           42      0.33%     99.98% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectCond            0      0.00%     99.98% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::IndirectUncond            2      0.02%    100.00% # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.noHistType::total        12644                       # Number and type of branches that where undetected by the BPU. (Count)
board.processor.cores.core.bac.typeMissmatch            0                       # Number branches where the branch type miss match (Count)
board.processor.cores.core.bac.multiBranchInst            0                       # Number branches because its not the last branch. (Count)
board.processor.cores.core.bac.ftSizeDist::samples        23406                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::mean    31.784329                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::stdev     2.272743                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::underflows            0      0.00%      0.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::0-3           40      0.17%      0.17% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::4-7           40      0.17%      0.34% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::8-11           48      0.21%      0.55% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::12-15           25      0.11%      0.65% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::16-19           20      0.09%      0.74% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::20-23           35      0.15%      0.89% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::24-27           26      0.11%      1.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::28-31           12      0.05%      1.05% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::32        23160     98.95%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::overflows            0      0.00%    100.00% # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::min_value            0                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::max_value           32                       # Number of bytes per fetch target (Count)
board.processor.cores.core.bac.ftSizeDist::total        23406                       # Number of bytes per fetch target (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return           76     27.34%     27.34% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect           54     19.42%     46.76% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            3      1.08%     47.84% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond          128     46.04%     93.88% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond           17      6.12%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total          278                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return           99      0.92%      0.92% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          119      1.11%      2.03% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect           10      0.09%      2.12% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        10472     97.37%     99.49% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond           53      0.49%     99.98% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.98% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond            2      0.02%    100.00% # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        10755                       # Number of branches that got squashed as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::Return           23      1.06%      1.06% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           53      2.44%      3.51% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            3      0.14%      3.64% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         2079     95.89%     99.54% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           10      0.46%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.corrected_0::total         2168                       # Number of branches that got corrected but not yet commited.  (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return           21      0.97%      0.97% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect           19      0.88%      1.85% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            3      0.14%      1.98% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond         2120     97.79%     99.77% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond            5      0.23%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total         2168                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           20      0.95%      0.95% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           19      0.90%      1.84% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            3      0.14%      1.98% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         2069     97.78%     99.76% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond            5      0.24%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond            0      0.00%    100.00% # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2116                       # Number of committed branches that where mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget            5      1.80%      1.80% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB          197     70.86%     72.66% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS           76     27.34%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            0      0.00%    100.00% # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetProvider_0::total          278                       # Number of targets each provider provided (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2154     99.35%     99.35% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return            3      0.14%     99.49% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect           11      0.51%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2168                       # Number of times the target was incorrect (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0      0.00%      0.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect           53     84.13%     84.13% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0      0.00%     84.13% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0      0.00%     84.13% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond           10     15.87%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0      0.00%    100.00% # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total           63                       # Number of branches that got squashed after decode. (Count)
board.processor.cores.core.branchPred.condPredicted          128                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken          123                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2168                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.incorrect         2168                       # Number of branches incorrect (Count)
board.processor.cores.core.branchPred.BTBLookups          278                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2124                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.correctPFC            0                       # Number of correct PFCs (Count)
board.processor.cores.core.branchPred.BTBHits          278                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     1.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         2153                       # Number BTB misspredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups            3                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses            3                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss            0                       # Number of branches predicted taken but miss in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2165                       # Number branches predicted 'not taken' but turn out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted            3                       # Number branches predicted taken but turn out to be not taken (Count)
board.processor.cores.core.branchPred.BTB.lookups          278                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTB.lookupType::NoBranch            0      0.00%      0.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::Return           76     27.34%     27.34% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallDirect           54     19.42%     46.76% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::CallIndirect            3      1.08%     47.84% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectCond          128     46.04%     93.88% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::DirectUncond           17      6.12%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectCond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::IndirectUncond            0      0.00%    100.00% # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.lookupType::total          278                       # Number of BTB lookups per branch type (Count)
board.processor.cores.core.branchPred.BTB.misses            0                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.BTB.missType::NoBranch            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::Return            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallDirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::CallIndirect            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::DirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectCond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::IndirectUncond            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missType::total            0                       # Number of BTB misses per branch type (Count)
board.processor.cores.core.branchPred.BTB.missRatio     0.000000                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTB.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::Return           21      0.99%      0.99% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallDirect           19      0.89%      1.88% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::CallIndirect            3      0.14%      2.02% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectCond         2076     97.74%     99.76% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::DirectUncond            5      0.24%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.updates::total         2124                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTB.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::Return           12      0.56%      0.56% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallDirect           53      2.46%      3.02% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::CallIndirect            3      0.14%      3.16% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectCond         2075     96.38%     99.54% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::DirectUncond           10      0.46%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.mispredict::total         2153                       # Number of BTB mispredicts (Count)
board.processor.cores.core.branchPred.BTB.evictions         2104                       # Number of BTB evictions (Count)
board.processor.cores.core.branchPred.BTB.accesses::samples         2104                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::0         2092                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::1            5                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::2            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::3            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::4            2                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.accesses::6            1                       # Distribution of accesses (log2) per allocated entry. (Count)
board.processor.cores.core.branchPred.BTB.conflict            0                       # Number of conflicts. Tag hit but PC different. (Ratio)
board.processor.cores.core.branchPred.BTB.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.RAS.pushes          181                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.RAS.pops          179                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.RAS.squashes          159                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.RAS.corrupt            0                       # Number of times the RAS is corrupted during a pop. (Count)
board.processor.cores.core.branchPred.RAS.used          109                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.RAS.correct            1                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.RAS.wrong           20                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.indirectBranchPred.lookups            3                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses            3                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords            3                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords            6                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.loop_predictor.used            0                       # Number of times the loop predictor is the provider. (Count)
board.processor.cores.core.branchPred.loop_predictor.correct            0                       # Number of times the loop predictor is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.loop_predictor.wrong            0                       # Number of times the loop predictor is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderCorrect         1431                       # Number of times TAGE Longest Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderCorrect            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderCorrect          631                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWrong            0                       # Number of times TAGE Longest Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWrong            0                       # Number of times TAGE Alt Match is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalAltMatchProviderWrong            0                       # Number of times TAGE Alt Match is the bimodal and it is the provider and the prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.bimodalProviderWrong           16                       # Number of times there are no hits on the TAGE tables and the bimodal prediction is wrong (Count)
board.processor.cores.core.branchPred.tage.altMatchProviderWouldHaveHit            0                       # Number of times TAGE Longest Match is the provider, the prediction is wrong and Alt Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProviderWouldHaveHit            0                       # Number of times TAGE Alt Match is the provider, the prediction is wrong and Longest Match prediction was correct (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::0            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::1          625                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::2          376                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::3          419                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::4            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::5            9                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::6            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::7            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::8            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::9            1                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::10            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::11            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.longestMatchProvider::12            0                       # TAGE provider for longest match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::0         1402                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::1           29                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::2            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::3            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::4            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::5            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::6            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::7            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::8            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::9            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::10            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::11            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.branchPred.tage.altMatchProvider::12            0                       # TAGE provider for alt match (Count)
board.processor.cores.core.commit.commitSquashedInsts        43564                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls           18                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2104                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples        24146                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.279011                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     0.654952                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0        19787     81.95%     81.95% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1         2165      8.97%     90.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2         2109      8.73%     99.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3           34      0.14%     99.79% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4           27      0.11%     99.90% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5           12      0.05%     99.95% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6            5      0.02%     99.97% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7            2      0.01%     99.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8            5      0.02%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total        24146                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            8                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls           22                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass            8      0.12%      0.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu         4469     66.34%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead         2156     32.00%     98.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite          104      1.54%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total         6737                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples            5                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts         6649                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps         6737                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP         6648                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP         6736                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     4.759663                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.210099                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs         2260                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts         4649                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts         2156                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts           96                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass            8      0.12%      0.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu         4469     66.34%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead         2156     32.00%     98.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite          104      1.54%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total         6737                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl         2168                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl         2144                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl           24                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl         2120                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl           48                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall           22                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn           21                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles         6802                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles         4608                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles        14791                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles         2092                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2106                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved          121                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred           65                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.postFetchCorrection            0                       # Number of times PFC detected a BTB-miss cond-branch with taken hint (Count)
board.processor.cores.core.decode.decodedInsts        71093                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts          194                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts        19847                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            6                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches         3775                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts         7331                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts         2176                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.627137                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads        10845                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites        12378                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads        18219                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites         8783                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs         9507                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads         3754                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites           16                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecPredRegReads            2                       # Number of times the predicate registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegReads           10                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches          114                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles         25481                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         4338                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines        21171                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes           21                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples        30399                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.497089                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.550003                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0         5134     16.89%     16.89% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1         4198     13.81%     30.70% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2         4274     14.06%     44.76% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3         4195     13.80%     58.56% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4        12507     41.14%     99.70% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5           35      0.12%     99.82% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6           29      0.10%     99.91% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7           15      0.05%     99.96% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8           12      0.04%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total        30399                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts        75619                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.389452                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches        12761                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.403229                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles         2749                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.ftq.inserts          23406                       # The number of FTQ insertions (Count)
board.processor.cores.core.ftq.removals          8437                       # The number of FTQ removals. Not including squashes (Count)
board.processor.cores.core.ftq.squashes          2169                       # The number of FTQ squashes (Count)
board.processor.cores.core.ftq.locks                0                       # The number of times the FTQ got locked. (Count)
board.processor.cores.core.ftq.occupancy::samples        23406                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::mean     4.881483                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::stdev     2.238954                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::underflows            0      0.00%      0.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::0-3         6519     27.85%     27.85% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::4-7        12678     54.17%     82.02% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::8         4209     17.98%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::overflows            0      0.00%    100.00% # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::min_value            1                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::max_value            8                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.ftq.occupancy::total        23406                       # Distribution of the FTQ occupation. (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2106                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         4303                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles            3                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts        50282                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts           62                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts        17608                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts         7330                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           44                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            1                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents            1                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect           15                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         3625                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         3640                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit        18807                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount        18769                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst        12112                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst        19476                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.593074                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.621894                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads            1                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        15458                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            0                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation            1                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         7229                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples         2156                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.582560                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     9.725521                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9         2147     99.58%     99.58% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19            1      0.05%     99.63% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49            1      0.05%     99.68% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149            1      0.05%     99.72% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159            2      0.09%     99.81% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169            1      0.05%     99.86% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179            1      0.05%     99.91% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189            1      0.05%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219            1      0.05%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          214                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total         2156                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON     10556433                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2106                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles         8947                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles         4315                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles          279                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles        14736                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles           16                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts        62725                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.IQFullEvents            5                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.renamedOperands        73780                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups        92637                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups        61607                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups           10                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.vecPredLookups            2                       # Number of vector predicate rename lookups (Count)
board.processor.cores.core.rename.committedMaps        10750                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        63059                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing           24                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            8                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts          139                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads            74442                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes          106836                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts         6648                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps         6736                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            1                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
