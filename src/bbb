./arch/sparc/tlb_map.hh:159:           std::cout << std::hex << i->first.va << " " << i->first.size << " " <<
./arch/arm/linux/fs_workload.cc:288:    linux::dumpDmesg(system->threads[0], std::cout);
./arch/arm/matrix.hh:102: *     std::cout << col[i] << std::endl;
./arch/arm/semihosting.cc:351:    std::cout.put(c);
./arch/arm/semihosting.cc:363:    std::cout.write(str.c_str(), str.size());
./sim/port.test.cc:232:    old = std::cout.rdbuf(buffer.rdbuf());
./sim/port.test.cc:236:    std::cout << port << std::endl;
./sim/port.test.cc:240:    std::cout.rdbuf(old);
./sim/core.cc:158:    std::cout.flush();
./base/inifile.cc:337:        std::cout << sectionName << ": " << (*ei).first << " => "
./base/cprintf.hh:157:    ccprintf(std::cout, format, args...);
./base/cprintf.hh:182:    ccprintf(std::cout, format.c_str(), args...);
./base/output.cc:112:OutputStream OutputDirectory::stdout("stdout", &std::cout);
./base/debug.hh:163:void dumpDebugFlags(std::ostream &os=std::cout);
./base/trace.hh:116:     *  way, or just set to one of std::cout, std::cerr */
./base/trie.hh:388:    dump(const char *title, std::ostream &os=std::cout)
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTTarget_ext.h:71:        std::cout << name() << ": ERROR, extension not present" << std::endl;
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTTarget_ext.h:75:        std::cout << name() << ": OK, extension data = "
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTTarget_ext.h:83:      std::cout << name() << ": Received write request: A = 0x"
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTTarget_ext.h:92:      std::cout << name() << ": Received read request: A = 0x"
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTTarget_ext.h:147:        std::cout << name() << ": get_direct_mem_ptr OK, extension data = "
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTTarget_ext.h:152:          std::cout << name() << ", get_direct_mem_ptr ERROR: "
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:102:          std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:110:          std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:120:          std::cout << name() << ": Received error response @ "
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:125:          std::cout << name() <<  ": Received ok response";
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:127:              std::cout << ": D = 0x" << std::hex << mData << std::dec;
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:129:          std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:265:          std::cout <<  name() << ": got DMI pointer invalidation"
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:270:          std::cout <<  name() << ": ignored DMI invalidation for addresses "
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:282:      std::cout <<  name() << ", <<SimpleLTInitiator1>>:" << std::endl
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:294:      std::cout << "Mem @" << std::hex << mBaseAddress << std::endl;
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:315:                  std::cout << std::setw(2) << std::setfill('0')
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:320:                      std::cout << std::endl;
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:322:                      std::cout << " ";
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:329:          std::cout << "OK: debug transaction didn't give data." << std::endl;
./systemc/tests/tlm/static_extensions/ext2gp2ext/SimpleLTInitiator_ext.h:331:      std::cout << std::dec << std::endl;  
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:102:          std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:110:          std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:120:          std::cout << name() << ": Received error response @ "
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:125:          std::cout << name() <<  ": Received ok response";
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:127:              std::cout << ": D = 0x" << std::hex << mData << std::dec;
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:129:          std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:265:          std::cout <<  name() << ": got DMI pointer invalidation"
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:270:          std::cout <<  name() << ": ignored DMI invalidation for addresses "
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:282:      std::cout <<  name() << ", <<SimpleLTInitiator1>>:" << std::endl
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:294:      std::cout << "Mem @" << std::hex << mBaseAddress << std::endl;
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:315:                  std::cout << std::setw(2) << std::setfill('0')
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:320:                      std::cout << std::endl;
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:322:                      std::cout << " ";
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:329:          std::cout << "OK: debug transaction didn't give data." << std::endl;
./systemc/tests/tlm/static_extensions/ext2gp/SimpleLTInitiator_ext.h:331:      std::cout << std::dec << std::endl;  
./systemc/tests/tlm/static_extensions/gp2ext/SimpleLTTarget_ext.h:71:        std::cout << name() << ": ERROR, extension not present" << std::endl;
./systemc/tests/tlm/static_extensions/gp2ext/SimpleLTTarget_ext.h:75:        std::cout << name() << ": OK, extension data = "
./systemc/tests/tlm/static_extensions/gp2ext/SimpleLTTarget_ext.h:83:      std::cout << name() << ": Received write request: A = 0x"
./systemc/tests/tlm/static_extensions/gp2ext/SimpleLTTarget_ext.h:92:      std::cout << name() << ": Received read request: A = 0x"
./systemc/tests/tlm/static_extensions/gp2ext/SimpleLTTarget_ext.h:147:        std::cout << name() << ": get_direct_mem_ptr OK, extension data = "
./systemc/tests/tlm/static_extensions/gp2ext/SimpleLTTarget_ext.h:152:          std::cout << name() << ", get_direct_mem_ptr ERROR: "
./systemc/tests/tlm/bugs/multi_passthrough_sockets_bug/multi_passthrough_sockets_bug.cpp:93:      std::cout << "Received successfully introspection extension!" << std::endl;
./systemc/tests/tlm/multi_sockets/simpleAddressMap.h:56:    std::cout<<"Address check successful."<<std::endl;
./systemc/tests/tlm/multi_sockets/simpleAddressMap.h:67:    std::cout<<"SimpleAddressMap: printing the sorted MAP:"<<std::endl;
./systemc/tests/tlm/multi_sockets/MultiSocketSimpleSwitchAT.h:230:      std::cout << "ERROR: '" << name()
./systemc/tests/tlm/multi_sockets/MultiSocketSimpleSwitchAT.h:325:    std::cout<<"At "<<sc_core::sc_time_stamp()<<" status of "<<name()<<" is "<<std::endl
./systemc/tests/tlm/multi_sockets/MultiSocketSimpleSwitchAT.h:330:      std::cout<<"    "<<m_pendingReqs[i].size()<<" pending requests for target number "<<i<<std::endl;
./systemc/tests/tlm/multi_sockets/MultiSocketSimpleSwitchAT.h:331:    std::cout<<"  Pending responses:"<<std::endl;
./systemc/tests/tlm/multi_sockets/MultiSocketSimpleSwitchAT.h:333:      std::cout<<"    "<<m_pendingResps[i].size()<<" pending responses for initiator number "<<i<<std::endl;
./systemc/tests/tlm/multi_sockets/MultiSocketSimpleSwitchAT.h:334:    std::cout<<"  The address map is:"<<std::endl;
./systemc/tests/systemc/kernel/sc_time/test19/test19.cpp:35:    std::cout << t.to_string() << ", value=" << t.value() << std::endl;
./systemc/tests/systemc/kernel/sc_time/test19/test19.cpp:36:    std::cout << "  ";
./systemc/tests/systemc/kernel/sc_time/test19/test19.cpp:38:        std::cout << "t.value=" << tp.value();
./systemc/tests/systemc/kernel/sc_time/test19/test19.cpp:40:        std::cout << "t.double=" << tp.to_double();
./systemc/tests/systemc/kernel/sc_time/test19/test19.cpp:41:    std::cout << ", t.unit="  << tp.unit_symbol()
./systemc/tests/systemc/kernel/sc_time/test19/test19.cpp:71:        std::cout << "\nResolution = " << sc_get_time_resolution() << std::endl;
./systemc/tests/systemc/kernel/process_control/test06/test06.cpp:45:    std::cout << sc_get_current_process_handle().name()
./systemc/tests/systemc/kernel/process_control/test06/test06.cpp:58:          std::cout
./systemc/tests/systemc/kernel/process_control/test06/test06.cpp:70:      std::cout << sc_get_current_process_handle().name()
./systemc/tests/systemc/kernel/process_control/test06/test06.cpp:75:    std::cout << sc_get_current_process_handle().name()
./systemc/tests/systemc/kernel/process_control/test06/test06.cpp:99:      std::cout << h.name() << " "
./systemc/tests/systemc/kernel/process_control/test06/test06.cpp:110:    std::cout << sc_get_current_process_handle().name()
./systemc/tests/systemc/kernel/process_control/test07/test07.cpp:49:    std::cout << "------ " << "(" << sc_time_stamp() << ")" << " ------"
./systemc/tests/systemc/kernel/process_control/test07/test07.cpp:55:    std::cout << std::string( level + 1, ' ' )
./systemc/tests/systemc/kernel/process_control/test07/test07.cpp:60:    std::cout << ( h.valid() // is it a process? -> print state
./systemc/tests/systemc/kernel/process_control/test07/test07.cpp:69:    std::cout << "---------------------- " << std::endl;
./systemc/tests/systemc/kernel/process_control/test07/test07.cpp:76:    std::cout << "+++ " << this->name() << " deleted" << std::endl;
./systemc/tests/systemc/kernel/process_control/test07/test07.cpp:158:      std::cout << "+++ kills sent ... "
./systemc/tests/systemc/kernel/process_control/test07/test07.cpp:175:    std::cout
./systemc/tests/systemc/kernel/process_control/test07/test07.cpp:184:    std::cout
./systemc/tests/systemc/kernel/sc_event/test15/event_triggered.cpp:153:        std::cout << events[i].basename() << " ";
./systemc/tests/systemc/kernel/phase_callbacks/test05/simulation_callbacks.cpp:111:      std::cout << name()
./systemc/tests/systemc/kernel/phase_callbacks/test05/simulation_callbacks.cpp:128:      std::cout << name()
./systemc/tests/systemc/kernel/phase_callbacks/test05/simulation_callbacks.cpp:209:    std::cout
./systemc/tests/systemc/kernel/phase_callbacks/test05/simulation_callbacks.cpp:237:    std::cout << timer.to_seconds() << std::endl;
./systemc/tests/systemc/kernel/phase_callbacks/test04/register_phase_callbacks.cpp:98:    std::cout
./systemc/tests/systemc/kernel/phase_callbacks/test04/register_phase_callbacks.cpp:114:    std::cout
./systemc/tests/systemc/kernel/phase_callbacks/test04/register_phase_callbacks.cpp:134:      std::cout << name()
./systemc/tests/systemc/kernel/phase_callbacks/test04/register_phase_callbacks.cpp:167:      std::cout << name()
./systemc/tests/systemc/kernel/phase_callbacks/test03/test03.cpp:40:    std::cout << this->name() \
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:31:        std::cout << "construct" << std::endl;
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:34:        std::cout << "destruct" << std::endl;
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:37:        std::cout << "read" << std::endl;
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:40:        std::cout << "write" << std::endl;
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:46:    std::cout << std::endl;
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:47:    std::cout << name << std::endl;
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:52:    std::cout << "to_short  "; value.to_short();
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:53:    std::cout << "to_ushort "; value.to_ushort();
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:54:    std::cout << "to_int    "; value.to_int();
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:55:    std::cout << "to_uint   "; value.to_uint();
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:56:    std::cout << "to_long   "; value.to_long();
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:57:    std::cout << "to_ulong  "; value.to_ulong();
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:58:    std::cout << "to_int64  "; value.to_int64();
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:59:    std::cout << "to_uint64 "; value.to_uint64();
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:60:    std::cout << "to_float  "; value.to_float();
./systemc/tests/systemc/datatypes/fx/observers/observers.cpp:61:    std::cout << "to_double "; value.to_double();
./systemc/tests/systemc/tmp/others/OLD_kill_reset/OLD_kill_reset.cpp:6:using std::cout;
./systemc/tests/systemc/tmp/others/kill_reset/kill_reset.cpp:6:using std::cout;
./systemc/tests/systemc/tmp/others/method_suspends_itself/method_suspends_itself.cpp:6:using std::cout;
./systemc/tests/systemc/tmp/others/sync_reset/sync_reset.cpp:6:using std::cout;
./systemc/tests/systemc/tmp/others/bogus_reset/bogus_reset.cpp:6:using std::cout;
./systemc/tests/systemc/tmp/others/sc_writer_bug/sc_writer_bug.cpp:8:using std::cout;
./systemc/tests/systemc/tmp/others/OLD_sc_start_starvation/OLD_sc_start_starvation.cpp:6:using std::cout;
./systemc/tests/systemc/tmp/others/priority_bug/priority_bug.cpp:4:using std::cout;
./systemc/tests/systemc/tmp/others/is_unwinding_bug/is_unwinding_bug.cpp:8:using std::cout;
./systemc/tests/systemc/tmp/others/sc_start_starvation/sc_start_starvation.cpp:8:using std::cout;
./systemc/tests/systemc/tmp/compliance_1666_2011/section_6.6/test05/test05.cpp:41:using std::cout;
./systemc/tests/systemc/tmp/compliance_1666_2011/section_6.6/test04/test04.cpp:39:using std::cout;
./systemc/tests/systemc/tmp/compliance_1666_2011/section_6.6/test02/test02.cpp:46:using std::cout;
./systemc/tests/systemc/tmp/compliance_1666_2011/section_6.6/test03/test03.cpp:39:using std::cout;
./systemc/tests/systemc/tmp/compliance_1666_2011/section_6.6/test01/test01.cpp:42:using std::cout;
./systemc/tests/systemc/tmp/compliance_1666_2011/section_5.3.4.2/test01/test01.cpp:39:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/method_with_reset/method_with_reset.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/self_reset_bug/self_reset_bug.cpp:34:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/kill_reset/kill_reset.cpp:36:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/async_reset/async_reset.cpp:37:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/method_suspends_itself/method_suspends_itself.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/sc_start_bug/sc_start_bug.cpp:31:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/proc_ctrl_immed/proc_ctrl_immed.cpp:41:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/proc_ctrl_priority/proc_ctrl_priority.cpp:41:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/proc_ctrl_timeout/proc_ctrl_timeout.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/proc_ctrl/proc_ctrl.cpp:47:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/stepwise_simulation/stepwise_simulation.cpp:62:    std::cout << "`" << sc_get_current_process_handle().name()
./systemc/tests/systemc/1666-2011-compliance/stepwise_simulation/stepwise_simulation.cpp:82:    std::cout
./systemc/tests/systemc/1666-2011-compliance/stepwise_simulation/stepwise_simulation.cpp:90:      std::cout << "   --- No-op start (warning) - ";
./systemc/tests/systemc/1666-2011-compliance/stepwise_simulation/stepwise_simulation.cpp:105:    std::cout
./systemc/tests/systemc/1666-2011-compliance/stepwise_simulation/stepwise_simulation.cpp:163:  std::cout << "Success" << std::endl;
./systemc/tests/systemc/1666-2011-compliance/sc_pause/sc_pause.cpp:37:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/sync_reset/sync_reset.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/sc_writer_policy/sc_writer_policy.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/sc_vector/sc_vector.cpp:41:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/overkill_bug/overkill_bug.cpp:34:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/sc_delta_count/sc_delta_count.cpp:37:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/throw_it/throw_it.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/suspend_resume/suspend_resume.cpp:36:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/old_event_bug/old_event_bug.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/immed_self_notif/immed_self_notif.cpp:37:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/living_children/living_children.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/sc_verbosity/sc_verbosity.cpp:35:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/mixed_child_procs/mixed_child_procs.cpp:39:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/include_descendants/include_descendants.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/named_events/named_events.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/child_proc_control/child_proc_control.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/sc_process_handle_less_than/sc_process_handle_less_than.cpp:39:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/recursive_kill_bug/recursive_kill_bug.cpp:34:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/event_list/event_list.cpp:39:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/async_reset_port/async_reset_port.cpp:37:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/version_macros/version_macros.cpp:42:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/virtual_bind/virtual_bind.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/sc_start_starvation/sc_start_starvation.cpp:38:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/living_dead_bug/living_dead_bug.cpp:34:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/odds_and_ends/odds_and_ends.cpp:37:using std::cout;
./systemc/tests/systemc/1666-2011-compliance/late_reset_bug/late_reset_bug.cpp:34:using std::cout;
./systemc/tests/systemc/misc/systemc_header/test01/test01.cpp:65:		std::cout << "x: Hello World" << std::endl;
./systemc/tests/systemc/misc/systemc_header/test01/test01.cpp:72:		    std::cout << "y: Hello World" << std::endl;
./systemc/tests/systemc/misc/systemc_header/test01/test01.cpp:80:		    std::cout << "z: Hello World" << std::endl;
./systemc/tests/systemc/bugs/instantiation_detection/instantiation_detection.cpp:48:      std::cout << "\n" << x.what() << std::endl;
./systemc/tests/systemc/bugs/instantiation_detection/instantiation_detection.cpp:74:      std::cout << "\n" << x.what() << std::endl;
./systemc/tests/systemc/bugs/instantiation_detection/instantiation_detection.cpp:80:      std::cout << "\n" << x.what() << std::endl;
./systemc/tests/systemc/bugs/instantiation_detection/instantiation_detection.cpp:111:  std::cout << "\nSuccess" << std::endl;
./systemc/tests/systemc/bugs/sign_extension/sign_extension.cpp:43:  std::cout << #Var "=" << (Var).to_string(SC_BIN) << "\n"
./systemc/tests/systemc/utils/sc_report/test05/catch_actions.cpp:30:using std::cout;
./systemc/tests/systemc/utils/sc_report/test04/empty_msg_id.cpp:30:using std::cout;
./systemc/tests/systemc/utils/sc_vector/test05/test05.cpp:47:    std::cout << "\n" << from << "\n";
./systemc/tests/systemc/utils/sc_vector/test05/test05.cpp:50:      std::cout
./systemc/tests/systemc/utils/sc_vector/test05/test05.cpp:57:        std::cout
./systemc/tests/systemc/utils/sc_vector/test05/test05.cpp:62:      std::cout << std::endl;
./systemc/tests/systemc/utils/sc_vector/test04/test04.cpp:84:  std::cout << name() << " created @ "
./systemc/tests/systemc/utils/sc_vector/test06/test06.cpp:48:  std::cout << "\n-->-- " << header << " -->--\n";
./systemc/tests/systemc/utils/sc_vector/test06/test06.cpp:50:  std::cout << " - size: " << vec.size() << "\n";
./systemc/tests/systemc/utils/sc_vector/test06/test06.cpp:53:    std::cout << " - "
./systemc/tests/systemc/utils/sc_vector/test06/test06.cpp:57:  std::cout << "--<-- " << header << " --<--"
./systemc/tests/systemc/utils/sc_vector/test06/test06.cpp:109:  std::cout << "\nProgram completed" << std::endl;
./systemc/tests/systemc/utils/sc_vector/test07/test07.cpp:80:      std::cout << rpt.what() << std::endl;
./systemc/tests/systemc/compliance_1666/test00/test00.cpp:50:using std::cout;
./systemc/tests/systemc/compliance_1666/test211/test211.cpp:4:using std::cout;
./systemc/tests/systemc/compliance_1666/test235a/test235a.cpp:4:using std::cout;
./systemc/tests/systemc/compliance_1666/test203a/test203a.cpp:7:using std::cout;
./systemc/tests/systemc/compliance_1666/test219/test219.cpp:6:using std::cout;
./systemc/tests/systemc/compliance_1666/test234/test234.cpp:4:using std::cout;
./systemc/tests/systemc/compliance_1666/test220/test220.cpp:4:using std::cout;
./systemc/tests/systemc/compliance_1666/test209/test209.cpp:4:using std::cout;
./systemc/tests/systemc/compliance_1666/test206/test206.cpp:7:using std::cout;
./systemc/tests/systemc/compliance_1666/test208/test208.cpp:8:using std::cout;
./systemc/tests/systemc/compliance_1666/test235b/test235b.cpp:4:using std::cout;
./systemc/tests/systemc/compliance_1666/test106/test106.cpp:9:using std::cout;
./systemc/tests/systemc/compliance_1666/test233/test233.cpp:5:using std::cout;
./systemc/tests/systemc/compliance_1666/test210/test210.cpp:5:using std::cout;
./systemc/tests/systemc/compliance_1666/test202/test202.cpp:5:using std::cout;
./systemc/tests/systemc/compliance_1666/test203b/test203b.cpp:6:using std::cout;
./systemc/tests/systemc/compliance_1666/test207/test207.cpp:4:using std::cout;
./systemc/tests/systemc/compliance_1666/test205/test205.cpp:5:using std::cout;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:68:      std::cout << "\n*** trigger each driver in individual delta cycles" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:76:      std::cout << "\n*** trigger 1-2-3 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:84:      std::cout << "\n*** trigger 2-3-1 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:92:      std::cout << "\n*** trigger 3-1-2 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:100:      std::cout << "\n*** trigger 1-2-1-2 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:109:      std::cout << "\n*** trigger 2-1 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:116:      std::cout << "\n*** trigger 1-3 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:123:      std::cout << "\n*** trigger 1-4-1 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:131:      std::cout << "\n*** trigger 4-1 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:149:            std::cout << "\n" << msg.what() << "\n" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:155:        std::cout
./systemc/tests/systemc/communication/sc_signal/check_writer/test15/test15.cpp:173:    std::cout << "\nProgram completed" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test16/test16.cpp:68:      std::cout << "\n*** trigger each driver in individual delta cycles" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test16/test16.cpp:76:      std::cout << "\n*** trigger 1-2-3 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test16/test16.cpp:84:      std::cout << "\n*** trigger 2-3-1 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test16/test16.cpp:92:      std::cout << "\n*** trigger 3-1-2 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test16/test16.cpp:100:      std::cout << "\n*** trigger 1-1-2-2 in the same delta cycle" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test16/test16.cpp:122:        std::cout
./systemc/tests/systemc/communication/sc_signal/check_writer/test16/test16.cpp:156:    std::cout << "\nProgram completed" << std::endl;
./systemc/tests/systemc/communication/sc_signal/check_writer/test14/test14.cpp:60:    std::cout << "Program completed" << std::endl;
./systemc/tests/systemc/communication/sc_buffer/test02/sc_buffer_edge_reset.cpp:67:    std::cout << sc_get_current_process_handle().name()
./systemc/tests/include/ExplicitLTTarget.h:60:      std::cout << name() << ": Received write request: A = 0x"
./systemc/tests/include/ExplicitLTTarget.h:78:      std::cout << name() << ": Received read request: A = 0x"
./systemc/tests/include/ExplicitATTarget.h:68:        std::cout << name() << ": Received write request: A = 0x"
./systemc/tests/include/ExplicitATTarget.h:84:        std::cout << name() << ": Received read request: A = 0x"
./systemc/tests/include/SimpleBusAT.h:237:      std::cout << "ERROR: '" << name()
./systemc/tests/include/SimpleBusAT.h:251:      std::cout << "ERROR: '" << name()
./systemc/tests/include/SimpleLTInitiator1.h:100:      std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/include/SimpleLTInitiator1.h:106:      std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/include/SimpleLTInitiator1.h:115:      std::cout << name() << ": Received error response @ "
./systemc/tests/include/SimpleLTInitiator1.h:119:      std::cout << name() <<  ": Received ok response";
./systemc/tests/include/SimpleLTInitiator1.h:121:        std::cout << ": D = 0x" << std::hex << mData << std::dec;
./systemc/tests/include/SimpleLTInitiator1.h:123:      std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/tests/include/SimpleLTInitiator2.h:96:      std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/include/SimpleLTInitiator2.h:102:      std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/include/SimpleLTInitiator2.h:111:      std::cout << name() << ": Received error response @ "
./systemc/tests/include/SimpleLTInitiator2.h:115:      std::cout << name() <<  ": Received ok response";
./systemc/tests/include/SimpleLTInitiator2.h:117:        std::cout << ": D = 0x" << std::hex << mData << std::dec;
./systemc/tests/include/SimpleLTInitiator2.h:119:      std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/tests/include/SimpleLTInitiator3_DMI.h:105:      std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/include/SimpleLTInitiator3_DMI.h:111:      std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/include/SimpleLTInitiator3_DMI.h:120:      std::cout << name() << ": Received error response @ "
./systemc/tests/include/SimpleLTInitiator3_DMI.h:124:      std::cout << name() <<  ": Received ok response";
./systemc/tests/include/SimpleLTInitiator3_DMI.h:126:        std::cout << ": D = 0x" << std::hex << mData << std::dec;
./systemc/tests/include/SimpleLTInitiator3_DMI.h:128:      std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/tests/include/SimpleATTarget2.h:82:        std::cout << name() << ": Received write request: A = 0x"
./systemc/tests/include/SimpleATTarget2.h:90:        std::cout << name() << ": Received read request: A = 0x"
./systemc/tests/include/SimpleATInitiator2.h:145:      std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/include/SimpleATInitiator2.h:151:      std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/include/SimpleATInitiator2.h:160:      std::cout << name() << ": Received error response @ "
./systemc/tests/include/SimpleATInitiator2.h:164:      std::cout << name() <<  ": Received ok response";
./systemc/tests/include/SimpleATInitiator2.h:166:        std::cout << ": D = 0x" << std::hex << trans.getData() << std::dec;
./systemc/tests/include/SimpleATInitiator2.h:168:      std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/tests/include/SimpleLTTarget1.h:75:      std::cout << name() << ": Received write request: A = 0x"
./systemc/tests/include/SimpleLTTarget1.h:84:      std::cout << name() << ": Received read request: A = 0x"
./systemc/tests/include/SimpleATInitiator1.h:149:      std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/include/SimpleATInitiator1.h:155:      std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/include/SimpleATInitiator1.h:164:      std::cout << name() << ": Received error response @ "
./systemc/tests/include/SimpleATInitiator1.h:168:      std::cout << name() <<  ": Received ok response";
./systemc/tests/include/SimpleATInitiator1.h:170:        std::cout << ": D = 0x" << trans.getData() << std::dec;
./systemc/tests/include/SimpleATInitiator1.h:172:      std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/tests/include/CoreDecouplingLTInitiator.h:97:      std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/include/CoreDecouplingLTInitiator.h:106:      std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/include/CoreDecouplingLTInitiator.h:118:      std::cout << name() << ": Received error response @ "
./systemc/tests/include/CoreDecouplingLTInitiator.h:125:      std::cout << name() <<  ": Received ok response";
./systemc/tests/include/CoreDecouplingLTInitiator.h:127:          std::cout << ": D = 0x" << std::hex << mData << std::dec;
./systemc/tests/include/CoreDecouplingLTInitiator.h:129:      std::cout << " @ " << mQuantumKeeper.get_current_time()
./systemc/tests/include/CoreDecouplingLTInitiator.h:149:        std::cout << "Sync'ing..." << std::endl;
./systemc/tests/include/SimpleATTarget1.h:84:        std::cout << name() << ": Received write request: A = 0x"
./systemc/tests/include/SimpleATTarget1.h:92:        std::cout << name() << ": Received read request: A = 0x"
./systemc/tests/include/SimpleLTInitiator1_DMI.h:107:      std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/include/SimpleLTInitiator1_DMI.h:113:      std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/include/SimpleLTInitiator1_DMI.h:122:      std::cout << name() << ": Received error response @ "
./systemc/tests/include/SimpleLTInitiator1_DMI.h:126:      std::cout << name() <<  ": Received ok response";
./systemc/tests/include/SimpleLTInitiator1_DMI.h:128:        std::cout << ": D = 0x" << std::hex << mData << std::dec;
./systemc/tests/include/SimpleLTInitiator1_DMI.h:130:      std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/tests/include/SimpleLTInitiator1_DMI.h:228:          std::cout <<  name() << ": got DMI pointer invalidation"
./systemc/tests/include/SimpleLTInitiator1_DMI.h:233:          std::cout <<  name() << ": ignored DMI invalidation for addresses "
./systemc/tests/include/SimpleLTInitiator1_DMI.h:244:    std::cout <<  name() << ", <<SimpleLTInitiator1>>:" << std::endl
./systemc/tests/include/SimpleLTInitiator1_DMI.h:256:    std::cout << "Mem @" << std::hex << mBaseAddress << std::endl;
./systemc/tests/include/SimpleLTInitiator1_DMI.h:277:                std::cout << std::setw(2) << std::setfill('0')
./systemc/tests/include/SimpleLTInitiator1_DMI.h:282:                    std::cout << std::endl;
./systemc/tests/include/SimpleLTInitiator1_DMI.h:284:                    std::cout << " ";
./systemc/tests/include/SimpleLTInitiator1_DMI.h:291:        std::cout << "ERROR: debug transaction didn't give data." << std::endl;
./systemc/tests/include/SimpleLTInitiator1_DMI.h:293:    std::cout << std::dec << std::endl;  
./systemc/tests/include/SimpleLTTarget2.h:63:      std::cout << name() << ": Received write request: A = 0x"
./systemc/tests/include/SimpleLTTarget2.h:72:      std::cout << name() << ": Received read request: A = 0x"
./systemc/tests/include/SimpleLTInitiator2_DMI.h:107:      std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/include/SimpleLTInitiator2_DMI.h:113:      std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/include/SimpleLTInitiator2_DMI.h:122:      std::cout << name() << ": Received error response @ "
./systemc/tests/include/SimpleLTInitiator2_DMI.h:126:      std::cout << name() <<  ": Received ok response";
./systemc/tests/include/SimpleLTInitiator2_DMI.h:128:        std::cout << ": D = 0x" << std::hex << mData << std::dec;
./systemc/tests/include/SimpleLTInitiator2_DMI.h:130:      std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/tests/include/SimpleLTInitiator2_DMI.h:237:    std::cout <<  name() << ", <<SimpleLTInitiator1>>:" << std::endl
./systemc/tests/include/SimpleLTInitiator2_DMI.h:249:    std::cout << "Mem @" << std::hex << mBaseAddress << std::endl;
./systemc/tests/include/SimpleLTInitiator2_DMI.h:270:                std::cout << std::setw(2) << std::setfill('0')
./systemc/tests/include/SimpleLTInitiator2_DMI.h:275:                    std::cout << std::endl;
./systemc/tests/include/SimpleLTInitiator2_DMI.h:277:                    std::cout << " ";
./systemc/tests/include/SimpleLTInitiator2_DMI.h:284:        std::cout << "OK: debug transaction didn't give data." << std::endl;
./systemc/tests/include/SimpleLTInitiator2_DMI.h:286:    std::cout << std::dec << std::endl;  
./systemc/tests/include/SimpleLTInitiator3.h:96:      std::cout << name() << ": Send write request: A = 0x"
./systemc/tests/include/SimpleLTInitiator3.h:102:      std::cout << name() << ": Send read request: A = 0x"
./systemc/tests/include/SimpleLTInitiator3.h:111:      std::cout << name() << ": Received error response @ "
./systemc/tests/include/SimpleLTInitiator3.h:115:      std::cout << name() <<  ": Received ok response";
./systemc/tests/include/SimpleLTInitiator3.h:117:        std::cout << ": D = 0x" << std::hex << mData << std::dec;
./systemc/tests/include/SimpleLTInitiator3.h:119:      std::cout << " @ " << sc_core::sc_time_stamp() << std::endl;
./systemc/core/process.cc:270:            std::cout << "Terminating process " << name() << std::endl;
./systemc/core/object.hh:63:    void print(std::ostream & =std::cout) const;
./systemc/core/object.hh:64:    void dump(std::ostream & =std::cout) const;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/fifo.hh:115:            std::cout << "empty" << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/fifo.hh:117:            std::cout << "full" << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/fifo.hh:119:        std::cout << "size " << size() << " - " << used() << " used "
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/fifo.hh:121:        std::cout << "readable " << m_num_readable << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/fifo.hh:122:        std::cout << "written/read " << m_num_written << "/" << m_num_read
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/circular_buffer.hh:92:    std::cout << "Buffer debug" << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/circular_buffer.hh:93:    std::cout << "Size : " << size() << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/circular_buffer.hh:94:    std::cout << "Free/Used " << free() << "/" << used() << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/circular_buffer.hh:95:    std::cout << "Indices : r/w = " << m_ri << "/" << m_wi << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/circular_buffer.hh:98:        std::cout << "empty" << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/circular_buffer.hh:102:        std::cout << "full" << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/circular_buffer.hh:105:    std::cout << "Data : " << std::endl;
./systemc/ext/tlm_core/1/req_rsp/channels/fifo/circular_buffer.hh:107:        std::cout << peek_data( i ) << std::endl;
./systemc/ext/systemc.h:66:using std::cout;
./systemc/ext/channel/sc_signal.hh:214:    virtual void print(std::ostream &os=std::cout) const { os << m_cur_val; }
./systemc/ext/channel/sc_signal.hh:216:    dump(std::ostream &os=std::cout) const
./systemc/ext/channel/sc_fifo.hh:161:    print(std::ostream &os=std::cout) const
./systemc/ext/channel/sc_fifo.hh:169:    dump(std::ostream &os=std::cout) const
./systemc/ext/dt/int/sc_unsigned.hh:656:    void print(::std::ostream &os=::std::cout) const { os << to_bool(); }
./systemc/ext/dt/int/sc_unsigned.hh:797:    print(::std::ostream &os=::std::cout) const
./systemc/ext/dt/int/sc_unsigned.hh:1117:    print(::std::ostream &os=::std::cout) const
./systemc/ext/dt/int/sc_unsigned.hh:1123:    void dump(::std::ostream &os=::std::cout) const;
./systemc/ext/dt/int/sc_signed.hh:748:    void print(::std::ostream &os=::std::cout) const { os << to_bool(); }
./systemc/ext/dt/int/sc_signed.hh:888:    print(::std::ostream &os=::std::cout) const
./systemc/ext/dt/int/sc_signed.hh:1212:    print(::std::ostream &os=::std::cout) const
./systemc/ext/dt/int/sc_signed.hh:1219:    void dump(::std::ostream &os=::std::cout) const;
./systemc/ext/dt/int/sc_int_base.hh:222:    void print(::std::ostream& os=::std::cout) const { os << to_bool(); }
./systemc/ext/dt/int/sc_int_base.hh:369:    print(::std::ostream &os=::std::cout) const
./systemc/ext/dt/int/sc_int_base.hh:929:    print(::std::ostream &os=::std::cout) const
./systemc/ext/dt/int/sc_length_param.hh:100:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/int/sc_length_param.hh:101:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/int/sc_uint_base.hh:210:    void print(::std::ostream &os=::std::cout) const { os << to_bool(); }
./systemc/ext/dt/int/sc_uint_base.hh:350:    print(::std::ostream &os=::std::cout) const
./systemc/ext/dt/int/sc_uint_base.hh:852:    print(::std::ostream &os=::std::cout) const
./systemc/ext/dt/misc/sc_concatref.hh:419:    void print(::std::ostream &os=::std::cout) const { os << this->value(); }
./systemc/ext/dt/bit/sc_bit_proxies.hh:143:    void print(::std::ostream &os=::std::cout) const { os << to_char(); }
./systemc/ext/dt/bit/sc_bit.hh:245:    void print(::std::ostream &os=::std::cout) const { os << to_bool(); }
./systemc/ext/dt/bit/sc_logic.hh:251:    void print(::std::ostream &os=::std::cout) const { os << to_char(); }
./systemc/ext/dt/bit/sc_proxy.hh:447:    print(::std::ostream &os=::std::cout) const
./systemc/ext/dt/fx/sc_fxtype_params.hh:106:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxtype_params.hh:107:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxval.hh:347:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxval.hh:349:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxval.hh:630:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxval.hh:632:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:135:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:137:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:192:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:194:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:325:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:327:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:460:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:462:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:803:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:805:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:1161:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxnum.hh:1163:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxcast_switch.hh:88:    void print(::std::ostream & =::std::cout) const;
./systemc/ext/dt/fx/sc_fxcast_switch.hh:89:    void dump(::std::ostream & =::std::cout) const;
./systemc/ext/core/sc_object.hh:58:    virtual void print(std::ostream & =std::cout) const;
./systemc/ext/core/sc_object.hh:59:    virtual void dump(std::ostream & =std::cout) const;
./systemc/ext/core/sc_time.hh:82:    void print(std::ostream & =std::cout) const;
./mem/ruby/network/garnet/GarnetNetwork.cc:149:            router->printAggregateFaultProbability(std::cout);
./mem/ruby/network/garnet/GarnetNetwork.cc:150:            router->printFaultVector(std::cout);
./mem/ruby/network/fault_model/FaultModel.cc:253:    std::cout << "--- PRINTING configurations ---\n";
./mem/ruby/network/fault_model/FaultModel.cc:255:        std::cout << "(" << record << ") ";
./mem/ruby/network/fault_model/FaultModel.cc:256:        std::cout << "VCs=" << configurations[record].vcs << " ";
./mem/ruby/network/fault_model/FaultModel.cc:257:        std::cout << "Buff/VC=" << configurations[record].buff_per_vc << " [";
./mem/ruby/network/fault_model/FaultModel.cc:261:            std::cout <<
./mem/ruby/network/fault_model/FaultModel.cc:263:            std::cout << "% ";
./mem/ruby/network/fault_model/FaultModel.cc:265:        std::cout << "]\n";
./mem/ruby/network/fault_model/FaultModel.cc:267:    std::cout << "--- PRINTING temperature weights ---\n";
./mem/ruby/network/fault_model/FaultModel.cc:269:        std::cout << "temperature=" << record << " => ";
./mem/ruby/network/fault_model/FaultModel.cc:270:        std::cout << "weight=" << temperature_weights[record];
./mem/ruby/network/fault_model/FaultModel.cc:271:        std::cout << "\n";
./learning_gem5/part2/simple_object.cc:39:    std::cout << "Hello World! From a SimObject!" << std::endl;
./cpu/o3/iew.cc:1079:    std::cout << "Available Instructions: ";
./cpu/o3/iew.cc:1083:        if (inst%3==0) std::cout << "\n\t";
./cpu/o3/iew.cc:1085:        std::cout << "PC: " << fromIssue->insts[inst]->pcState()
./cpu/o3/iew.cc:1093:    std::cout << "\n";
./cpu/o3/fu_pool.cc:212:    std::cout << "Function Unit Pool (" << name() << ")\n";
./cpu/o3/fu_pool.cc:213:    std::cout << "======================================\n";
./cpu/o3/fu_pool.cc:214:    std::cout << "Free List:\n";
./cpu/o3/fu_pool.cc:221:        std::cout << "  [" << i << "] : ";
./cpu/o3/fu_pool.cc:223:        std::cout << funcUnits[i]->name << " ";
./cpu/o3/fu_pool.cc:225:        std::cout << "\n";
./cpu/o3/fu_pool.cc:228:    std::cout << "======================================\n";
./cpu/o3/fu_pool.cc:229:    std::cout << "Busy List:\n";
./cpu/o3/fu_pool.cc:235:        std::cout << "  [" << i << "] : ";
./cpu/o3/fu_pool.cc:237:        std::cout << funcUnits[i]->name << " ";
./cpu/o3/fu_pool.cc:239:        std::cout << "\n";
./cpu/o3/dyn_inst.cc:290:    std::cout << staticInst->disassemble(pc->instAddr());
./cpu/pred/bpred_unit.cc:140:	std::cout << seqNum << std::endl;
